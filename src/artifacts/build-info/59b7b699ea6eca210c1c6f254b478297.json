{
	"id": "59b7b699ea6eca210c1c6f254b478297",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Mediscan.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Mediscan is AccessControl {\n    uint256 constant MAX_INT = 2**256 - 1;\n\n    bytes32 constant public USER_ADMIN_ROLE = keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\"));\n    bytes32 constant public PAYMENT_ADMIN_ROLE = keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\"));\n    bytes32 constant public HEALTH_PROFESSIONAL_FULL = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\"));\n    bytes32 constant public HEALTH_PROFESSIONAL_MID = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\"));\n    bytes32 constant public HEALTH_PROFESSIONAL_LOW = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\"));\n\n    mapping(bytes32 => bool) public registeredFaceHashes;\n\n    mapping(bytes32 => mapping(address => uint256)) public balanceForTokenForFaceHash;\n    mapping(bytes32 => uint256) public baseTokenBalanceForFaceHash;\n\n    event SendTokenToFaceHash(bytes32 indexed _faceHash, address indexed _token, uint256 indexed _amount);\n    event SendChainBaseTokenToFaceHash(bytes32 indexed _faceHash, uint256 indexed _amount);\n    event PayoutTokenForFaceHash(bytes32 indexed _faceHash, address indexed _token, uint256 indexed _amount);\n    event PayoutChainBaseTokenToFaceHash(bytes32 indexed _faceHash, address indexed _account);\n    event VerifyHealthWorker(address indexed _account, uint256 indexed _accessLevel);\n    event RegisterFaceHash(bytes32 indexed _faceHash);\n\n    modifier onlyAdmin() {\n        _checkRole(DEFAULT_ADMIN_ROLE);\n        _;\n    }\n\n    modifier onlyUserAdmin() {\n        _checkRole(USER_ADMIN_ROLE);\n        _;\n    }\n\n    modifier onlyPaymentAdmin() {\n        _checkRole(PAYMENT_ADMIN_ROLE);\n        _;\n    }\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setRoleAdmin(USER_ADMIN_ROLE, DEFAULT_ADMIN_ROLE);\n        _setRoleAdmin(HEALTH_PROFESSIONAL_FULL, DEFAULT_ADMIN_ROLE);\n        _setRoleAdmin(HEALTH_PROFESSIONAL_MID, DEFAULT_ADMIN_ROLE);\n        _setRoleAdmin(HEALTH_PROFESSIONAL_LOW, DEFAULT_ADMIN_ROLE);\n    }\n\n    function getAccessLevelForAddress(address _address) external view returns (uint256) {\n        if (hasRole(HEALTH_PROFESSIONAL_FULL, _address)) {\n            return 0;\n        } else if (hasRole(HEALTH_PROFESSIONAL_MID, _address)) {\n            return 1;\n        } else if (hasRole(HEALTH_PROFESSIONAL_LOW, _address)) {\n            return 2;\n        } else {\n            return MAX_INT;\n        }\n    }\n\n    function isFaceHashRegistered(bytes32 _hash) external view returns (bool) {\n        return registeredFaceHashes[_hash];\n    }\n\n    function sendTokenToFaceHash(bytes32 _faceHash, address _token, uint256 _amount) external {\n        require(registeredFaceHashes[_faceHash], \"Face hash not registered\");\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        balanceForTokenForFaceHash[_faceHash][_token] += _amount;\n        emit SendTokenToFaceHash(_faceHash, _token, _amount);\n    }\n\n    function sendChainBaseTokenToFaceHash(bytes32 _faceHash) external payable {\n        require(registeredFaceHashes[_faceHash], \"Face hash not registered\");\n        baseTokenBalanceForFaceHash[_faceHash] += msg.value;\n        emit SendChainBaseTokenToFaceHash(_faceHash, msg.value);\n    }\n\n    function payoutTokenForFaceHash(bytes32 _faceHash, address _token,  address _account) external onlyPaymentAdmin {\n        require(registeredFaceHashes[_faceHash], \"Face hash not registered\");\n        uint256 amount = balanceForTokenForFaceHash[_faceHash][_token];\n        IERC20(_token).transfer(_account, amount);\n        balanceForTokenForFaceHash[_faceHash][_token] -= amount;\n        emit PayoutTokenForFaceHash(_faceHash, _token, amount);\n    }\n\n    function payoutChainBaseTokenToFaceHash(bytes32 _faceHash, address _account) external onlyPaymentAdmin {\n        require(registeredFaceHashes[_faceHash], \"Face hash not registered\");\n        uint256 amount = baseTokenBalanceForFaceHash[_faceHash];\n        (bool success, ) = _account.call{value: amount}(\"\");\n        require(success, \"Payout failed\");\n        baseTokenBalanceForFaceHash[_faceHash] -= amount;\n        emit PayoutChainBaseTokenToFaceHash(_faceHash, _account);\n    }\n\n    function addUserAdmin(address _account) external onlyAdmin {\n        _grantRole(USER_ADMIN_ROLE, _account);\n    }\n\n    function removeUserAdmin(address _account) external onlyAdmin {\n        _revokeRole(USER_ADMIN_ROLE, _account);\n    }\n\n    function addPaymentAdmin(address _account) external onlyAdmin {\n        _grantRole(PAYMENT_ADMIN_ROLE, _account);\n    }\n\n    function removePaymentAdmin(address _account) external onlyAdmin {\n        _revokeRole(PAYMENT_ADMIN_ROLE, _account);\n    }\n\n    function verifyHealthWorker(address _account, uint256 _accessLevel) external onlyAdmin {\n        if (_accessLevel == 0) {\n            _grantRole(HEALTH_PROFESSIONAL_FULL, _account);\n        } else if (_accessLevel == 1) {\n            _grantRole(HEALTH_PROFESSIONAL_MID, _account);\n        } else if (_accessLevel == 2) {\n            _grantRole(HEALTH_PROFESSIONAL_LOW, _account);\n        } else {\n            revert(\"Unrecognized access level\");\n        }\n        emit VerifyHealthWorker(_account, _accessLevel);\n    }\n\n    function registerFaceHash(bytes32 _faceHash) external onlyUserAdmin {\n        registeredFaceHashes[_faceHash] = true;\n        emit RegisterFaceHash(_faceHash);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 542,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 552,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 554,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Mediscan.sol": {
				"Mediscan": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "PayoutChainBaseTokenToFaceHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "PayoutTokenForFaceHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								}
							],
							"name": "RegisterFaceHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SendChainBaseTokenToFaceHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SendTokenToFaceHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_accessLevel",
									"type": "uint256"
								}
							],
							"name": "VerifyHealthWorker",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HEALTH_PROFESSIONAL_FULL",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HEALTH_PROFESSIONAL_LOW",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HEALTH_PROFESSIONAL_MID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAYMENT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USER_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "addPaymentAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "addUserAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceForTokenForFaceHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "baseTokenBalanceForFaceHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getAccessLevelForAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "isFaceHashRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "payoutChainBaseTokenToFaceHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "payoutTokenForFaceHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								}
							],
							"name": "registerFaceHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "registeredFaceHashes",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "removePaymentAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "removeUserAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								}
							],
							"name": "sendChainBaseTokenToFaceHash",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_faceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendTokenToFaceHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_accessLevel",
									"type": "uint256"
								}
							],
							"name": "verifyHealthWorker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Mediscan.sol\":231:5551  contract Mediscan is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"src/Mediscan.sol\":1867:2205  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/Mediscan.sol\":1891:1933  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Mediscan.sol\":1902:1920  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/Mediscan.sol\":1922:1932  msg.sender */\n  caller\n    /* \"src/Mediscan.sol\":1891:1901  _grantRole */\n  shl(0x20, tag_5)\n    /* \"src/Mediscan.sol\":1891:1933  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n  pop\n    /* \"src/Mediscan.sol\":1943:1993  _setRoleAdmin(USER_ADMIN_ROLE, DEFAULT_ADMIN_ROLE) */\n  tag_6\n    /* \"src/Mediscan.sol\":368:403  abi.encodePacked(\"USER_ADMIN_ROLE\") */\n  add(0x20, mload(0x40))\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/Mediscan.sol\":358:404  keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Mediscan.sol\":1974:1992  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/Mediscan.sol\":1943:1956  _setRoleAdmin */\n  shl(0x20, tag_9)\n    /* \"src/Mediscan.sol\":1943:1993  _setRoleAdmin(USER_ADMIN_ROLE, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"src/Mediscan.sol\":2003:2062  _setRoleAdmin(HEALTH_PROFESSIONAL_FULL, DEFAULT_ADMIN_ROLE) */\n  tag_10\n    /* \"src/Mediscan.sol\":571:615  abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\") */\n  add(0x20, mload(0x40))\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/Mediscan.sol\":561:616  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Mediscan.sol\":2043:2061  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/Mediscan.sol\":2003:2016  _setRoleAdmin */\n  shl(0x20, tag_9)\n    /* \"src/Mediscan.sol\":2003:2062  _setRoleAdmin(HEALTH_PROFESSIONAL_FULL, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"src/Mediscan.sol\":2072:2130  _setRoleAdmin(HEALTH_PROFESSIONAL_MID, DEFAULT_ADMIN_ROLE) */\n  tag_13\n    /* \"src/Mediscan.sol\":682:725  abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\") */\n  add(0x20, mload(0x40))\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/Mediscan.sol\":672:726  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Mediscan.sol\":2111:2129  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/Mediscan.sol\":2072:2085  _setRoleAdmin */\n  shl(0x20, tag_9)\n    /* \"src/Mediscan.sol\":2072:2130  _setRoleAdmin(HEALTH_PROFESSIONAL_MID, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"src/Mediscan.sol\":2140:2198  _setRoleAdmin(HEALTH_PROFESSIONAL_LOW, DEFAULT_ADMIN_ROLE) */\n  tag_16\n    /* \"src/Mediscan.sol\":792:835  abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\") */\n  add(0x20, mload(0x40))\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/Mediscan.sol\":782:836  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Mediscan.sol\":2179:2197  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/Mediscan.sol\":2140:2153  _setRoleAdmin */\n  shl(0x20, tag_9)\n    /* \"src/Mediscan.sol\":2140:2198  _setRoleAdmin(HEALTH_PROFESSIONAL_LOW, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"src/Mediscan.sol\":231:5551  contract Mediscan is AccessControl {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_24\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_20:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5822:5826  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5821  getRoleAdmin */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5827  bytes32 previousAdminRole = getRoleAdmin(role) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5871  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5843  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5844:5848  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5859  _roles[role].adminRole */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5928:5937  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5909:5926  previousAdminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5903:5907  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5771:5945  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:155   */\ntag_33:\n    /* \"#utility.yul\":109:120   */\n  0x00\n    /* \"#utility.yul\":146:149   */\n  dup2\n    /* \"#utility.yul\":131:149   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:155   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":161:326   */\ntag_34:\n    /* \"#utility.yul\":301:318   */\n  0x555345525f41444d494e5f524f4c450000000000000000000000000000000000\n    /* \"#utility.yul\":297:298   */\n  0x00\n    /* \"#utility.yul\":289:295   */\n  dup3\n    /* \"#utility.yul\":285:299   */\n  add\n    /* \"#utility.yul\":278:319   */\n  mstore\n    /* \"#utility.yul\":161:326   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":332:734   */\ntag_35:\n    /* \"#utility.yul\":492:495   */\n  0x00\n    /* \"#utility.yul\":513:598   */\n  tag_46\n    /* \"#utility.yul\":595:597   */\n  0x0f\n    /* \"#utility.yul\":590:593   */\n  dup4\n    /* \"#utility.yul\":513:598   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":506:598   */\n  swap2\n  pop\n    /* \"#utility.yul\":607:700   */\n  tag_47\n    /* \"#utility.yul\":696:699   */\n  dup3\n    /* \"#utility.yul\":607:700   */\n  tag_34\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":725:727   */\n  0x0f\n    /* \"#utility.yul\":720:723   */\n  dup3\n    /* \"#utility.yul\":716:728   */\n  add\n    /* \"#utility.yul\":709:728   */\n  swap1\n  pop\n    /* \"#utility.yul\":332:734   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":740:1121   */\ntag_8:\n    /* \"#utility.yul\":925:928   */\n  0x00\n    /* \"#utility.yul\":947:1095   */\n  tag_49\n    /* \"#utility.yul\":1091:1094   */\n  dup3\n    /* \"#utility.yul\":947:1095   */\n  tag_35\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":940:1095   */\n  swap2\n  pop\n    /* \"#utility.yul\":1112:1115   */\n  dup2\n    /* \"#utility.yul\":1105:1115   */\n  swap1\n  pop\n    /* \"#utility.yul\":740:1121   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1127:1301   */\ntag_36:\n    /* \"#utility.yul\":1267:1293   */\n  0x4845414c54485f50524f46455353494f4e414c5f46554c4c0000000000000000\n    /* \"#utility.yul\":1263:1264   */\n  0x00\n    /* \"#utility.yul\":1255:1261   */\n  dup3\n    /* \"#utility.yul\":1251:1265   */\n  add\n    /* \"#utility.yul\":1244:1294   */\n  mstore\n    /* \"#utility.yul\":1127:1301   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1709   */\ntag_37:\n    /* \"#utility.yul\":1467:1470   */\n  0x00\n    /* \"#utility.yul\":1488:1573   */\n  tag_52\n    /* \"#utility.yul\":1570:1572   */\n  0x18\n    /* \"#utility.yul\":1565:1568   */\n  dup4\n    /* \"#utility.yul\":1488:1573   */\n  tag_33\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1481:1573   */\n  swap2\n  pop\n    /* \"#utility.yul\":1582:1675   */\n  tag_53\n    /* \"#utility.yul\":1671:1674   */\n  dup3\n    /* \"#utility.yul\":1582:1675   */\n  tag_36\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1700:1702   */\n  0x18\n    /* \"#utility.yul\":1695:1698   */\n  dup3\n    /* \"#utility.yul\":1691:1703   */\n  add\n    /* \"#utility.yul\":1684:1703   */\n  swap1\n  pop\n    /* \"#utility.yul\":1307:1709   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1715:2096   */\ntag_12:\n    /* \"#utility.yul\":1900:1903   */\n  0x00\n    /* \"#utility.yul\":1922:2070   */\n  tag_55\n    /* \"#utility.yul\":2066:2069   */\n  dup3\n    /* \"#utility.yul\":1922:2070   */\n  tag_37\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1915:2070   */\n  swap2\n  pop\n    /* \"#utility.yul\":2087:2090   */\n  dup2\n    /* \"#utility.yul\":2080:2090   */\n  swap1\n  pop\n    /* \"#utility.yul\":1715:2096   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2102:2275   */\ntag_38:\n    /* \"#utility.yul\":2242:2267   */\n  0x4845414c54485f50524f46455353494f4e414c5f4d4944000000000000000000\n    /* \"#utility.yul\":2238:2239   */\n  0x00\n    /* \"#utility.yul\":2230:2236   */\n  dup3\n    /* \"#utility.yul\":2226:2240   */\n  add\n    /* \"#utility.yul\":2219:2268   */\n  mstore\n    /* \"#utility.yul\":2102:2275   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2281:2683   */\ntag_39:\n    /* \"#utility.yul\":2441:2444   */\n  0x00\n    /* \"#utility.yul\":2462:2547   */\n  tag_58\n    /* \"#utility.yul\":2544:2546   */\n  0x17\n    /* \"#utility.yul\":2539:2542   */\n  dup4\n    /* \"#utility.yul\":2462:2547   */\n  tag_33\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2455:2547   */\n  swap2\n  pop\n    /* \"#utility.yul\":2556:2649   */\n  tag_59\n    /* \"#utility.yul\":2645:2648   */\n  dup3\n    /* \"#utility.yul\":2556:2649   */\n  tag_38\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2674:2676   */\n  0x17\n    /* \"#utility.yul\":2669:2672   */\n  dup3\n    /* \"#utility.yul\":2665:2677   */\n  add\n    /* \"#utility.yul\":2658:2677   */\n  swap1\n  pop\n    /* \"#utility.yul\":2281:2683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2689:3070   */\ntag_15:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2896:3044   */\n  tag_61\n    /* \"#utility.yul\":3040:3043   */\n  dup3\n    /* \"#utility.yul\":2896:3044   */\n  tag_39\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2889:3044   */\n  swap2\n  pop\n    /* \"#utility.yul\":3061:3064   */\n  dup2\n    /* \"#utility.yul\":3054:3064   */\n  swap1\n  pop\n    /* \"#utility.yul\":2689:3070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3076:3249   */\ntag_40:\n    /* \"#utility.yul\":3216:3241   */\n  0x4845414c54485f50524f46455353494f4e414c5f4c4f57000000000000000000\n    /* \"#utility.yul\":3212:3213   */\n  0x00\n    /* \"#utility.yul\":3204:3210   */\n  dup3\n    /* \"#utility.yul\":3200:3214   */\n  add\n    /* \"#utility.yul\":3193:3242   */\n  mstore\n    /* \"#utility.yul\":3076:3249   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3657   */\ntag_41:\n    /* \"#utility.yul\":3415:3418   */\n  0x00\n    /* \"#utility.yul\":3436:3521   */\n  tag_64\n    /* \"#utility.yul\":3518:3520   */\n  0x17\n    /* \"#utility.yul\":3513:3516   */\n  dup4\n    /* \"#utility.yul\":3436:3521   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":3429:3521   */\n  swap2\n  pop\n    /* \"#utility.yul\":3530:3623   */\n  tag_65\n    /* \"#utility.yul\":3619:3622   */\n  dup3\n    /* \"#utility.yul\":3530:3623   */\n  tag_40\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3648:3650   */\n  0x17\n    /* \"#utility.yul\":3643:3646   */\n  dup3\n    /* \"#utility.yul\":3639:3651   */\n  add\n    /* \"#utility.yul\":3632:3651   */\n  swap1\n  pop\n    /* \"#utility.yul\":3255:3657   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3663:4044   */\ntag_18:\n    /* \"#utility.yul\":3848:3851   */\n  0x00\n    /* \"#utility.yul\":3870:4018   */\n  tag_67\n    /* \"#utility.yul\":4014:4017   */\n  dup3\n    /* \"#utility.yul\":3870:4018   */\n  tag_41\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3863:4018   */\n  swap2\n  pop\n    /* \"#utility.yul\":4035:4038   */\n  dup2\n    /* \"#utility.yul\":4028:4038   */\n  swap1\n  pop\n    /* \"#utility.yul\":3663:4044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/Mediscan.sol\":231:5551  contract Mediscan is AccessControl {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Mediscan.sol\":231:5551  contract Mediscan is AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x585f4c49\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd6770522\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe096cfed\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe096cfed\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe6d6384a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf0f7af4d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2c80089\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xd6770522\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd7b8a07a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd65ab1f\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xa217fddf\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb24b56b0\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb89f9ac1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x585f4c49\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5ea06a9c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x3fd2c4f1\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3fd2c4f1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48570ee6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x51fea917\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x55f93e6e\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f432261\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x09c19362\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0adbbdd3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fa750ff\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24ccc1a6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":2618:2743  function isFaceHashRegistered(bytes32 _hash) external view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":2749:3125  function sendTokenToFaceHash(bytes32 _faceHash, address _token, uint256 _amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"src/Mediscan.sol\":3131:3416  function sendChainBaseTokenToFaceHash(bytes32 _faceHash) external payable {... */\n    tag_5:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":902:983  mapping(bytes32 => mapping(address => uint256)) public balanceForTokenForFaceHash */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"src/Mediscan.sol\":843:895  mapping(bytes32 => bool) public registeredFaceHashes */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"src/Mediscan.sol\":3422:3871  function payoutTokenForFaceHash(bytes32 _faceHash, address _token,  address _account) external onlyPaymentAdmin {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"src/Mediscan.sol\":4860:5378  function verifyHealthWorker(address _account, uint256 _accessLevel) external onlyAdmin {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"src/Mediscan.sol\":2211:2612  function getAccessLevelForAddress(address _address) external view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":3877:4358  function payoutChainBaseTokenToFaceHash(bytes32 _faceHash, address _account) external onlyPaymentAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"src/Mediscan.sol\":732:836  bytes32 constant public HEALTH_PROFESSIONAL_LOW = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":4606:4725  function addPaymentAdmin(address _account) external onlyAdmin {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":410:504  bytes32 constant public PAYMENT_ADMIN_ROLE = keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":4364:4477  function addUserAdmin(address _account) external onlyAdmin {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"src/Mediscan.sol\":622:726  bytes32 constant public HEALTH_PROFESSIONAL_MID = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":4731:4854  function removePaymentAdmin(address _account) external onlyAdmin {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"src/Mediscan.sol\":5384:5549  function registerFaceHash(bytes32 _faceHash) external onlyUserAdmin {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"src/Mediscan.sol\":4483:4600  function removeUserAdmin(address _account) external onlyAdmin {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"src/Mediscan.sol\":989:1051  mapping(bytes32 => uint256) public baseTokenBalanceForFaceHash */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":510:616  bytes32 constant public HEALTH_PROFESSIONAL_FULL = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Mediscan.sol\":316:404  bytes32 constant public USER_ADMIN_ROLE = keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_161\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":2618:2743  function isFaceHashRegistered(bytes32 _hash) external view returns (bool) {... */\n    tag_46:\n        /* \"src/Mediscan.sol\":2686:2690  bool */\n      0x00\n        /* \"src/Mediscan.sol\":2709:2729  registeredFaceHashes */\n      0x01\n        /* \"src/Mediscan.sol\":2709:2736  registeredFaceHashes[_hash] */\n      0x00\n        /* \"src/Mediscan.sol\":2730:2735  _hash */\n      dup4\n        /* \"src/Mediscan.sol\":2709:2736  registeredFaceHashes[_hash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Mediscan.sol\":2702:2736  return registeredFaceHashes[_hash] */\n      swap1\n      pop\n        /* \"src/Mediscan.sol\":2618:2743  function isFaceHashRegistered(bytes32 _hash) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":2749:3125  function sendTokenToFaceHash(bytes32 _faceHash, address _token, uint256 _amount) external {... */\n    tag_52:\n        /* \"src/Mediscan.sol\":2857:2877  registeredFaceHashes */\n      0x01\n        /* \"src/Mediscan.sol\":2857:2888  registeredFaceHashes[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":2878:2887  _faceHash */\n      dup5\n        /* \"src/Mediscan.sol\":2857:2888  registeredFaceHashes[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Mediscan.sol\":2849:2917  require(registeredFaceHashes[_faceHash], \"Face hash not registered\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"src/Mediscan.sol\":2934:2940  _token */\n      dup2\n        /* \"src/Mediscan.sol\":2927:2954  IERC20(_token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/Mediscan.sol\":2955:2965  msg.sender */\n      caller\n        /* \"src/Mediscan.sol\":2975:2979  this */\n      address\n        /* \"src/Mediscan.sol\":2982:2989  _amount */\n      dup5\n        /* \"src/Mediscan.sol\":2927:2990  IERC20(_token).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      pop\n        /* \"src/Mediscan.sol\":3049:3056  _amount */\n      dup1\n        /* \"src/Mediscan.sol\":3000:3026  balanceForTokenForFaceHash */\n      0x02\n        /* \"src/Mediscan.sol\":3000:3037  balanceForTokenForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3027:3036  _faceHash */\n      dup6\n        /* \"src/Mediscan.sol\":3000:3037  balanceForTokenForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Mediscan.sol\":3000:3045  balanceForTokenForFaceHash[_faceHash][_token] */\n      0x00\n        /* \"src/Mediscan.sol\":3038:3044  _token */\n      dup5\n        /* \"src/Mediscan.sol\":3000:3045  balanceForTokenForFaceHash[_faceHash][_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Mediscan.sol\":3000:3056  balanceForTokenForFaceHash[_faceHash][_token] += _amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Mediscan.sol\":3110:3117  _amount */\n      dup1\n        /* \"src/Mediscan.sol\":3102:3108  _token */\n      dup3\n        /* \"src/Mediscan.sol\":3071:3118  SendTokenToFaceHash(_faceHash, _token, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Mediscan.sol\":3091:3100  _faceHash */\n      dup5\n        /* \"src/Mediscan.sol\":3071:3118  SendTokenToFaceHash(_faceHash, _token, _amount) */\n      0x7a143568e7a2e32f33c2ab85bb8cb9ff7e78d00e650d6973c8873bbdc075e811\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/Mediscan.sol\":2749:3125  function sendTokenToFaceHash(bytes32 _faceHash, address _token, uint256 _amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":3131:3416  function sendChainBaseTokenToFaceHash(bytes32 _faceHash) external payable {... */\n    tag_55:\n        /* \"src/Mediscan.sol\":3223:3243  registeredFaceHashes */\n      0x01\n        /* \"src/Mediscan.sol\":3223:3254  registeredFaceHashes[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3244:3253  _faceHash */\n      dup3\n        /* \"src/Mediscan.sol\":3223:3254  registeredFaceHashes[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Mediscan.sol\":3215:3283  require(registeredFaceHashes[_faceHash], \"Face hash not registered\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_168\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"src/Mediscan.sol\":3335:3344  msg.value */\n      callvalue\n        /* \"src/Mediscan.sol\":3293:3320  baseTokenBalanceForFaceHash */\n      0x03\n        /* \"src/Mediscan.sol\":3293:3331  baseTokenBalanceForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3321:3330  _faceHash */\n      dup4\n        /* \"src/Mediscan.sol\":3293:3331  baseTokenBalanceForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Mediscan.sol\":3293:3344  baseTokenBalanceForFaceHash[_faceHash] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_180\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_180:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Mediscan.sol\":3399:3408  msg.value */\n      callvalue\n        /* \"src/Mediscan.sol\":3388:3397  _faceHash */\n      dup2\n        /* \"src/Mediscan.sol\":3359:3409  SendChainBaseTokenToFaceHash(_faceHash, msg.value) */\n      0xacc0fd4b3527d0953abdce4ac9a5f786e3d780a3b4bbefefb360a8642429e0f6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Mediscan.sol\":3131:3416  function sendChainBaseTokenToFaceHash(bytes32 _faceHash) external payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":902:983  mapping(bytes32 => mapping(address => uint256)) public balanceForTokenForFaceHash */\n    tag_66:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_59\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":843:895  mapping(bytes32 => bool) public registeredFaceHashes */\n    tag_76:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_193:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":3422:3871  function payoutTokenForFaceHash(bytes32 _faceHash, address _token,  address _account) external onlyPaymentAdmin {... */\n    tag_86:\n        /* \"src/Mediscan.sol\":1813:1843  _checkRole(PAYMENT_ADMIN_ROLE) */\n      tag_196\n        /* \"src/Mediscan.sol\":465:503  abi.encodePacked(\"PAYMENT_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":455:504  keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":1813:1823  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1813:1843  _checkRole(PAYMENT_ADMIN_ROLE) */\n      jump\t// in\n    tag_196:\n        /* \"src/Mediscan.sol\":3552:3572  registeredFaceHashes */\n      0x01\n        /* \"src/Mediscan.sol\":3552:3583  registeredFaceHashes[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3573:3582  _faceHash */\n      dup5\n        /* \"src/Mediscan.sol\":3552:3583  registeredFaceHashes[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Mediscan.sol\":3544:3612  require(registeredFaceHashes[_faceHash], \"Face hash not registered\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_168\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"src/Mediscan.sol\":3622:3636  uint256 amount */\n      0x00\n        /* \"src/Mediscan.sol\":3639:3665  balanceForTokenForFaceHash */\n      0x02\n        /* \"src/Mediscan.sol\":3639:3676  balanceForTokenForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3666:3675  _faceHash */\n      dup6\n        /* \"src/Mediscan.sol\":3639:3676  balanceForTokenForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Mediscan.sol\":3639:3684  balanceForTokenForFaceHash[_faceHash][_token] */\n      0x00\n        /* \"src/Mediscan.sol\":3677:3683  _token */\n      dup5\n        /* \"src/Mediscan.sol\":3639:3684  balanceForTokenForFaceHash[_faceHash][_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Mediscan.sol\":3622:3684  uint256 amount = balanceForTokenForFaceHash[_faceHash][_token] */\n      swap1\n      pop\n        /* \"src/Mediscan.sol\":3701:3707  _token */\n      dup3\n        /* \"src/Mediscan.sol\":3694:3717  IERC20(_token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/Mediscan.sol\":3718:3726  _account */\n      dup4\n        /* \"src/Mediscan.sol\":3728:3734  amount */\n      dup4\n        /* \"src/Mediscan.sol\":3694:3735  IERC20(_token).transfer(_account, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_206:\n      pop\n        /* \"src/Mediscan.sol\":3794:3800  amount */\n      dup1\n        /* \"src/Mediscan.sol\":3745:3771  balanceForTokenForFaceHash */\n      0x02\n        /* \"src/Mediscan.sol\":3745:3782  balanceForTokenForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":3772:3781  _faceHash */\n      dup7\n        /* \"src/Mediscan.sol\":3745:3782  balanceForTokenForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Mediscan.sol\":3745:3790  balanceForTokenForFaceHash[_faceHash][_token] */\n      0x00\n        /* \"src/Mediscan.sol\":3783:3789  _token */\n      dup6\n        /* \"src/Mediscan.sol\":3745:3790  balanceForTokenForFaceHash[_faceHash][_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Mediscan.sol\":3745:3800  balanceForTokenForFaceHash[_faceHash][_token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Mediscan.sol\":3857:3863  amount */\n      dup1\n        /* \"src/Mediscan.sol\":3849:3855  _token */\n      dup4\n        /* \"src/Mediscan.sol\":3815:3864  PayoutTokenForFaceHash(_faceHash, _token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Mediscan.sol\":3838:3847  _faceHash */\n      dup6\n        /* \"src/Mediscan.sol\":3815:3864  PayoutTokenForFaceHash(_faceHash, _token, amount) */\n      0x434adbd1794f49ffeb1ea04de9ad62fb01cc18179124cda3ce5eee58f010f969\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/Mediscan.sol\":3534:3871  {... */\n      pop\n        /* \"src/Mediscan.sol\":3422:3871  function payoutTokenForFaceHash(bytes32 _faceHash, address _token,  address _account) external onlyPaymentAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":4860:5378  function verifyHealthWorker(address _account, uint256 _accessLevel) external onlyAdmin {... */\n    tag_91:\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Mediscan.sol\":1646:1664  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Mediscan.sol\":1635:1645  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_210:\n        /* \"src/Mediscan.sol\":4977:4978  0 */\n      0x00\n        /* \"src/Mediscan.sol\":4961:4973  _accessLevel */\n      dup2\n        /* \"src/Mediscan.sol\":4961:4978  _accessLevel == 0 */\n      sub\n        /* \"src/Mediscan.sol\":4957:5315  if (_accessLevel == 0) {... */\n      tag_212\n      jumpi\n        /* \"src/Mediscan.sol\":4994:5040  _grantRole(HEALTH_PROFESSIONAL_FULL, _account) */\n      tag_213\n        /* \"src/Mediscan.sol\":571:615  abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\") */\n      add(0x20, mload(0x40))\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":561:616  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":5031:5039  _account */\n      dup4\n        /* \"src/Mediscan.sol\":4994:5004  _grantRole */\n      tag_188\n        /* \"src/Mediscan.sol\":4994:5040  _grantRole(HEALTH_PROFESSIONAL_FULL, _account) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"src/Mediscan.sol\":4957:5315  if (_accessLevel == 0) {... */\n      jump(tag_216)\n    tag_212:\n        /* \"src/Mediscan.sol\":5077:5078  1 */\n      0x01\n        /* \"src/Mediscan.sol\":5061:5073  _accessLevel */\n      dup2\n        /* \"src/Mediscan.sol\":5061:5078  _accessLevel == 1 */\n      sub\n        /* \"src/Mediscan.sol\":5057:5315  if (_accessLevel == 1) {... */\n      tag_217\n      jumpi\n        /* \"src/Mediscan.sol\":5094:5139  _grantRole(HEALTH_PROFESSIONAL_MID, _account) */\n      tag_218\n        /* \"src/Mediscan.sol\":682:725  abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\") */\n      add(0x20, mload(0x40))\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":672:726  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":5130:5138  _account */\n      dup4\n        /* \"src/Mediscan.sol\":5094:5104  _grantRole */\n      tag_188\n        /* \"src/Mediscan.sol\":5094:5139  _grantRole(HEALTH_PROFESSIONAL_MID, _account) */\n      jump\t// in\n    tag_218:\n      pop\n        /* \"src/Mediscan.sol\":5057:5315  if (_accessLevel == 1) {... */\n      jump(tag_221)\n    tag_217:\n        /* \"src/Mediscan.sol\":5176:5177  2 */\n      0x02\n        /* \"src/Mediscan.sol\":5160:5172  _accessLevel */\n      dup2\n        /* \"src/Mediscan.sol\":5160:5177  _accessLevel == 2 */\n      sub\n        /* \"src/Mediscan.sol\":5156:5315  if (_accessLevel == 2) {... */\n      tag_222\n      jumpi\n        /* \"src/Mediscan.sol\":5193:5238  _grantRole(HEALTH_PROFESSIONAL_LOW, _account) */\n      tag_223\n        /* \"src/Mediscan.sol\":792:835  abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\") */\n      add(0x20, mload(0x40))\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":782:836  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":5229:5237  _account */\n      dup4\n        /* \"src/Mediscan.sol\":5193:5203  _grantRole */\n      tag_188\n        /* \"src/Mediscan.sol\":5193:5238  _grantRole(HEALTH_PROFESSIONAL_LOW, _account) */\n      jump\t// in\n    tag_223:\n      pop\n        /* \"src/Mediscan.sol\":5156:5315  if (_accessLevel == 2) {... */\n      jump(tag_226)\n    tag_222:\n        /* \"src/Mediscan.sol\":5269:5304  revert(\"Unrecognized access level\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Mediscan.sol\":5156:5315  if (_accessLevel == 2) {... */\n    tag_226:\n        /* \"src/Mediscan.sol\":5057:5315  if (_accessLevel == 1) {... */\n    tag_221:\n        /* \"src/Mediscan.sol\":4957:5315  if (_accessLevel == 0) {... */\n    tag_216:\n        /* \"src/Mediscan.sol\":5358:5370  _accessLevel */\n      dup1\n        /* \"src/Mediscan.sol\":5348:5356  _account */\n      dup3\n        /* \"src/Mediscan.sol\":5329:5371  VerifyHealthWorker(_account, _accessLevel) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2224b7dff324f24f810cf3bb4055085a9fd09db933a221dea091e176f4d16c8c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Mediscan.sol\":4860:5378  function verifyHealthWorker(address _account, uint256 _accessLevel) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":2211:2612  function getAccessLevelForAddress(address _address) external view returns (uint256) {... */\n    tag_96:\n        /* \"src/Mediscan.sol\":2286:2293  uint256 */\n      0x00\n        /* \"src/Mediscan.sol\":2309:2352  hasRole(HEALTH_PROFESSIONAL_FULL, _address) */\n      tag_230\n        /* \"src/Mediscan.sol\":571:615  abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\") */\n      add(0x20, mload(0x40))\n      tag_231\n      swap1\n      tag_215\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":561:616  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":2343:2351  _address */\n      dup4\n        /* \"src/Mediscan.sol\":2309:2316  hasRole */\n      tag_113\n        /* \"src/Mediscan.sol\":2309:2352  hasRole(HEALTH_PROFESSIONAL_FULL, _address) */\n      jump\t// in\n    tag_230:\n        /* \"src/Mediscan.sol\":2305:2606  if (hasRole(HEALTH_PROFESSIONAL_FULL, _address)) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"src/Mediscan.sol\":2375:2376  0 */\n      0x00\n        /* \"src/Mediscan.sol\":2368:2376  return 0 */\n      swap1\n      pop\n      jump(tag_229)\n        /* \"src/Mediscan.sol\":2305:2606  if (hasRole(HEALTH_PROFESSIONAL_FULL, _address)) {... */\n    tag_232:\n        /* \"src/Mediscan.sol\":2397:2439  hasRole(HEALTH_PROFESSIONAL_MID, _address) */\n      tag_234\n        /* \"src/Mediscan.sol\":682:725  abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\") */\n      add(0x20, mload(0x40))\n      tag_235\n      swap1\n      tag_220\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":672:726  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":2430:2438  _address */\n      dup4\n        /* \"src/Mediscan.sol\":2397:2404  hasRole */\n      tag_113\n        /* \"src/Mediscan.sol\":2397:2439  hasRole(HEALTH_PROFESSIONAL_MID, _address) */\n      jump\t// in\n    tag_234:\n        /* \"src/Mediscan.sol\":2393:2606  if (hasRole(HEALTH_PROFESSIONAL_MID, _address)) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"src/Mediscan.sol\":2462:2463  1 */\n      0x01\n        /* \"src/Mediscan.sol\":2455:2463  return 1 */\n      swap1\n      pop\n      jump(tag_229)\n        /* \"src/Mediscan.sol\":2393:2606  if (hasRole(HEALTH_PROFESSIONAL_MID, _address)) {... */\n    tag_236:\n        /* \"src/Mediscan.sol\":2484:2526  hasRole(HEALTH_PROFESSIONAL_LOW, _address) */\n      tag_238\n        /* \"src/Mediscan.sol\":792:835  abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\") */\n      add(0x20, mload(0x40))\n      tag_239\n      swap1\n      tag_225\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":782:836  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":2517:2525  _address */\n      dup4\n        /* \"src/Mediscan.sol\":2484:2491  hasRole */\n      tag_113\n        /* \"src/Mediscan.sol\":2484:2526  hasRole(HEALTH_PROFESSIONAL_LOW, _address) */\n      jump\t// in\n    tag_238:\n        /* \"src/Mediscan.sol\":2480:2606  if (hasRole(HEALTH_PROFESSIONAL_LOW, _address)) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"src/Mediscan.sol\":2549:2550  2 */\n      0x02\n        /* \"src/Mediscan.sol\":2542:2550  return 2 */\n      swap1\n      pop\n      jump(tag_229)\n        /* \"src/Mediscan.sol\":2480:2606  if (hasRole(HEALTH_PROFESSIONAL_LOW, _address)) {... */\n    tag_240:\n        /* \"src/Mediscan.sol\":299:309  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/Mediscan.sol\":2581:2595  return MAX_INT */\n      swap1\n      pop\n        /* \"src/Mediscan.sol\":2211:2612  function getAccessLevelForAddress(address _address) external view returns (uint256) {... */\n    tag_229:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":3877:4358  function payoutChainBaseTokenToFaceHash(bytes32 _faceHash, address _account) external onlyPaymentAdmin {... */\n    tag_101:\n        /* \"src/Mediscan.sol\":1813:1843  _checkRole(PAYMENT_ADMIN_ROLE) */\n      tag_243\n        /* \"src/Mediscan.sol\":465:503  abi.encodePacked(\"PAYMENT_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_244\n      swap1\n      tag_198\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":455:504  keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":1813:1823  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1813:1843  _checkRole(PAYMENT_ADMIN_ROLE) */\n      jump\t// in\n    tag_243:\n        /* \"src/Mediscan.sol\":3998:4018  registeredFaceHashes */\n      0x01\n        /* \"src/Mediscan.sol\":3998:4029  registeredFaceHashes[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":4019:4028  _faceHash */\n      dup4\n        /* \"src/Mediscan.sol\":3998:4029  registeredFaceHashes[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Mediscan.sol\":3990:4058  require(registeredFaceHashes[_faceHash], \"Face hash not registered\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_168\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"src/Mediscan.sol\":4068:4082  uint256 amount */\n      0x00\n        /* \"src/Mediscan.sol\":4085:4112  baseTokenBalanceForFaceHash */\n      0x03\n        /* \"src/Mediscan.sol\":4085:4123  baseTokenBalanceForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":4113:4122  _faceHash */\n      dup5\n        /* \"src/Mediscan.sol\":4085:4123  baseTokenBalanceForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Mediscan.sol\":4068:4123  uint256 amount = baseTokenBalanceForFaceHash[_faceHash] */\n      swap1\n      pop\n        /* \"src/Mediscan.sol\":4134:4146  bool success */\n      0x00\n        /* \"src/Mediscan.sol\":4152:4160  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4152:4165  _account.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Mediscan.sol\":4173:4179  amount */\n      dup3\n        /* \"src/Mediscan.sol\":4152:4184  _account.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_252\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_251)\n    tag_252:\n      0x60\n      swap2\n      pop\n    tag_251:\n      pop\n        /* \"src/Mediscan.sol\":4133:4184  (bool success, ) = _account.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/Mediscan.sol\":4202:4209  success */\n      dup1\n        /* \"src/Mediscan.sol\":4194:4227  require(success, \"Payout failed\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"src/Mediscan.sol\":4279:4285  amount */\n      dup2\n        /* \"src/Mediscan.sol\":4237:4264  baseTokenBalanceForFaceHash */\n      0x03\n        /* \"src/Mediscan.sol\":4237:4275  baseTokenBalanceForFaceHash[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":4265:4274  _faceHash */\n      dup7\n        /* \"src/Mediscan.sol\":4237:4275  baseTokenBalanceForFaceHash[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Mediscan.sol\":4237:4285  baseTokenBalanceForFaceHash[_faceHash] -= amount */\n      dup3\n      dup3\n      sload\n      tag_256\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_256:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Mediscan.sol\":4342:4350  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4300:4351  PayoutChainBaseTokenToFaceHash(_faceHash, _account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Mediscan.sol\":4331:4340  _faceHash */\n      dup5\n        /* \"src/Mediscan.sol\":4300:4351  PayoutChainBaseTokenToFaceHash(_faceHash, _account) */\n      0xfd1d4f59cf1013ee232282cac3356b455525c6d4d04d18bed8216b7b6c2beb60\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Mediscan.sol\":3980:4358  {... */\n      pop\n      pop\n        /* \"src/Mediscan.sol\":3877:4358  function payoutChainBaseTokenToFaceHash(bytes32 _faceHash, address _account) external onlyPaymentAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":732:836  bytes32 constant public HEALTH_PROFESSIONAL_LOW = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n    tag_104:\n        /* \"src/Mediscan.sol\":792:835  abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\") */\n      add(0x20, mload(0x40))\n      tag_257\n      swap1\n      tag_225\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":782:836  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":732:836  bytes32 constant public HEALTH_PROFESSIONAL_LOW = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_LOW\")) */\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":4606:4725  function addPaymentAdmin(address _account) external onlyAdmin {... */\n    tag_109:\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Mediscan.sol\":1646:1664  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Mediscan.sol\":1635:1645  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_259:\n        /* \"src/Mediscan.sol\":4678:4718  _grantRole(PAYMENT_ADMIN_ROLE, _account) */\n      tag_261\n        /* \"src/Mediscan.sol\":465:503  abi.encodePacked(\"PAYMENT_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_262\n      swap1\n      tag_198\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":455:504  keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":4709:4717  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4678:4688  _grantRole */\n      tag_188\n        /* \"src/Mediscan.sol\":4678:4718  _grantRole(PAYMENT_ADMIN_ROLE, _account) */\n      jump\t// in\n    tag_261:\n      pop\n        /* \"src/Mediscan.sol\":4606:4725  function addPaymentAdmin(address _account) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":410:504  bytes32 constant public PAYMENT_ADMIN_ROLE = keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n    tag_121:\n        /* \"src/Mediscan.sol\":465:503  abi.encodePacked(\"PAYMENT_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_264\n      swap1\n      tag_198\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":455:504  keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":410:504  bytes32 constant public PAYMENT_ADMIN_ROLE = keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":4364:4477  function addUserAdmin(address _account) external onlyAdmin {... */\n    tag_126:\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Mediscan.sol\":1646:1664  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Mediscan.sol\":1635:1645  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_266:\n        /* \"src/Mediscan.sol\":4433:4470  _grantRole(USER_ADMIN_ROLE, _account) */\n      tag_268\n        /* \"src/Mediscan.sol\":368:403  abi.encodePacked(\"USER_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":358:404  keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":4461:4469  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4433:4443  _grantRole */\n      tag_188\n        /* \"src/Mediscan.sol\":4433:4470  _grantRole(USER_ADMIN_ROLE, _account) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"src/Mediscan.sol\":4364:4477  function addUserAdmin(address _account) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_59\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_273\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_275:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":622:726  bytes32 constant public HEALTH_PROFESSIONAL_MID = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n    tag_133:\n        /* \"src/Mediscan.sol\":682:725  abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\") */\n      add(0x20, mload(0x40))\n      tag_276\n      swap1\n      tag_220\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":672:726  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":622:726  bytes32 constant public HEALTH_PROFESSIONAL_MID = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_MID\")) */\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":4731:4854  function removePaymentAdmin(address _account) external onlyAdmin {... */\n    tag_138:\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Mediscan.sol\":1646:1664  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Mediscan.sol\":1635:1645  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_278:\n        /* \"src/Mediscan.sol\":4806:4847  _revokeRole(PAYMENT_ADMIN_ROLE, _account) */\n      tag_280\n        /* \"src/Mediscan.sol\":465:503  abi.encodePacked(\"PAYMENT_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_281\n      swap1\n      tag_198\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":455:504  keccak256(abi.encodePacked(\"PAYMENT_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":4838:4846  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4806:4817  _revokeRole */\n      tag_194\n        /* \"src/Mediscan.sol\":4806:4847  _revokeRole(PAYMENT_ADMIN_ROLE, _account) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"src/Mediscan.sol\":4731:4854  function removePaymentAdmin(address _account) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":5384:5549  function registerFaceHash(bytes32 _faceHash) external onlyUserAdmin {... */\n    tag_142:\n        /* \"src/Mediscan.sol\":1724:1751  _checkRole(USER_ADMIN_ROLE) */\n      tag_283\n        /* \"src/Mediscan.sol\":368:403  abi.encodePacked(\"USER_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_284\n      swap1\n      tag_270\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":358:404  keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":1724:1734  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1724:1751  _checkRole(USER_ADMIN_ROLE) */\n      jump\t// in\n    tag_283:\n        /* \"src/Mediscan.sol\":5496:5500  true */\n      0x01\n        /* \"src/Mediscan.sol\":5462:5482  registeredFaceHashes */\n      dup1\n        /* \"src/Mediscan.sol\":5462:5493  registeredFaceHashes[_faceHash] */\n      0x00\n        /* \"src/Mediscan.sol\":5483:5492  _faceHash */\n      dup4\n        /* \"src/Mediscan.sol\":5462:5493  registeredFaceHashes[_faceHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Mediscan.sol\":5462:5500  registeredFaceHashes[_faceHash] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Mediscan.sol\":5532:5541  _faceHash */\n      dup1\n        /* \"src/Mediscan.sol\":5515:5542  RegisterFaceHash(_faceHash) */\n      0xfa9941fd9436b8f798d8da6c4747847bf053207fe545c37222588db50a6742f8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Mediscan.sol\":5384:5549  function registerFaceHash(bytes32 _faceHash) external onlyUserAdmin {... */\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":4483:4600  function removeUserAdmin(address _account) external onlyAdmin {... */\n    tag_146:\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_287\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Mediscan.sol\":1646:1664  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Mediscan.sol\":1635:1645  _checkRole */\n      tag_185\n        /* \"src/Mediscan.sol\":1635:1665  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_287:\n        /* \"src/Mediscan.sol\":4555:4593  _revokeRole(USER_ADMIN_ROLE, _account) */\n      tag_289\n        /* \"src/Mediscan.sol\":368:403  abi.encodePacked(\"USER_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_290\n      swap1\n      tag_270\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":358:404  keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":4584:4592  _account */\n      dup3\n        /* \"src/Mediscan.sol\":4555:4566  _revokeRole */\n      tag_194\n        /* \"src/Mediscan.sol\":4555:4593  _revokeRole(USER_ADMIN_ROLE, _account) */\n      jump\t// in\n    tag_289:\n      pop\n        /* \"src/Mediscan.sol\":4483:4600  function removeUserAdmin(address _account) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"src/Mediscan.sol\":989:1051  mapping(bytes32 => uint256) public baseTokenBalanceForFaceHash */\n    tag_150:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":510:616  bytes32 constant public HEALTH_PROFESSIONAL_FULL = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n    tag_154:\n        /* \"src/Mediscan.sol\":571:615  abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\") */\n      add(0x20, mload(0x40))\n      tag_291\n      swap1\n      tag_215\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":561:616  keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":510:616  bytes32 constant public HEALTH_PROFESSIONAL_FULL = keccak256(abi.encodePacked(\"HEALTH_PROFESSIONAL_FULL\")) */\n      dup2\n      jump\t// out\n        /* \"src/Mediscan.sol\":316:404  bytes32 constant public USER_ADMIN_ROLE = keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n    tag_158:\n        /* \"src/Mediscan.sol\":368:403  abi.encodePacked(\"USER_ADMIN_ROLE\") */\n      add(0x20, mload(0x40))\n      tag_292\n      swap1\n      tag_270\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Mediscan.sol\":358:404  keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Mediscan.sol\":316:404  bytes32 constant public USER_ADMIN_ROLE = keccak256(abi.encodePacked(\"USER_ADMIN_ROLE\")) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_295\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_299\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_298)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_298:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_305\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_307\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_304)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_304:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_310\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_315:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_317:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_318:\n        /* \"#utility.yul\":561:584   */\n      tag_365\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_317\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_366:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_319:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_368\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_318\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_38:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_371\n      tag_315\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":833:952   */\n    tag_370:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_372\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_319\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_320:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_321:\n        /* \"#utility.yul\":1268:1289   */\n      tag_375\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_320\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_41:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_377\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_321\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_322:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_323:\n        /* \"#utility.yul\":1674:1698   */\n      tag_380\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_322\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_381:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_324:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_383\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_323\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_45:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_386\n      tag_315\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1950:2069   */\n    tag_385:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_387\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_324\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2335   */\n    tag_325:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2286:2328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2275:2329   */\n      and\n        /* \"#utility.yul\":2264:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2437   */\n    tag_326:\n        /* \"#utility.yul\":2378:2385   */\n      0x00\n        /* \"#utility.yul\":2407:2431   */\n      tag_390\n        /* \"#utility.yul\":2425:2430   */\n      dup3\n        /* \"#utility.yul\":2407:2431   */\n      tag_325\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2396:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_327:\n        /* \"#utility.yul\":2516:2540   */\n      tag_392\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_326\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_393:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_328:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_395\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_327\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2793   */\n    tag_329:\n        /* \"#utility.yul\":2753:2760   */\n      0x00\n        /* \"#utility.yul\":2782:2787   */\n      dup2\n        /* \"#utility.yul\":2771:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2799:2921   */\n    tag_330:\n        /* \"#utility.yul\":2872:2896   */\n      tag_398\n        /* \"#utility.yul\":2890:2895   */\n      dup2\n        /* \"#utility.yul\":2872:2896   */\n      tag_329\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2865:2870   */\n      dup2\n        /* \"#utility.yul\":2862:2897   */\n      eq\n        /* \"#utility.yul\":2852:2915   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2908:2909   */\n      dup1\n        /* \"#utility.yul\":2901:2913   */\n      revert\n        /* \"#utility.yul\":2852:2915   */\n    tag_399:\n        /* \"#utility.yul\":2799:2921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2927:3066   */\n    tag_331:\n        /* \"#utility.yul\":2973:2978   */\n      0x00\n        /* \"#utility.yul\":3011:3017   */\n      dup2\n        /* \"#utility.yul\":2998:3018   */\n      calldataload\n        /* \"#utility.yul\":2989:3018   */\n      swap1\n      pop\n        /* \"#utility.yul\":3027:3060   */\n      tag_401\n        /* \"#utility.yul\":3054:3059   */\n      dup2\n        /* \"#utility.yul\":3027:3060   */\n      tag_330\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2927:3066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3072:3691   */\n    tag_51:\n        /* \"#utility.yul\":3149:3155   */\n      0x00\n        /* \"#utility.yul\":3157:3163   */\n      dup1\n        /* \"#utility.yul\":3165:3171   */\n      0x00\n        /* \"#utility.yul\":3214:3216   */\n      0x60\n        /* \"#utility.yul\":3202:3211   */\n      dup5\n        /* \"#utility.yul\":3193:3200   */\n      dup7\n        /* \"#utility.yul\":3189:3212   */\n      sub\n        /* \"#utility.yul\":3185:3217   */\n      slt\n        /* \"#utility.yul\":3182:3301   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3220:3299   */\n      tag_404\n      tag_315\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3182:3301   */\n    tag_403:\n        /* \"#utility.yul\":3340:3341   */\n      0x00\n        /* \"#utility.yul\":3365:3418   */\n      tag_405\n        /* \"#utility.yul\":3410:3417   */\n      dup7\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup8\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3365:3418   */\n      tag_324\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3355:3418   */\n      swap4\n      pop\n        /* \"#utility.yul\":3311:3428   */\n      pop\n        /* \"#utility.yul\":3467:3469   */\n      0x20\n        /* \"#utility.yul\":3493:3546   */\n      tag_406\n        /* \"#utility.yul\":3538:3545   */\n      dup7\n        /* \"#utility.yul\":3529:3535   */\n      dup3\n        /* \"#utility.yul\":3518:3527   */\n      dup8\n        /* \"#utility.yul\":3514:3536   */\n      add\n        /* \"#utility.yul\":3493:3546   */\n      tag_328\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3483:3546   */\n      swap3\n      pop\n        /* \"#utility.yul\":3438:3556   */\n      pop\n        /* \"#utility.yul\":3595:3597   */\n      0x40\n        /* \"#utility.yul\":3621:3674   */\n      tag_407\n        /* \"#utility.yul\":3666:3673   */\n      dup7\n        /* \"#utility.yul\":3657:3663   */\n      dup3\n        /* \"#utility.yul\":3646:3655   */\n      dup8\n        /* \"#utility.yul\":3642:3664   */\n      add\n        /* \"#utility.yul\":3621:3674   */\n      tag_331\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3611:3674   */\n      swap2\n      pop\n        /* \"#utility.yul\":3566:3684   */\n      pop\n        /* \"#utility.yul\":3072:3691   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3697:3815   */\n    tag_332:\n        /* \"#utility.yul\":3784:3808   */\n      tag_409\n        /* \"#utility.yul\":3802:3807   */\n      dup2\n        /* \"#utility.yul\":3784:3808   */\n      tag_322\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3779:3782   */\n      dup3\n        /* \"#utility.yul\":3772:3809   */\n      mstore\n        /* \"#utility.yul\":3697:3815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:4043   */\n    tag_61:\n        /* \"#utility.yul\":3914:3918   */\n      0x00\n        /* \"#utility.yul\":3952:3954   */\n      0x20\n        /* \"#utility.yul\":3941:3950   */\n      dup3\n        /* \"#utility.yul\":3937:3955   */\n      add\n        /* \"#utility.yul\":3929:3955   */\n      swap1\n      pop\n        /* \"#utility.yul\":3965:4036   */\n      tag_411\n        /* \"#utility.yul\":4033:4034   */\n      0x00\n        /* \"#utility.yul\":4022:4031   */\n      dup4\n        /* \"#utility.yul\":4018:4035   */\n      add\n        /* \"#utility.yul\":4009:4015   */\n      dup5\n        /* \"#utility.yul\":3965:4036   */\n      tag_332\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3821:4043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4049:4523   */\n    tag_65:\n        /* \"#utility.yul\":4117:4123   */\n      0x00\n        /* \"#utility.yul\":4125:4131   */\n      dup1\n        /* \"#utility.yul\":4174:4176   */\n      0x40\n        /* \"#utility.yul\":4162:4171   */\n      dup4\n        /* \"#utility.yul\":4153:4160   */\n      dup6\n        /* \"#utility.yul\":4149:4172   */\n      sub\n        /* \"#utility.yul\":4145:4177   */\n      slt\n        /* \"#utility.yul\":4142:4261   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4180:4259   */\n      tag_414\n      tag_315\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4142:4261   */\n    tag_413:\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4325:4378   */\n      tag_415\n        /* \"#utility.yul\":4370:4377   */\n      dup6\n        /* \"#utility.yul\":4361:4367   */\n      dup3\n        /* \"#utility.yul\":4350:4359   */\n      dup7\n        /* \"#utility.yul\":4346:4368   */\n      add\n        /* \"#utility.yul\":4325:4378   */\n      tag_324\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4315:4378   */\n      swap3\n      pop\n        /* \"#utility.yul\":4271:4388   */\n      pop\n        /* \"#utility.yul\":4427:4429   */\n      0x20\n        /* \"#utility.yul\":4453:4506   */\n      tag_416\n        /* \"#utility.yul\":4498:4505   */\n      dup6\n        /* \"#utility.yul\":4489:4495   */\n      dup3\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4474:4496   */\n      add\n        /* \"#utility.yul\":4453:4506   */\n      tag_328\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4443:4506   */\n      swap2\n      pop\n        /* \"#utility.yul\":4398:4516   */\n      pop\n        /* \"#utility.yul\":4049:4523   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4529:4647   */\n    tag_333:\n        /* \"#utility.yul\":4616:4640   */\n      tag_418\n        /* \"#utility.yul\":4634:4639   */\n      dup2\n        /* \"#utility.yul\":4616:4640   */\n      tag_329\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4611:4614   */\n      dup3\n        /* \"#utility.yul\":4604:4641   */\n      mstore\n        /* \"#utility.yul\":4529:4647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:4875   */\n    tag_68:\n        /* \"#utility.yul\":4746:4750   */\n      0x00\n        /* \"#utility.yul\":4784:4786   */\n      0x20\n        /* \"#utility.yul\":4773:4782   */\n      dup3\n        /* \"#utility.yul\":4769:4787   */\n      add\n        /* \"#utility.yul\":4761:4787   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4868   */\n      tag_420\n        /* \"#utility.yul\":4865:4866   */\n      0x00\n        /* \"#utility.yul\":4854:4863   */\n      dup4\n        /* \"#utility.yul\":4850:4867   */\n      add\n        /* \"#utility.yul\":4841:4847   */\n      dup5\n        /* \"#utility.yul\":4797:4868   */\n      tag_333\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4653:4875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4881:5500   */\n    tag_85:\n        /* \"#utility.yul\":4958:4964   */\n      0x00\n        /* \"#utility.yul\":4966:4972   */\n      dup1\n        /* \"#utility.yul\":4974:4980   */\n      0x00\n        /* \"#utility.yul\":5023:5025   */\n      0x60\n        /* \"#utility.yul\":5011:5020   */\n      dup5\n        /* \"#utility.yul\":5002:5009   */\n      dup7\n        /* \"#utility.yul\":4998:5021   */\n      sub\n        /* \"#utility.yul\":4994:5026   */\n      slt\n        /* \"#utility.yul\":4991:5110   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5029:5108   */\n      tag_423\n      tag_315\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4991:5110   */\n    tag_422:\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5174:5227   */\n      tag_424\n        /* \"#utility.yul\":5219:5226   */\n      dup7\n        /* \"#utility.yul\":5210:5216   */\n      dup3\n        /* \"#utility.yul\":5199:5208   */\n      dup8\n        /* \"#utility.yul\":5195:5217   */\n      add\n        /* \"#utility.yul\":5174:5227   */\n      tag_324\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5164:5227   */\n      swap4\n      pop\n        /* \"#utility.yul\":5120:5237   */\n      pop\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5302:5355   */\n      tag_425\n        /* \"#utility.yul\":5347:5354   */\n      dup7\n        /* \"#utility.yul\":5338:5344   */\n      dup3\n        /* \"#utility.yul\":5327:5336   */\n      dup8\n        /* \"#utility.yul\":5323:5345   */\n      add\n        /* \"#utility.yul\":5302:5355   */\n      tag_328\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5292:5355   */\n      swap3\n      pop\n        /* \"#utility.yul\":5247:5365   */\n      pop\n        /* \"#utility.yul\":5404:5406   */\n      0x40\n        /* \"#utility.yul\":5430:5483   */\n      tag_426\n        /* \"#utility.yul\":5475:5482   */\n      dup7\n        /* \"#utility.yul\":5466:5472   */\n      dup3\n        /* \"#utility.yul\":5455:5464   */\n      dup8\n        /* \"#utility.yul\":5451:5473   */\n      add\n        /* \"#utility.yul\":5430:5483   */\n      tag_328\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5420:5483   */\n      swap2\n      pop\n        /* \"#utility.yul\":5375:5493   */\n      pop\n        /* \"#utility.yul\":4881:5500   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5506:5980   */\n    tag_90:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5582:5588   */\n      dup1\n        /* \"#utility.yul\":5631:5633   */\n      0x40\n        /* \"#utility.yul\":5619:5628   */\n      dup4\n        /* \"#utility.yul\":5610:5617   */\n      dup6\n        /* \"#utility.yul\":5606:5629   */\n      sub\n        /* \"#utility.yul\":5602:5634   */\n      slt\n        /* \"#utility.yul\":5599:5718   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5637:5716   */\n      tag_429\n      tag_315\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5599:5718   */\n    tag_428:\n        /* \"#utility.yul\":5757:5758   */\n      0x00\n        /* \"#utility.yul\":5782:5835   */\n      tag_430\n        /* \"#utility.yul\":5827:5834   */\n      dup6\n        /* \"#utility.yul\":5818:5824   */\n      dup3\n        /* \"#utility.yul\":5807:5816   */\n      dup7\n        /* \"#utility.yul\":5803:5825   */\n      add\n        /* \"#utility.yul\":5782:5835   */\n      tag_328\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5772:5835   */\n      swap3\n      pop\n        /* \"#utility.yul\":5728:5845   */\n      pop\n        /* \"#utility.yul\":5884:5886   */\n      0x20\n        /* \"#utility.yul\":5910:5963   */\n      tag_431\n        /* \"#utility.yul\":5955:5962   */\n      dup6\n        /* \"#utility.yul\":5946:5952   */\n      dup3\n        /* \"#utility.yul\":5935:5944   */\n      dup7\n        /* \"#utility.yul\":5931:5953   */\n      add\n        /* \"#utility.yul\":5910:5963   */\n      tag_331\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5900:5963   */\n      swap2\n      pop\n        /* \"#utility.yul\":5855:5973   */\n      pop\n        /* \"#utility.yul\":5506:5980   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6315   */\n    tag_95:\n        /* \"#utility.yul\":6045:6051   */\n      0x00\n        /* \"#utility.yul\":6094:6096   */\n      0x20\n        /* \"#utility.yul\":6082:6091   */\n      dup3\n        /* \"#utility.yul\":6073:6080   */\n      dup5\n        /* \"#utility.yul\":6069:6092   */\n      sub\n        /* \"#utility.yul\":6065:6097   */\n      slt\n        /* \"#utility.yul\":6062:6181   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6100:6179   */\n      tag_434\n      tag_315\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6062:6181   */\n    tag_433:\n        /* \"#utility.yul\":6220:6221   */\n      0x00\n        /* \"#utility.yul\":6245:6298   */\n      tag_435\n        /* \"#utility.yul\":6290:6297   */\n      dup5\n        /* \"#utility.yul\":6281:6287   */\n      dup3\n        /* \"#utility.yul\":6270:6279   */\n      dup6\n        /* \"#utility.yul\":6266:6288   */\n      add\n        /* \"#utility.yul\":6245:6298   */\n      tag_328\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6235:6298   */\n      swap2\n      pop\n        /* \"#utility.yul\":6191:6308   */\n      pop\n        /* \"#utility.yul\":5986:6315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6321:6490   */\n    tag_334:\n        /* \"#utility.yul\":6405:6416   */\n      0x00\n        /* \"#utility.yul\":6439:6445   */\n      dup3\n        /* \"#utility.yul\":6434:6437   */\n      dup3\n        /* \"#utility.yul\":6427:6446   */\n      mstore\n        /* \"#utility.yul\":6479:6483   */\n      0x20\n        /* \"#utility.yul\":6474:6477   */\n      dup3\n        /* \"#utility.yul\":6470:6484   */\n      add\n        /* \"#utility.yul\":6455:6484   */\n      swap1\n      pop\n        /* \"#utility.yul\":6321:6490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6670   */\n    tag_335:\n        /* \"#utility.yul\":6636:6662   */\n      0x466163652068617368206e6f7420726567697374657265640000000000000000\n        /* \"#utility.yul\":6632:6633   */\n      0x00\n        /* \"#utility.yul\":6624:6630   */\n      dup3\n        /* \"#utility.yul\":6620:6634   */\n      add\n        /* \"#utility.yul\":6613:6663   */\n      mstore\n        /* \"#utility.yul\":6496:6670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6676:7042   */\n    tag_336:\n        /* \"#utility.yul\":6818:6821   */\n      0x00\n        /* \"#utility.yul\":6839:6906   */\n      tag_439\n        /* \"#utility.yul\":6903:6905   */\n      0x18\n        /* \"#utility.yul\":6898:6901   */\n      dup4\n        /* \"#utility.yul\":6839:6906   */\n      tag_334\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6832:6906   */\n      swap2\n      pop\n        /* \"#utility.yul\":6915:7008   */\n      tag_440\n        /* \"#utility.yul\":7004:7007   */\n      dup3\n        /* \"#utility.yul\":6915:7008   */\n      tag_335\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7033:7035   */\n      0x20\n        /* \"#utility.yul\":7028:7031   */\n      dup3\n        /* \"#utility.yul\":7024:7036   */\n      add\n        /* \"#utility.yul\":7017:7036   */\n      swap1\n      pop\n        /* \"#utility.yul\":6676:7042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7467   */\n    tag_168:\n        /* \"#utility.yul\":7214:7218   */\n      0x00\n        /* \"#utility.yul\":7252:7254   */\n      0x20\n        /* \"#utility.yul\":7241:7250   */\n      dup3\n        /* \"#utility.yul\":7237:7255   */\n      add\n        /* \"#utility.yul\":7229:7255   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7310   */\n      dup2\n        /* \"#utility.yul\":7295:7299   */\n      dup2\n        /* \"#utility.yul\":7291:7311   */\n      sub\n        /* \"#utility.yul\":7287:7288   */\n      0x00\n        /* \"#utility.yul\":7276:7285   */\n      dup4\n        /* \"#utility.yul\":7272:7289   */\n      add\n        /* \"#utility.yul\":7265:7312   */\n      mstore\n        /* \"#utility.yul\":7329:7460   */\n      tag_442\n        /* \"#utility.yul\":7455:7459   */\n      dup2\n        /* \"#utility.yul\":7329:7460   */\n      tag_336\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7321:7460   */\n      swap1\n      pop\n        /* \"#utility.yul\":7048:7467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7473:7591   */\n    tag_337:\n        /* \"#utility.yul\":7560:7584   */\n      tag_444\n        /* \"#utility.yul\":7578:7583   */\n      dup2\n        /* \"#utility.yul\":7560:7584   */\n      tag_326\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7555:7558   */\n      dup3\n        /* \"#utility.yul\":7548:7585   */\n      mstore\n        /* \"#utility.yul\":7473:7591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7597:8039   */\n    tag_170:\n        /* \"#utility.yul\":7746:7750   */\n      0x00\n        /* \"#utility.yul\":7784:7786   */\n      0x60\n        /* \"#utility.yul\":7773:7782   */\n      dup3\n        /* \"#utility.yul\":7769:7787   */\n      add\n        /* \"#utility.yul\":7761:7787   */\n      swap1\n      pop\n        /* \"#utility.yul\":7797:7868   */\n      tag_446\n        /* \"#utility.yul\":7865:7866   */\n      0x00\n        /* \"#utility.yul\":7854:7863   */\n      dup4\n        /* \"#utility.yul\":7850:7867   */\n      add\n        /* \"#utility.yul\":7841:7847   */\n      dup7\n        /* \"#utility.yul\":7797:7868   */\n      tag_337\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7878:7950   */\n      tag_447\n        /* \"#utility.yul\":7946:7948   */\n      0x20\n        /* \"#utility.yul\":7935:7944   */\n      dup4\n        /* \"#utility.yul\":7931:7949   */\n      add\n        /* \"#utility.yul\":7922:7928   */\n      dup6\n        /* \"#utility.yul\":7878:7950   */\n      tag_337\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7960:8032   */\n      tag_448\n        /* \"#utility.yul\":8028:8030   */\n      0x40\n        /* \"#utility.yul\":8017:8026   */\n      dup4\n        /* \"#utility.yul\":8013:8031   */\n      add\n        /* \"#utility.yul\":8004:8010   */\n      dup5\n        /* \"#utility.yul\":7960:8032   */\n      tag_333\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7597:8039   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8045:8161   */\n    tag_338:\n        /* \"#utility.yul\":8115:8136   */\n      tag_450\n        /* \"#utility.yul\":8130:8135   */\n      dup2\n        /* \"#utility.yul\":8115:8136   */\n      tag_320\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8108:8113   */\n      dup2\n        /* \"#utility.yul\":8105:8137   */\n      eq\n        /* \"#utility.yul\":8095:8155   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8151:8152   */\n      0x00\n        /* \"#utility.yul\":8148:8149   */\n      dup1\n        /* \"#utility.yul\":8141:8153   */\n      revert\n        /* \"#utility.yul\":8095:8155   */\n    tag_451:\n        /* \"#utility.yul\":8045:8161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8167:8304   */\n    tag_339:\n        /* \"#utility.yul\":8221:8226   */\n      0x00\n        /* \"#utility.yul\":8252:8258   */\n      dup2\n        /* \"#utility.yul\":8246:8259   */\n      mload\n        /* \"#utility.yul\":8237:8259   */\n      swap1\n      pop\n        /* \"#utility.yul\":8268:8298   */\n      tag_453\n        /* \"#utility.yul\":8292:8297   */\n      dup2\n        /* \"#utility.yul\":8268:8298   */\n      tag_338\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8167:8304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8310:8655   */\n    tag_174:\n        /* \"#utility.yul\":8377:8383   */\n      0x00\n        /* \"#utility.yul\":8426:8428   */\n      0x20\n        /* \"#utility.yul\":8414:8423   */\n      dup3\n        /* \"#utility.yul\":8405:8412   */\n      dup5\n        /* \"#utility.yul\":8401:8424   */\n      sub\n        /* \"#utility.yul\":8397:8429   */\n      slt\n        /* \"#utility.yul\":8394:8513   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8432:8511   */\n      tag_456\n      tag_315\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8394:8513   */\n    tag_455:\n        /* \"#utility.yul\":8552:8553   */\n      0x00\n        /* \"#utility.yul\":8577:8638   */\n      tag_457\n        /* \"#utility.yul\":8630:8637   */\n      dup5\n        /* \"#utility.yul\":8621:8627   */\n      dup3\n        /* \"#utility.yul\":8610:8619   */\n      dup6\n        /* \"#utility.yul\":8606:8628   */\n      add\n        /* \"#utility.yul\":8577:8638   */\n      tag_339\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8567:8638   */\n      swap2\n      pop\n        /* \"#utility.yul\":8523:8648   */\n      pop\n        /* \"#utility.yul\":8310:8655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:8841   */\n    tag_340:\n        /* \"#utility.yul\":8709:8786   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8706:8707   */\n      0x00\n        /* \"#utility.yul\":8699:8787   */\n      mstore\n        /* \"#utility.yul\":8806:8810   */\n      0x11\n        /* \"#utility.yul\":8803:8804   */\n      0x04\n        /* \"#utility.yul\":8796:8811   */\n      mstore\n        /* \"#utility.yul\":8830:8834   */\n      0x24\n        /* \"#utility.yul\":8827:8828   */\n      0x00\n        /* \"#utility.yul\":8820:8835   */\n      revert\n        /* \"#utility.yul\":8847:9038   */\n    tag_176:\n        /* \"#utility.yul\":8887:8890   */\n      0x00\n        /* \"#utility.yul\":8906:8926   */\n      tag_460\n        /* \"#utility.yul\":8924:8925   */\n      dup3\n        /* \"#utility.yul\":8906:8926   */\n      tag_329\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8901:8926   */\n      swap2\n      pop\n        /* \"#utility.yul\":8940:8960   */\n      tag_461\n        /* \"#utility.yul\":8958:8959   */\n      dup4\n        /* \"#utility.yul\":8940:8960   */\n      tag_329\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8935:8960   */\n      swap3\n      pop\n        /* \"#utility.yul\":8983:8984   */\n      dup3\n        /* \"#utility.yul\":8980:8981   */\n      dup3\n        /* \"#utility.yul\":8976:8985   */\n      add\n        /* \"#utility.yul\":8969:8985   */\n      swap1\n      pop\n        /* \"#utility.yul\":9004:9007   */\n      dup1\n        /* \"#utility.yul\":9001:9002   */\n      dup3\n        /* \"#utility.yul\":8998:9008   */\n      gt\n        /* \"#utility.yul\":8995:9031   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":9011:9029   */\n      tag_463\n      tag_340\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8995:9031   */\n    tag_462:\n        /* \"#utility.yul\":8847:9038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9044:9192   */\n    tag_341:\n        /* \"#utility.yul\":9146:9157   */\n      0x00\n        /* \"#utility.yul\":9183:9186   */\n      dup2\n        /* \"#utility.yul\":9168:9186   */\n      swap1\n      pop\n        /* \"#utility.yul\":9044:9192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9198:9366   */\n    tag_342:\n        /* \"#utility.yul\":9338:9358   */\n      0x5041594d454e545f41444d494e5f524f4c450000000000000000000000000000\n        /* \"#utility.yul\":9334:9335   */\n      0x00\n        /* \"#utility.yul\":9326:9332   */\n      dup3\n        /* \"#utility.yul\":9322:9336   */\n      add\n        /* \"#utility.yul\":9315:9359   */\n      mstore\n        /* \"#utility.yul\":9198:9366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9372:9774   */\n    tag_343:\n        /* \"#utility.yul\":9532:9535   */\n      0x00\n        /* \"#utility.yul\":9553:9638   */\n      tag_467\n        /* \"#utility.yul\":9635:9637   */\n      0x12\n        /* \"#utility.yul\":9630:9633   */\n      dup4\n        /* \"#utility.yul\":9553:9638   */\n      tag_341\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9546:9638   */\n      swap2\n      pop\n        /* \"#utility.yul\":9647:9740   */\n      tag_468\n        /* \"#utility.yul\":9736:9739   */\n      dup3\n        /* \"#utility.yul\":9647:9740   */\n      tag_342\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9765:9767   */\n      0x12\n        /* \"#utility.yul\":9760:9763   */\n      dup3\n        /* \"#utility.yul\":9756:9768   */\n      add\n        /* \"#utility.yul\":9749:9768   */\n      swap1\n      pop\n        /* \"#utility.yul\":9372:9774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9780:10161   */\n    tag_198:\n        /* \"#utility.yul\":9965:9968   */\n      0x00\n        /* \"#utility.yul\":9987:10135   */\n      tag_470\n        /* \"#utility.yul\":10131:10134   */\n      dup3\n        /* \"#utility.yul\":9987:10135   */\n      tag_343\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9980:10135   */\n      swap2\n      pop\n        /* \"#utility.yul\":10152:10155   */\n      dup2\n        /* \"#utility.yul\":10145:10155   */\n      swap1\n      pop\n        /* \"#utility.yul\":9780:10161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10167:10499   */\n    tag_203:\n        /* \"#utility.yul\":10288:10292   */\n      0x00\n        /* \"#utility.yul\":10326:10328   */\n      0x40\n        /* \"#utility.yul\":10315:10324   */\n      dup3\n        /* \"#utility.yul\":10311:10329   */\n      add\n        /* \"#utility.yul\":10303:10329   */\n      swap1\n      pop\n        /* \"#utility.yul\":10339:10410   */\n      tag_472\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10396:10405   */\n      dup4\n        /* \"#utility.yul\":10392:10409   */\n      add\n        /* \"#utility.yul\":10383:10389   */\n      dup6\n        /* \"#utility.yul\":10339:10410   */\n      tag_337\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10420:10492   */\n      tag_473\n        /* \"#utility.yul\":10488:10490   */\n      0x20\n        /* \"#utility.yul\":10477:10486   */\n      dup4\n        /* \"#utility.yul\":10473:10491   */\n      add\n        /* \"#utility.yul\":10464:10470   */\n      dup5\n        /* \"#utility.yul\":10420:10492   */\n      tag_333\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10167:10499   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10505:10699   */\n    tag_208:\n        /* \"#utility.yul\":10545:10549   */\n      0x00\n        /* \"#utility.yul\":10565:10585   */\n      tag_475\n        /* \"#utility.yul\":10583:10584   */\n      dup3\n        /* \"#utility.yul\":10565:10585   */\n      tag_329\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10560:10585   */\n      swap2\n      pop\n        /* \"#utility.yul\":10599:10619   */\n      tag_476\n        /* \"#utility.yul\":10617:10618   */\n      dup4\n        /* \"#utility.yul\":10599:10619   */\n      tag_329\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10594:10619   */\n      swap3\n      pop\n        /* \"#utility.yul\":10643:10644   */\n      dup3\n        /* \"#utility.yul\":10640:10641   */\n      dup3\n        /* \"#utility.yul\":10636:10645   */\n      sub\n        /* \"#utility.yul\":10628:10645   */\n      swap1\n      pop\n        /* \"#utility.yul\":10667:10668   */\n      dup2\n        /* \"#utility.yul\":10661:10665   */\n      dup2\n        /* \"#utility.yul\":10658:10669   */\n      gt\n        /* \"#utility.yul\":10655:10692   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10672:10690   */\n      tag_478\n      tag_340\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10655:10692   */\n    tag_477:\n        /* \"#utility.yul\":10505:10699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10705:10879   */\n    tag_344:\n        /* \"#utility.yul\":10845:10871   */\n      0x4845414c54485f50524f46455353494f4e414c5f46554c4c0000000000000000\n        /* \"#utility.yul\":10841:10842   */\n      0x00\n        /* \"#utility.yul\":10833:10839   */\n      dup3\n        /* \"#utility.yul\":10829:10843   */\n      add\n        /* \"#utility.yul\":10822:10872   */\n      mstore\n        /* \"#utility.yul\":10705:10879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10885:11287   */\n    tag_345:\n        /* \"#utility.yul\":11045:11048   */\n      0x00\n        /* \"#utility.yul\":11066:11151   */\n      tag_481\n        /* \"#utility.yul\":11148:11150   */\n      0x18\n        /* \"#utility.yul\":11143:11146   */\n      dup4\n        /* \"#utility.yul\":11066:11151   */\n      tag_341\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11059:11151   */\n      swap2\n      pop\n        /* \"#utility.yul\":11160:11253   */\n      tag_482\n        /* \"#utility.yul\":11249:11252   */\n      dup3\n        /* \"#utility.yul\":11160:11253   */\n      tag_344\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11278:11280   */\n      0x18\n        /* \"#utility.yul\":11273:11276   */\n      dup3\n        /* \"#utility.yul\":11269:11281   */\n      add\n        /* \"#utility.yul\":11262:11281   */\n      swap1\n      pop\n        /* \"#utility.yul\":10885:11287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11293:11674   */\n    tag_215:\n        /* \"#utility.yul\":11478:11481   */\n      0x00\n        /* \"#utility.yul\":11500:11648   */\n      tag_484\n        /* \"#utility.yul\":11644:11647   */\n      dup3\n        /* \"#utility.yul\":11500:11648   */\n      tag_345\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11493:11648   */\n      swap2\n      pop\n        /* \"#utility.yul\":11665:11668   */\n      dup2\n        /* \"#utility.yul\":11658:11668   */\n      swap1\n      pop\n        /* \"#utility.yul\":11293:11674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11680:11853   */\n    tag_346:\n        /* \"#utility.yul\":11820:11845   */\n      0x4845414c54485f50524f46455353494f4e414c5f4d4944000000000000000000\n        /* \"#utility.yul\":11816:11817   */\n      0x00\n        /* \"#utility.yul\":11808:11814   */\n      dup3\n        /* \"#utility.yul\":11804:11818   */\n      add\n        /* \"#utility.yul\":11797:11846   */\n      mstore\n        /* \"#utility.yul\":11680:11853   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11859:12261   */\n    tag_347:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12125   */\n      tag_487\n        /* \"#utility.yul\":12122:12124   */\n      0x17\n        /* \"#utility.yul\":12117:12120   */\n      dup4\n        /* \"#utility.yul\":12040:12125   */\n      tag_341\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12033:12125   */\n      swap2\n      pop\n        /* \"#utility.yul\":12134:12227   */\n      tag_488\n        /* \"#utility.yul\":12223:12226   */\n      dup3\n        /* \"#utility.yul\":12134:12227   */\n      tag_346\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12252:12254   */\n      0x17\n        /* \"#utility.yul\":12247:12250   */\n      dup3\n        /* \"#utility.yul\":12243:12255   */\n      add\n        /* \"#utility.yul\":12236:12255   */\n      swap1\n      pop\n        /* \"#utility.yul\":11859:12261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12267:12648   */\n    tag_220:\n        /* \"#utility.yul\":12452:12455   */\n      0x00\n        /* \"#utility.yul\":12474:12622   */\n      tag_490\n        /* \"#utility.yul\":12618:12621   */\n      dup3\n        /* \"#utility.yul\":12474:12622   */\n      tag_347\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12467:12622   */\n      swap2\n      pop\n        /* \"#utility.yul\":12639:12642   */\n      dup2\n        /* \"#utility.yul\":12632:12642   */\n      swap1\n      pop\n        /* \"#utility.yul\":12267:12648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12654:12827   */\n    tag_348:\n        /* \"#utility.yul\":12794:12819   */\n      0x4845414c54485f50524f46455353494f4e414c5f4c4f57000000000000000000\n        /* \"#utility.yul\":12790:12791   */\n      0x00\n        /* \"#utility.yul\":12782:12788   */\n      dup3\n        /* \"#utility.yul\":12778:12792   */\n      add\n        /* \"#utility.yul\":12771:12820   */\n      mstore\n        /* \"#utility.yul\":12654:12827   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12833:13235   */\n    tag_349:\n        /* \"#utility.yul\":12993:12996   */\n      0x00\n        /* \"#utility.yul\":13014:13099   */\n      tag_493\n        /* \"#utility.yul\":13096:13098   */\n      0x17\n        /* \"#utility.yul\":13091:13094   */\n      dup4\n        /* \"#utility.yul\":13014:13099   */\n      tag_341\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13007:13099   */\n      swap2\n      pop\n        /* \"#utility.yul\":13108:13201   */\n      tag_494\n        /* \"#utility.yul\":13197:13200   */\n      dup3\n        /* \"#utility.yul\":13108:13201   */\n      tag_348\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13226:13228   */\n      0x17\n        /* \"#utility.yul\":13221:13224   */\n      dup3\n        /* \"#utility.yul\":13217:13229   */\n      add\n        /* \"#utility.yul\":13210:13229   */\n      swap1\n      pop\n        /* \"#utility.yul\":12833:13235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13241:13622   */\n    tag_225:\n        /* \"#utility.yul\":13426:13429   */\n      0x00\n        /* \"#utility.yul\":13448:13596   */\n      tag_496\n        /* \"#utility.yul\":13592:13595   */\n      dup3\n        /* \"#utility.yul\":13448:13596   */\n      tag_349\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13441:13596   */\n      swap2\n      pop\n        /* \"#utility.yul\":13613:13616   */\n      dup2\n        /* \"#utility.yul\":13606:13616   */\n      swap1\n      pop\n        /* \"#utility.yul\":13241:13622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13628:13803   */\n    tag_350:\n        /* \"#utility.yul\":13768:13795   */\n      0x556e7265636f676e697a656420616363657373206c6576656c00000000000000\n        /* \"#utility.yul\":13764:13765   */\n      0x00\n        /* \"#utility.yul\":13756:13762   */\n      dup3\n        /* \"#utility.yul\":13752:13766   */\n      add\n        /* \"#utility.yul\":13745:13796   */\n      mstore\n        /* \"#utility.yul\":13628:13803   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13809:14175   */\n    tag_351:\n        /* \"#utility.yul\":13951:13954   */\n      0x00\n        /* \"#utility.yul\":13972:14039   */\n      tag_499\n        /* \"#utility.yul\":14036:14038   */\n      0x19\n        /* \"#utility.yul\":14031:14034   */\n      dup4\n        /* \"#utility.yul\":13972:14039   */\n      tag_334\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13965:14039   */\n      swap2\n      pop\n        /* \"#utility.yul\":14048:14141   */\n      tag_500\n        /* \"#utility.yul\":14137:14140   */\n      dup3\n        /* \"#utility.yul\":14048:14141   */\n      tag_350\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14166:14168   */\n      0x20\n        /* \"#utility.yul\":14161:14164   */\n      dup3\n        /* \"#utility.yul\":14157:14169   */\n      add\n        /* \"#utility.yul\":14150:14169   */\n      swap1\n      pop\n        /* \"#utility.yul\":13809:14175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14181:14600   */\n    tag_228:\n        /* \"#utility.yul\":14347:14351   */\n      0x00\n        /* \"#utility.yul\":14385:14387   */\n      0x20\n        /* \"#utility.yul\":14374:14383   */\n      dup3\n        /* \"#utility.yul\":14370:14388   */\n      add\n        /* \"#utility.yul\":14362:14388   */\n      swap1\n      pop\n        /* \"#utility.yul\":14434:14443   */\n      dup2\n        /* \"#utility.yul\":14428:14432   */\n      dup2\n        /* \"#utility.yul\":14424:14444   */\n      sub\n        /* \"#utility.yul\":14420:14421   */\n      0x00\n        /* \"#utility.yul\":14409:14418   */\n      dup4\n        /* \"#utility.yul\":14405:14422   */\n      add\n        /* \"#utility.yul\":14398:14445   */\n      mstore\n        /* \"#utility.yul\":14462:14593   */\n      tag_502\n        /* \"#utility.yul\":14588:14592   */\n      dup2\n        /* \"#utility.yul\":14462:14593   */\n      tag_351\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14454:14593   */\n      swap1\n      pop\n        /* \"#utility.yul\":14181:14600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14606:14753   */\n    tag_352:\n        /* \"#utility.yul\":14707:14718   */\n      0x00\n        /* \"#utility.yul\":14744:14747   */\n      dup2\n        /* \"#utility.yul\":14729:14747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14606:14753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14759:14873   */\n    tag_353:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14879:15277   */\n    tag_354:\n        /* \"#utility.yul\":15038:15041   */\n      0x00\n        /* \"#utility.yul\":15059:15142   */\n      tag_506\n        /* \"#utility.yul\":15140:15141   */\n      0x00\n        /* \"#utility.yul\":15135:15138   */\n      dup4\n        /* \"#utility.yul\":15059:15142   */\n      tag_352\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15052:15142   */\n      swap2\n      pop\n        /* \"#utility.yul\":15151:15244   */\n      tag_507\n        /* \"#utility.yul\":15240:15243   */\n      dup3\n        /* \"#utility.yul\":15151:15244   */\n      tag_353\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15264:15267   */\n      dup3\n        /* \"#utility.yul\":15260:15271   */\n      add\n        /* \"#utility.yul\":15253:15271   */\n      swap1\n      pop\n        /* \"#utility.yul\":14879:15277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15283:15662   */\n    tag_249:\n        /* \"#utility.yul\":15467:15470   */\n      0x00\n        /* \"#utility.yul\":15489:15636   */\n      tag_509\n        /* \"#utility.yul\":15632:15635   */\n      dup3\n        /* \"#utility.yul\":15489:15636   */\n      tag_354\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15482:15636   */\n      swap2\n      pop\n        /* \"#utility.yul\":15653:15656   */\n      dup2\n        /* \"#utility.yul\":15646:15656   */\n      swap1\n      pop\n        /* \"#utility.yul\":15283:15662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15668:15831   */\n    tag_355:\n        /* \"#utility.yul\":15808:15823   */\n      0x5061796f7574206661696c656400000000000000000000000000000000000000\n        /* \"#utility.yul\":15804:15805   */\n      0x00\n        /* \"#utility.yul\":15796:15802   */\n      dup3\n        /* \"#utility.yul\":15792:15806   */\n      add\n        /* \"#utility.yul\":15785:15824   */\n      mstore\n        /* \"#utility.yul\":15668:15831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15837:16203   */\n    tag_356:\n        /* \"#utility.yul\":15979:15982   */\n      0x00\n        /* \"#utility.yul\":16000:16067   */\n      tag_512\n        /* \"#utility.yul\":16064:16066   */\n      0x0d\n        /* \"#utility.yul\":16059:16062   */\n      dup4\n        /* \"#utility.yul\":16000:16067   */\n      tag_334\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15993:16067   */\n      swap2\n      pop\n        /* \"#utility.yul\":16076:16169   */\n      tag_513\n        /* \"#utility.yul\":16165:16168   */\n      dup3\n        /* \"#utility.yul\":16076:16169   */\n      tag_355\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16194:16196   */\n      0x20\n        /* \"#utility.yul\":16189:16192   */\n      dup3\n        /* \"#utility.yul\":16185:16197   */\n      add\n        /* \"#utility.yul\":16178:16197   */\n      swap1\n      pop\n        /* \"#utility.yul\":15837:16203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16209:16628   */\n    tag_255:\n        /* \"#utility.yul\":16375:16379   */\n      0x00\n        /* \"#utility.yul\":16413:16415   */\n      0x20\n        /* \"#utility.yul\":16402:16411   */\n      dup3\n        /* \"#utility.yul\":16398:16416   */\n      add\n        /* \"#utility.yul\":16390:16416   */\n      swap1\n      pop\n        /* \"#utility.yul\":16462:16471   */\n      dup2\n        /* \"#utility.yul\":16456:16460   */\n      dup2\n        /* \"#utility.yul\":16452:16472   */\n      sub\n        /* \"#utility.yul\":16448:16449   */\n      0x00\n        /* \"#utility.yul\":16437:16446   */\n      dup4\n        /* \"#utility.yul\":16433:16450   */\n      add\n        /* \"#utility.yul\":16426:16473   */\n      mstore\n        /* \"#utility.yul\":16490:16621   */\n      tag_515\n        /* \"#utility.yul\":16616:16620   */\n      dup2\n        /* \"#utility.yul\":16490:16621   */\n      tag_356\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16482:16621   */\n      swap1\n      pop\n        /* \"#utility.yul\":16209:16628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16634:16799   */\n    tag_357:\n        /* \"#utility.yul\":16774:16791   */\n      0x555345525f41444d494e5f524f4c450000000000000000000000000000000000\n        /* \"#utility.yul\":16770:16771   */\n      0x00\n        /* \"#utility.yul\":16762:16768   */\n      dup3\n        /* \"#utility.yul\":16758:16772   */\n      add\n        /* \"#utility.yul\":16751:16792   */\n      mstore\n        /* \"#utility.yul\":16634:16799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16805:17207   */\n    tag_358:\n        /* \"#utility.yul\":16965:16968   */\n      0x00\n        /* \"#utility.yul\":16986:17071   */\n      tag_518\n        /* \"#utility.yul\":17068:17070   */\n      0x0f\n        /* \"#utility.yul\":17063:17066   */\n      dup4\n        /* \"#utility.yul\":16986:17071   */\n      tag_341\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16979:17071   */\n      swap2\n      pop\n        /* \"#utility.yul\":17080:17173   */\n      tag_519\n        /* \"#utility.yul\":17169:17172   */\n      dup3\n        /* \"#utility.yul\":17080:17173   */\n      tag_357\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17198:17200   */\n      0x0f\n        /* \"#utility.yul\":17193:17196   */\n      dup3\n        /* \"#utility.yul\":17189:17201   */\n      add\n        /* \"#utility.yul\":17182:17201   */\n      swap1\n      pop\n        /* \"#utility.yul\":16805:17207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17213:17594   */\n    tag_270:\n        /* \"#utility.yul\":17398:17401   */\n      0x00\n        /* \"#utility.yul\":17420:17568   */\n      tag_521\n        /* \"#utility.yul\":17564:17567   */\n      dup3\n        /* \"#utility.yul\":17420:17568   */\n      tag_358\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17413:17568   */\n      swap2\n      pop\n        /* \"#utility.yul\":17585:17588   */\n      dup2\n        /* \"#utility.yul\":17578:17588   */\n      swap1\n      pop\n        /* \"#utility.yul\":17213:17594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17600:17932   */\n    tag_313:\n        /* \"#utility.yul\":17721:17725   */\n      0x00\n        /* \"#utility.yul\":17759:17761   */\n      0x40\n        /* \"#utility.yul\":17748:17757   */\n      dup3\n        /* \"#utility.yul\":17744:17762   */\n      add\n        /* \"#utility.yul\":17736:17762   */\n      swap1\n      pop\n        /* \"#utility.yul\":17772:17843   */\n      tag_523\n        /* \"#utility.yul\":17840:17841   */\n      0x00\n        /* \"#utility.yul\":17829:17838   */\n      dup4\n        /* \"#utility.yul\":17825:17842   */\n      add\n        /* \"#utility.yul\":17816:17822   */\n      dup6\n        /* \"#utility.yul\":17772:17843   */\n      tag_337\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17853:17925   */\n      tag_524\n        /* \"#utility.yul\":17921:17923   */\n      0x20\n        /* \"#utility.yul\":17910:17919   */\n      dup4\n        /* \"#utility.yul\":17906:17924   */\n      add\n        /* \"#utility.yul\":17897:17903   */\n      dup5\n        /* \"#utility.yul\":17853:17925   */\n      tag_332\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17600:17932   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004b321d229cdeea078bf583c0be70c7711c9d446b731d92a5f048ad9ee6a33c964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1356": {
									"entryPoint": null,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 276,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1150": {
									"entryPoint": 722,
									"id": 1150,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setRoleAdmin_217": {
									"entryPoint": 527,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 729,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 623,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4047:11",
										"nodeType": "YulBlock",
										"src": "0:4047:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "121:34:11",
													"nodeType": "YulBlock",
													"src": "121:34:11",
													"statements": [
														{
															"nativeSrc": "131:18:11",
															"nodeType": "YulAssignment",
															"src": "131:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "146:3:11",
																"nodeType": "YulIdentifier",
																"src": "146:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "131:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "131:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "93:3:11",
														"nodeType": "YulTypedName",
														"src": "93:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "98:6:11",
														"nodeType": "YulTypedName",
														"src": "98:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "109:11:11",
														"nodeType": "YulTypedName",
														"src": "109:11:11",
														"type": ""
													}
												],
												"src": "7:148:11"
											},
											{
												"body": {
													"nativeSrc": "267:59:11",
													"nodeType": "YulBlock",
													"src": "267:59:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "289:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "297:1:11",
																				"nodeType": "YulLiteral",
																				"src": "297:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "285:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "285:3:11"
																		},
																		"nativeSrc": "285:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "285:14:11"
																	},
																	{
																		"hexValue": "555345525f41444d494e5f524f4c45",
																		"kind": "string",
																		"nativeSrc": "301:17:11",
																		"nodeType": "YulLiteral",
																		"src": "301:17:11",
																		"type": "",
																		"value": "USER_ADMIN_ROLE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:11"
																},
																"nativeSrc": "278:41:11",
																"nodeType": "YulFunctionCall",
																"src": "278:41:11"
															},
															"nativeSrc": "278:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "278:41:11"
														}
													]
												},
												"name": "store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
												"nativeSrc": "161:165:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "259:6:11",
														"nodeType": "YulTypedName",
														"src": "259:6:11",
														"type": ""
													}
												],
												"src": "161:165:11"
											},
											{
												"body": {
													"nativeSrc": "496:238:11",
													"nodeType": "YulBlock",
													"src": "496:238:11",
													"statements": [
														{
															"nativeSrc": "506:92:11",
															"nodeType": "YulAssignment",
															"src": "506:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "590:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "590:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "595:2:11",
																		"nodeType": "YulLiteral",
																		"src": "595:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "513:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "513:76:11"
																},
																"nativeSrc": "513:85:11",
																"nodeType": "YulFunctionCall",
																"src": "513:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "506:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "696:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "696:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
																	"nativeSrc": "607:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:88:11"
																},
																"nativeSrc": "607:93:11",
																"nodeType": "YulFunctionCall",
																"src": "607:93:11"
															},
															"nativeSrc": "607:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "607:93:11"
														},
														{
															"nativeSrc": "709:19:11",
															"nodeType": "YulAssignment",
															"src": "709:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "720:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "720:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "725:2:11",
																		"nodeType": "YulLiteral",
																		"src": "725:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "716:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:11"
																},
																"nativeSrc": "716:12:11",
																"nodeType": "YulFunctionCall",
																"src": "716:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "709:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "332:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "484:3:11",
														"nodeType": "YulTypedName",
														"src": "484:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "492:3:11",
														"nodeType": "YulTypedName",
														"src": "492:3:11",
														"type": ""
													}
												],
												"src": "332:402:11"
											},
											{
												"body": {
													"nativeSrc": "929:192:11",
													"nodeType": "YulBlock",
													"src": "929:192:11",
													"statements": [
														{
															"nativeSrc": "940:155:11",
															"nodeType": "YulAssignment",
															"src": "940:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1091:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1091:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "947:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "947:142:11"
																},
																"nativeSrc": "947:148:11",
																"nodeType": "YulFunctionCall",
																"src": "947:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "940:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "940:3:11"
																}
															]
														},
														{
															"nativeSrc": "1105:10:11",
															"nodeType": "YulAssignment",
															"src": "1105:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "1112:3:11",
																"nodeType": "YulIdentifier",
																"src": "1112:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1105:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "740:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "916:3:11",
														"nodeType": "YulTypedName",
														"src": "916:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "925:3:11",
														"nodeType": "YulTypedName",
														"src": "925:3:11",
														"type": ""
													}
												],
												"src": "740:381:11"
											},
											{
												"body": {
													"nativeSrc": "1233:68:11",
													"nodeType": "YulBlock",
													"src": "1233:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1255:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1263:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1263:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1251:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:11"
																		},
																		"nativeSrc": "1251:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1251:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f46554c4c",
																		"kind": "string",
																		"nativeSrc": "1267:26:11",
																		"nodeType": "YulLiteral",
																		"src": "1267:26:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_FULL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1244:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:11"
																},
																"nativeSrc": "1244:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1244:50:11"
															},
															"nativeSrc": "1244:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "1244:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
												"nativeSrc": "1127:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1225:6:11",
														"nodeType": "YulTypedName",
														"src": "1225:6:11",
														"type": ""
													}
												],
												"src": "1127:174:11"
											},
											{
												"body": {
													"nativeSrc": "1471:238:11",
													"nodeType": "YulBlock",
													"src": "1471:238:11",
													"statements": [
														{
															"nativeSrc": "1481:92:11",
															"nodeType": "YulAssignment",
															"src": "1481:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1565:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1565:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1488:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "1488:76:11"
																},
																"nativeSrc": "1488:85:11",
																"nodeType": "YulFunctionCall",
																"src": "1488:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1481:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1671:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1671:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
																	"nativeSrc": "1582:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:88:11"
																},
																"nativeSrc": "1582:93:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:93:11"
															},
															"nativeSrc": "1582:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "1582:93:11"
														},
														{
															"nativeSrc": "1684:19:11",
															"nodeType": "YulAssignment",
															"src": "1684:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1695:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1695:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1700:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1700:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1691:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:11"
																},
																"nativeSrc": "1691:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1691:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1684:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1307:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1459:3:11",
														"nodeType": "YulTypedName",
														"src": "1459:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1467:3:11",
														"nodeType": "YulTypedName",
														"src": "1467:3:11",
														"type": ""
													}
												],
												"src": "1307:402:11"
											},
											{
												"body": {
													"nativeSrc": "1904:192:11",
													"nodeType": "YulBlock",
													"src": "1904:192:11",
													"statements": [
														{
															"nativeSrc": "1915:155:11",
															"nodeType": "YulAssignment",
															"src": "1915:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2066:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2066:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1922:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:142:11"
																},
																"nativeSrc": "1922:148:11",
																"nodeType": "YulFunctionCall",
																"src": "1922:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1915:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1915:3:11"
																}
															]
														},
														{
															"nativeSrc": "2080:10:11",
															"nodeType": "YulAssignment",
															"src": "2080:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "2087:3:11",
																"nodeType": "YulIdentifier",
																"src": "2087:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2080:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1715:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1891:3:11",
														"nodeType": "YulTypedName",
														"src": "1891:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1900:3:11",
														"nodeType": "YulTypedName",
														"src": "1900:3:11",
														"type": ""
													}
												],
												"src": "1715:381:11"
											},
											{
												"body": {
													"nativeSrc": "2208:67:11",
													"nodeType": "YulBlock",
													"src": "2208:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2230:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2230:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2238:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2238:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2226:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2226:3:11"
																		},
																		"nativeSrc": "2226:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2226:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f4d4944",
																		"kind": "string",
																		"nativeSrc": "2242:25:11",
																		"nodeType": "YulLiteral",
																		"src": "2242:25:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_MID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2219:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2219:6:11"
																},
																"nativeSrc": "2219:49:11",
																"nodeType": "YulFunctionCall",
																"src": "2219:49:11"
															},
															"nativeSrc": "2219:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "2219:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
												"nativeSrc": "2102:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2200:6:11",
														"nodeType": "YulTypedName",
														"src": "2200:6:11",
														"type": ""
													}
												],
												"src": "2102:173:11"
											},
											{
												"body": {
													"nativeSrc": "2445:238:11",
													"nodeType": "YulBlock",
													"src": "2445:238:11",
													"statements": [
														{
															"nativeSrc": "2455:92:11",
															"nodeType": "YulAssignment",
															"src": "2455:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2539:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2544:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2544:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2462:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "2462:76:11"
																},
																"nativeSrc": "2462:85:11",
																"nodeType": "YulFunctionCall",
																"src": "2462:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2645:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2645:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
																	"nativeSrc": "2556:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "2556:88:11"
																},
																"nativeSrc": "2556:93:11",
																"nodeType": "YulFunctionCall",
																"src": "2556:93:11"
															},
															"nativeSrc": "2556:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "2556:93:11"
														},
														{
															"nativeSrc": "2658:19:11",
															"nodeType": "YulAssignment",
															"src": "2658:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2669:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2669:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2674:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2665:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:11"
																},
																"nativeSrc": "2665:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2665:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2658:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2281:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2433:3:11",
														"nodeType": "YulTypedName",
														"src": "2433:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2441:3:11",
														"nodeType": "YulTypedName",
														"src": "2441:3:11",
														"type": ""
													}
												],
												"src": "2281:402:11"
											},
											{
												"body": {
													"nativeSrc": "2878:192:11",
													"nodeType": "YulBlock",
													"src": "2878:192:11",
													"statements": [
														{
															"nativeSrc": "2889:155:11",
															"nodeType": "YulAssignment",
															"src": "2889:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3040:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3040:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2896:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "2896:142:11"
																},
																"nativeSrc": "2896:148:11",
																"nodeType": "YulFunctionCall",
																"src": "2896:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2889:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2889:3:11"
																}
															]
														},
														{
															"nativeSrc": "3054:10:11",
															"nodeType": "YulAssignment",
															"src": "3054:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "3061:3:11",
																"nodeType": "YulIdentifier",
																"src": "3061:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3054:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2689:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2865:3:11",
														"nodeType": "YulTypedName",
														"src": "2865:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2874:3:11",
														"nodeType": "YulTypedName",
														"src": "2874:3:11",
														"type": ""
													}
												],
												"src": "2689:381:11"
											},
											{
												"body": {
													"nativeSrc": "3182:67:11",
													"nodeType": "YulBlock",
													"src": "3182:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3204:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3204:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3212:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3212:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3200:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3200:3:11"
																		},
																		"nativeSrc": "3200:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3200:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f4c4f57",
																		"kind": "string",
																		"nativeSrc": "3216:25:11",
																		"nodeType": "YulLiteral",
																		"src": "3216:25:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_LOW"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:11"
																},
																"nativeSrc": "3193:49:11",
																"nodeType": "YulFunctionCall",
																"src": "3193:49:11"
															},
															"nativeSrc": "3193:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "3193:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
												"nativeSrc": "3076:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3174:6:11",
														"nodeType": "YulTypedName",
														"src": "3174:6:11",
														"type": ""
													}
												],
												"src": "3076:173:11"
											},
											{
												"body": {
													"nativeSrc": "3419:238:11",
													"nodeType": "YulBlock",
													"src": "3419:238:11",
													"statements": [
														{
															"nativeSrc": "3429:92:11",
															"nodeType": "YulAssignment",
															"src": "3429:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3513:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3513:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3518:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3436:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "3436:76:11"
																},
																"nativeSrc": "3436:85:11",
																"nodeType": "YulFunctionCall",
																"src": "3436:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3429:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3619:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3619:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
																	"nativeSrc": "3530:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "3530:88:11"
																},
																"nativeSrc": "3530:93:11",
																"nodeType": "YulFunctionCall",
																"src": "3530:93:11"
															},
															"nativeSrc": "3530:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "3530:93:11"
														},
														{
															"nativeSrc": "3632:19:11",
															"nodeType": "YulAssignment",
															"src": "3632:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3643:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3643:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3648:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3648:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3639:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:11"
																},
																"nativeSrc": "3639:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3639:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3632:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3632:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3255:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3407:3:11",
														"nodeType": "YulTypedName",
														"src": "3407:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3415:3:11",
														"nodeType": "YulTypedName",
														"src": "3415:3:11",
														"type": ""
													}
												],
												"src": "3255:402:11"
											},
											{
												"body": {
													"nativeSrc": "3852:192:11",
													"nodeType": "YulBlock",
													"src": "3852:192:11",
													"statements": [
														{
															"nativeSrc": "3863:155:11",
															"nodeType": "YulAssignment",
															"src": "3863:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4014:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4014:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3870:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "3870:142:11"
																},
																"nativeSrc": "3870:148:11",
																"nodeType": "YulFunctionCall",
																"src": "3870:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3863:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:11"
																}
															]
														},
														{
															"nativeSrc": "4028:10:11",
															"nodeType": "YulAssignment",
															"src": "4028:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "4035:3:11",
																"nodeType": "YulIdentifier",
																"src": "4035:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4028:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3663:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3839:3:11",
														"nodeType": "YulTypedName",
														"src": "3839:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3848:3:11",
														"nodeType": "YulTypedName",
														"src": "3848:3:11",
														"type": ""
													}
												],
												"src": "3663:381:11"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107(memPtr) {\n\n        mstore(add(memPtr, 0), \"USER_ADMIN_ROLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 15)\n        store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107(pos)\n        end := add(pos, 15)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_FULL\")\n\n    }\n\n    function abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 24)\n        store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14(pos)\n        end := add(pos, 24)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_MID\")\n\n    }\n\n    function abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_LOW\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x25 PUSH0 DUP1 SHL CALLER PUSH3 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x3B SWAP1 PUSH3 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 DUP1 SHL PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x75 SWAP1 PUSH3 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 DUP1 SHL PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xAF SWAP1 PUSH3 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 DUP1 SHL PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10E PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xE9 SWAP1 PUSH3 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 DUP1 SHL PUSH3 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x48F JUMP JUMPDEST PUSH0 PUSH3 0x127 DUP4 DUP4 PUSH3 0x26F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x205 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1A1 PUSH3 0x2D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x209 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x221 DUP4 PUSH3 0x2D9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555345525F41444D494E5F524F4C450000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x335 PUSH1 0xF DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP2 POP PUSH3 0x342 DUP3 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x359 DUP3 PUSH3 0x327 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F46554C4C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x399 PUSH1 0x18 DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP2 POP PUSH3 0x3A6 DUP3 PUSH3 0x363 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3BD DUP3 PUSH3 0x38B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4D4944000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3FD PUSH1 0x17 DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP2 POP PUSH3 0x40A DUP3 PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x421 DUP3 PUSH3 0x3EF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4C4F57000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x461 PUSH1 0x17 DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP2 POP PUSH3 0x46E DUP3 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x485 DUP3 PUSH3 0x453 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD DUP1 PUSH3 0x49D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x585F4C49 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xD6770522 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE096CFED GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE096CFED EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0xE6D6384A EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xF0F7AF4D EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF2C80089 EQ PUSH2 0x64D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xD6770522 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD7B8A07A EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xDD65AB1F EQ PUSH2 0x597 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xB24B56B0 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xB89F9AC1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x51D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x585F4C49 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x5EA06A9C EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x465 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x3FD2C4F1 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x3FD2C4F1 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x48570EE6 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x51FEA917 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x55F93E6E EQ PUSH2 0x3EB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x2F432261 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x337 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x9C19362 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xADBBDD3 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xFA750FF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x24CCC1A6 EQ PUSH2 0x297 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x104B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B5 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DF PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x11A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x11DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6E9 JUMPI POP PUSH2 0x6E8 DUP3 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x7A143568E7A2E32F33C2AB85BB8CB9FF7E78D00E650D6973C8873BBDC075E811 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP2 PUSH32 0xACC0FD4B3527D0953ABDCE4AC9A5F786E3D780A3B4BBEFEFB360A8642429E0F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x997 DUP3 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x9AA DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA43 DUP3 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA75 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA5A SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC9 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP3 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x434ADBD1794F49FFEB1EA04DE9AD62FB01CC18179124CDA3CE5EEE58F010F969 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xC91 JUMPI PUSH2 0xC8B PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC6F SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xCCD JUMPI PUSH2 0xCC7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAB SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xD09 JUMPI PUSH2 0xD03 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3B SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2224B7DFF324F24F810CF3BB4055085A9FD09DB933A221DEA091E176F4D16C8C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xDCA JUMPI PUSH0 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDC SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xE06 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xE34 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE18 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xE42 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE7D SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF2F SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA9 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xFD1D4F59CF1013EE232282CAC3356B455525C6D4D04D18BED8216B7B6C2BEB60 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1032 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1056 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1084 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1068 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1100 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1124 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1152 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1136 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x115F DUP3 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x1168 DUP2 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1172 DUP4 DUP4 PUSH2 0x1471 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1187 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x11AB PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x11D9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11BD SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x120A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11EF SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xFA9941FD9436B8F798D8DA6C4747847BF053207FE545C37222588DB50A6742F8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x126D PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x129B PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127F SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12EB SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1379 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x155A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x138C DUP4 DUP4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x1460 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x13FD PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1464 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x147C DUP4 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14ED PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1554 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1564 DUP3 DUP3 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x15A7 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E3 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP2 EQ PUSH2 0x15ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FE DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1626 DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1643 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165C PUSH0 DUP4 ADD DUP5 PUSH2 0x163A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x1662 JUMP JUMPDEST DUP2 EQ PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168F DUP2 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16A9 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16E9 DUP3 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1703 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1714 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172C DUP2 PUSH2 0x171A JUMP JUMPDEST DUP2 EQ PUSH2 0x1736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1747 DUP2 PUSH2 0x1723 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1771 DUP7 DUP3 DUP8 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1782 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1793 DUP7 DUP3 DUP8 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17BF PUSH0 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DB JUMPI PUSH2 0x17DA PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E8 DUP6 DUP3 DUP7 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x171A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH0 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP7 DUP3 DUP8 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1860 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1871 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CE JUMPI PUSH2 0x18CD PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DB DUP5 DUP3 DUP6 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x466163652068617368206E6F7420726567697374657265640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1928 PUSH1 0x18 DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1933 DUP3 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1955 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x197E PUSH0 DUP4 ADD DUP7 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x198B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1998 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 EQ PUSH2 0x19B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C4 DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH2 0x19DE PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EC DUP5 DUP3 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A2C DUP3 PUSH2 0x171A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A37 DUP4 PUSH2 0x171A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x19F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5041594D454E545F41444D494E5F524F4C450000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A93 PUSH1 0x12 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9E DUP3 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x12 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A87 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH0 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1ADD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEE DUP3 PUSH2 0x171A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF9 DUP4 PUSH2 0x171A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B11 JUMPI PUSH2 0x1B10 PUSH2 0x19F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F46554C4C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B PUSH1 0x18 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B56 DUP3 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP3 PUSH2 0x1B3F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4D4944000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA9 PUSH1 0x17 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB4 DUP3 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 DUP3 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4C4F57000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C07 PUSH1 0x17 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C12 DUP3 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C27 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7265636F676E697A656420616363657373206C6576656C00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C65 PUSH1 0x19 DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C70 DUP3 PUSH2 0x1C31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB1 PUSH0 DUP4 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBC DUP3 PUSH2 0x1CA3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD0 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796F7574206661696C656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E PUSH1 0xD DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D19 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3B DUP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555345525F41444D494E5F524F4C450000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D76 PUSH1 0xF DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP3 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D96 DUP3 PUSH2 0x1D6A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB3 PUSH0 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1DC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB3 0x21 0xD2 0x29 0xCD 0xEE LOG0 PUSH25 0xBF583C0BE70C7711C9D446B731D92A5F048AD9EE6A33C96473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "231:5320:10:-:0;;;1867:338;;;;;;;;;;1891:42;2232:4:0;1902:18:10;;1922:10;1891;;;:42;;:::i;:::-;;1943:50;368:35;;;;;;;:::i;:::-;;;;;;;;;;;;;358:46;;;;;;2232:4:0;1974:18:10;;1943:13;;;:50;;:::i;:::-;2003:59;571:44;;;;;;;:::i;:::-;;;;;;;;;;;;;561:55;;;;;;2232:4:0;2043:18:10;;2003:13;;;:59;;:::i;:::-;2072:58;682:43;;;;;;;:::i;:::-;;;;;;;;;;;;;672:54;;;;;;2232:4:0;2111:18:10;;2072:13;;;:58;;:::i;:::-;2140;792:43;;;;;;;:::i;:::-;;;;;;;;;;;;;782:54;;;;;;2232:4:0;2179:18:10;;2140:13;;;:58;;:::i;:::-;231:5320;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;5698:247::-;5781:25;5809:18;5822:4;5809:12;;;:18;;:::i;:::-;5781:46;;5862:9;5837:6;:12;5844:4;5837:12;;;;;;;;;;;:22;;:34;;;;5928:9;5909:17;5903:4;5886:52;;;;;;;;;;5771:174;5698:247;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;7:148:11:-;109:11;146:3;131:18;;7:148;;;;:::o;161:165::-;301:17;297:1;289:6;285:14;278:41;161:165;:::o;332:402::-;492:3;513:85;595:2;590:3;513:85;:::i;:::-;506:92;;607:93;696:3;607:93;:::i;:::-;725:2;720:3;716:12;709:19;;332:402;;;:::o;740:381::-;925:3;947:148;1091:3;947:148;:::i;:::-;940:155;;1112:3;1105:10;;740:381;;;:::o;1127:174::-;1267:26;1263:1;1255:6;1251:14;1244:50;1127:174;:::o;1307:402::-;1467:3;1488:85;1570:2;1565:3;1488:85;:::i;:::-;1481:92;;1582:93;1671:3;1582:93;:::i;:::-;1700:2;1695:3;1691:12;1684:19;;1307:402;;;:::o;1715:381::-;1900:3;1922:148;2066:3;1922:148;:::i;:::-;1915:155;;2087:3;2080:10;;1715:381;;;:::o;2102:173::-;2242:25;2238:1;2230:6;2226:14;2219:49;2102:173;:::o;2281:402::-;2441:3;2462:85;2544:2;2539:3;2462:85;:::i;:::-;2455:92;;2556:93;2645:3;2556:93;:::i;:::-;2674:2;2669:3;2665:12;2658:19;;2281:402;;;:::o;2689:381::-;2874:3;2896:148;3040:3;2896:148;:::i;:::-;2889:155;;3061:3;3054:10;;2689:381;;;:::o;3076:173::-;3216:25;3212:1;3204:6;3200:14;3193:49;3076:173;:::o;3255:402::-;3415:3;3436:85;3518:2;3513:3;3436:85;:::i;:::-;3429:92;;3530:93;3619:3;3530:93;:::i;:::-;3648:2;3643:3;3639:12;3632:19;;3255:402;;;:::o;3663:381::-;3848:3;3870:148;4014:3;3870:148;:::i;:::-;3863:155;;4035:3;4028:10;;3663:381;;;:::o;231:5320:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4331,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HEALTH_PROFESSIONAL_FULL_1234": {
									"entryPoint": 4788,
									"id": 1234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HEALTH_PROFESSIONAL_LOW_1250": {
									"entryPoint": 4131,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HEALTH_PROFESSIONAL_MID_1242": {
									"entryPoint": 4472,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAYMENT_ADMIN_ROLE_1226": {
									"entryPoint": 4337,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USER_ADMIN_ROLE_1218": {
									"entryPoint": 4828,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 5466,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 4973,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4993,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1150": {
									"entryPoint": 5226,
									"id": 1150,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 5233,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addPaymentAdmin_1609": {
									"entryPoint": 4171,
									"id": 1609,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addUserAdmin_1583": {
									"entryPoint": 4377,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceForTokenForFaceHash_1260": {
									"entryPoint": 2414,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@baseTokenBalanceForFaceHash_1264": {
									"entryPoint": 4767,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAccessLevelForAddress_1391": {
									"entryPoint": 3470,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2386,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2446,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 4232,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isFaceHashRegistered_1403": {
									"entryPoint": 1776,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@payoutChainBaseTokenToFaceHash_1570": {
									"entryPoint": 3691,
									"id": 1570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@payoutTokenForFaceHash_1522": {
									"entryPoint": 2632,
									"id": 1522,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@registerFaceHash_1690": {
									"entryPoint": 4573,
									"id": 1690,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registeredFaceHashes_1254": {
									"entryPoint": 2480,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removePaymentAdmin_1622": {
									"entryPoint": 4512,
									"id": 1622,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeUserAdmin_1596": {
									"entryPoint": 4706,
									"id": 1596,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2509,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4438,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendChainBaseTokenToFaceHash_1473": {
									"entryPoint": 2205,
									"id": 1473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sendTokenToFaceHash_1447": {
									"entryPoint": 1814,
									"id": 1447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1183": {
									"entryPoint": 4868,
									"id": 1183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1655,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyHealthWorker_1672": {
									"entryPoint": 3147,
									"id": 1672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_addresst_address": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_addresst_uint256": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67": {
									"entryPoint": 6751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17935:11",
										"nodeType": "YulBlock",
										"src": "0:17935:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1563:32:11",
													"nodeType": "YulBlock",
													"src": "1563:32:11",
													"statements": [
														{
															"nativeSrc": "1573:16:11",
															"nodeType": "YulAssignment",
															"src": "1573:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:11",
																"nodeType": "YulIdentifier",
																"src": "1584:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:11",
														"nodeType": "YulTypedName",
														"src": "1545:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:11",
														"nodeType": "YulTypedName",
														"src": "1555:7:11",
														"type": ""
													}
												],
												"src": "1518:77:11"
											},
											{
												"body": {
													"nativeSrc": "1644:79:11",
													"nodeType": "YulBlock",
													"src": "1644:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:11",
																"nodeType": "YulBlock",
																"src": "1701:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:11"
																			},
																			"nativeSrc": "1703:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:11"
																		},
																		"nativeSrc": "1703:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:11"
																				},
																				"nativeSrc": "1674:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:11"
																		},
																		"nativeSrc": "1664:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:11"
																},
																"nativeSrc": "1657:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:11"
															},
															"nativeSrc": "1654:63:11",
															"nodeType": "YulIf",
															"src": "1654:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:11",
														"nodeType": "YulTypedName",
														"src": "1637:5:11",
														"type": ""
													}
												],
												"src": "1601:122:11"
											},
											{
												"body": {
													"nativeSrc": "1781:87:11",
													"nodeType": "YulBlock",
													"src": "1781:87:11",
													"statements": [
														{
															"nativeSrc": "1791:29:11",
															"nodeType": "YulAssignment",
															"src": "1791:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:11"
																},
																"nativeSrc": "1800:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:11"
																},
																"nativeSrc": "1829:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:11"
															},
															"nativeSrc": "1829:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:11",
														"nodeType": "YulTypedName",
														"src": "1759:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:11",
														"nodeType": "YulTypedName",
														"src": "1767:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:11",
														"nodeType": "YulTypedName",
														"src": "1775:5:11",
														"type": ""
													}
												],
												"src": "1729:139:11"
											},
											{
												"body": {
													"nativeSrc": "1940:263:11",
													"nodeType": "YulBlock",
													"src": "1940:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:11",
																"nodeType": "YulBlock",
																"src": "1986:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:11"
																			},
																			"nativeSrc": "1988:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:11"
																		},
																		"nativeSrc": "1988:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:11"
																		},
																		"nativeSrc": "1957:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:11"
																},
																"nativeSrc": "1953:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:11"
															},
															"nativeSrc": "1950:119:11",
															"nodeType": "YulIf",
															"src": "1950:119:11"
														},
														{
															"nativeSrc": "2079:117:11",
															"nodeType": "YulBlock",
															"src": "2079:117:11",
															"statements": [
																{
																	"nativeSrc": "2094:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:11"
																				},
																				"nativeSrc": "2154:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:11"
																		},
																		"nativeSrc": "2133:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:11",
														"nodeType": "YulTypedName",
														"src": "1910:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:11",
														"nodeType": "YulTypedName",
														"src": "1921:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:11",
														"nodeType": "YulTypedName",
														"src": "1933:6:11",
														"type": ""
													}
												],
												"src": "1874:329:11"
											},
											{
												"body": {
													"nativeSrc": "2254:81:11",
													"nodeType": "YulBlock",
													"src": "2254:81:11",
													"statements": [
														{
															"nativeSrc": "2264:65:11",
															"nodeType": "YulAssignment",
															"src": "2264:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2286:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2275:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:11"
																},
																"nativeSrc": "2275:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2275:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2209:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:11",
														"nodeType": "YulTypedName",
														"src": "2236:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:11",
														"nodeType": "YulTypedName",
														"src": "2246:7:11",
														"type": ""
													}
												],
												"src": "2209:126:11"
											},
											{
												"body": {
													"nativeSrc": "2386:51:11",
													"nodeType": "YulBlock",
													"src": "2386:51:11",
													"statements": [
														{
															"nativeSrc": "2396:35:11",
															"nodeType": "YulAssignment",
															"src": "2396:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2425:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2425:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2407:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2407:17:11"
																},
																"nativeSrc": "2407:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2407:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2396:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2396:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2341:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2368:5:11",
														"nodeType": "YulTypedName",
														"src": "2368:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2378:7:11",
														"nodeType": "YulTypedName",
														"src": "2378:7:11",
														"type": ""
													}
												],
												"src": "2341:96:11"
											},
											{
												"body": {
													"nativeSrc": "2486:79:11",
													"nodeType": "YulBlock",
													"src": "2486:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2543:16:11",
																"nodeType": "YulBlock",
																"src": "2543:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2545:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:11"
																			},
																			"nativeSrc": "2545:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:11"
																		},
																		"nativeSrc": "2545:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2509:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2534:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2516:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:11"
																				},
																				"nativeSrc": "2516:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2506:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:11"
																		},
																		"nativeSrc": "2506:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2499:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:11"
																},
																"nativeSrc": "2499:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2499:43:11"
															},
															"nativeSrc": "2496:63:11",
															"nodeType": "YulIf",
															"src": "2496:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2443:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2479:5:11",
														"nodeType": "YulTypedName",
														"src": "2479:5:11",
														"type": ""
													}
												],
												"src": "2443:122:11"
											},
											{
												"body": {
													"nativeSrc": "2623:87:11",
													"nodeType": "YulBlock",
													"src": "2623:87:11",
													"statements": [
														{
															"nativeSrc": "2633:29:11",
															"nodeType": "YulAssignment",
															"src": "2633:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2655:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2642:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:11"
																},
																"nativeSrc": "2642:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2642:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2633:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2698:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2671:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:11"
																},
																"nativeSrc": "2671:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2671:33:11"
															},
															"nativeSrc": "2671:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2571:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2601:6:11",
														"nodeType": "YulTypedName",
														"src": "2601:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2609:3:11",
														"nodeType": "YulTypedName",
														"src": "2609:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2617:5:11",
														"nodeType": "YulTypedName",
														"src": "2617:5:11",
														"type": ""
													}
												],
												"src": "2571:139:11"
											},
											{
												"body": {
													"nativeSrc": "2761:32:11",
													"nodeType": "YulBlock",
													"src": "2761:32:11",
													"statements": [
														{
															"nativeSrc": "2771:16:11",
															"nodeType": "YulAssignment",
															"src": "2771:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2782:5:11",
																"nodeType": "YulIdentifier",
																"src": "2782:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2771:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2771:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2716:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2743:5:11",
														"nodeType": "YulTypedName",
														"src": "2743:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2753:7:11",
														"nodeType": "YulTypedName",
														"src": "2753:7:11",
														"type": ""
													}
												],
												"src": "2716:77:11"
											},
											{
												"body": {
													"nativeSrc": "2842:79:11",
													"nodeType": "YulBlock",
													"src": "2842:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2899:16:11",
																"nodeType": "YulBlock",
																"src": "2899:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2908:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2911:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2901:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:11"
																			},
																			"nativeSrc": "2901:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:11"
																		},
																		"nativeSrc": "2901:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2901:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2865:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2865:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2890:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2890:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2872:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2872:17:11"
																				},
																				"nativeSrc": "2872:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2872:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2862:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2862:2:11"
																		},
																		"nativeSrc": "2862:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2855:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2855:6:11"
																},
																"nativeSrc": "2855:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2855:43:11"
															},
															"nativeSrc": "2852:63:11",
															"nodeType": "YulIf",
															"src": "2852:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2799:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2835:5:11",
														"nodeType": "YulTypedName",
														"src": "2835:5:11",
														"type": ""
													}
												],
												"src": "2799:122:11"
											},
											{
												"body": {
													"nativeSrc": "2979:87:11",
													"nodeType": "YulBlock",
													"src": "2979:87:11",
													"statements": [
														{
															"nativeSrc": "2989:29:11",
															"nodeType": "YulAssignment",
															"src": "2989:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3011:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2998:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2998:12:11"
																},
																"nativeSrc": "2998:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2998:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2989:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2989:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3054:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3054:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3027:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3027:26:11"
																},
																"nativeSrc": "3027:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3027:33:11"
															},
															"nativeSrc": "3027:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3027:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2927:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2957:6:11",
														"nodeType": "YulTypedName",
														"src": "2957:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2965:3:11",
														"nodeType": "YulTypedName",
														"src": "2965:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2973:5:11",
														"nodeType": "YulTypedName",
														"src": "2973:5:11",
														"type": ""
													}
												],
												"src": "2927:139:11"
											},
											{
												"body": {
													"nativeSrc": "3172:519:11",
													"nodeType": "YulBlock",
													"src": "3172:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3218:83:11",
																"nodeType": "YulBlock",
																"src": "3218:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3220:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3220:77:11"
																			},
																			"nativeSrc": "3220:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3220:79:11"
																		},
																		"nativeSrc": "3220:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3220:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3193:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3193:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3202:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3189:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:11"
																		},
																		"nativeSrc": "3189:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3214:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3185:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:11"
																},
																"nativeSrc": "3185:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3185:32:11"
															},
															"nativeSrc": "3182:119:11",
															"nodeType": "YulIf",
															"src": "3182:119:11"
														},
														{
															"nativeSrc": "3311:117:11",
															"nodeType": "YulBlock",
															"src": "3311:117:11",
															"statements": [
																{
																	"nativeSrc": "3326:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3326:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3340:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3340:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3330:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3330:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3355:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3355:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3401:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:11"
																				},
																				"nativeSrc": "3386:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3365:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3365:20:11"
																		},
																		"nativeSrc": "3365:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3355:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3355:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3438:118:11",
															"nodeType": "YulBlock",
															"src": "3438:118:11",
															"statements": [
																{
																	"nativeSrc": "3453:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3453:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3467:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3467:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3457:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3457:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3483:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3483:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3518:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3518:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3529:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3529:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3514:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3514:3:11"
																				},
																				"nativeSrc": "3514:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3514:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3538:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3538:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3493:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3493:20:11"
																		},
																		"nativeSrc": "3493:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3493:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3483:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3483:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3566:118:11",
															"nodeType": "YulBlock",
															"src": "3566:118:11",
															"statements": [
																{
																	"nativeSrc": "3581:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3581:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3595:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3595:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3585:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3585:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3611:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3611:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3646:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3646:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3657:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3657:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3642:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:11"
																				},
																				"nativeSrc": "3642:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3642:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3666:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3666:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3621:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3621:20:11"
																		},
																		"nativeSrc": "3621:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3621:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3611:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3611:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_uint256",
												"nativeSrc": "3072:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3126:9:11",
														"nodeType": "YulTypedName",
														"src": "3126:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3137:7:11",
														"nodeType": "YulTypedName",
														"src": "3137:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3149:6:11",
														"nodeType": "YulTypedName",
														"src": "3149:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3157:6:11",
														"nodeType": "YulTypedName",
														"src": "3157:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3165:6:11",
														"nodeType": "YulTypedName",
														"src": "3165:6:11",
														"type": ""
													}
												],
												"src": "3072:619:11"
											},
											{
												"body": {
													"nativeSrc": "3762:53:11",
													"nodeType": "YulBlock",
													"src": "3762:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3779:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3779:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3802:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3802:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3784:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3784:17:11"
																		},
																		"nativeSrc": "3784:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3784:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3772:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:11"
																},
																"nativeSrc": "3772:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3772:37:11"
															},
															"nativeSrc": "3772:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3772:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3697:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3750:5:11",
														"nodeType": "YulTypedName",
														"src": "3750:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3757:3:11",
														"nodeType": "YulTypedName",
														"src": "3757:3:11",
														"type": ""
													}
												],
												"src": "3697:118:11"
											},
											{
												"body": {
													"nativeSrc": "3919:124:11",
													"nodeType": "YulBlock",
													"src": "3919:124:11",
													"statements": [
														{
															"nativeSrc": "3929:26:11",
															"nodeType": "YulAssignment",
															"src": "3929:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3941:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3941:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3952:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3952:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3937:3:11"
																},
																"nativeSrc": "3937:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3937:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3929:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3929:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4009:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4009:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4022:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4033:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4033:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:11"
																		},
																		"nativeSrc": "4018:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3965:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:11"
																},
																"nativeSrc": "3965:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3965:71:11"
															},
															"nativeSrc": "3965:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3965:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3821:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3891:9:11",
														"nodeType": "YulTypedName",
														"src": "3891:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3903:6:11",
														"nodeType": "YulTypedName",
														"src": "3903:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3914:4:11",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													}
												],
												"src": "3821:222:11"
											},
											{
												"body": {
													"nativeSrc": "4132:391:11",
													"nodeType": "YulBlock",
													"src": "4132:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4178:83:11",
																"nodeType": "YulBlock",
																"src": "4178:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4180:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4180:77:11"
																			},
																			"nativeSrc": "4180:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4180:79:11"
																		},
																		"nativeSrc": "4180:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4180:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4153:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4153:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4162:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4162:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4149:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:11"
																		},
																		"nativeSrc": "4149:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4149:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4174:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:11"
																},
																"nativeSrc": "4145:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4145:32:11"
															},
															"nativeSrc": "4142:119:11",
															"nodeType": "YulIf",
															"src": "4142:119:11"
														},
														{
															"nativeSrc": "4271:117:11",
															"nodeType": "YulBlock",
															"src": "4271:117:11",
															"statements": [
																{
																	"nativeSrc": "4286:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4286:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4300:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4290:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4290:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4315:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4315:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4350:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4350:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4361:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4361:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4346:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4346:3:11"
																				},
																				"nativeSrc": "4346:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4346:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4370:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4370:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4325:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4325:20:11"
																		},
																		"nativeSrc": "4325:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4325:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4315:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4315:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4398:118:11",
															"nodeType": "YulBlock",
															"src": "4398:118:11",
															"statements": [
																{
																	"nativeSrc": "4413:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4413:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4427:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4417:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4417:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4443:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4443:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4478:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4489:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4474:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4474:3:11"
																				},
																				"nativeSrc": "4474:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4474:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4498:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4498:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4453:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4453:20:11"
																		},
																		"nativeSrc": "4453:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4453:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4443:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4443:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4049:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4094:9:11",
														"nodeType": "YulTypedName",
														"src": "4094:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4105:7:11",
														"nodeType": "YulTypedName",
														"src": "4105:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4117:6:11",
														"nodeType": "YulTypedName",
														"src": "4117:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4125:6:11",
														"nodeType": "YulTypedName",
														"src": "4125:6:11",
														"type": ""
													}
												],
												"src": "4049:474:11"
											},
											{
												"body": {
													"nativeSrc": "4594:53:11",
													"nodeType": "YulBlock",
													"src": "4594:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4611:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4611:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4634:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4616:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4616:17:11"
																		},
																		"nativeSrc": "4616:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4604:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:11"
																},
																"nativeSrc": "4604:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4604:37:11"
															},
															"nativeSrc": "4604:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4604:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4529:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4582:5:11",
														"nodeType": "YulTypedName",
														"src": "4582:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4589:3:11",
														"nodeType": "YulTypedName",
														"src": "4589:3:11",
														"type": ""
													}
												],
												"src": "4529:118:11"
											},
											{
												"body": {
													"nativeSrc": "4751:124:11",
													"nodeType": "YulBlock",
													"src": "4751:124:11",
													"statements": [
														{
															"nativeSrc": "4761:26:11",
															"nodeType": "YulAssignment",
															"src": "4761:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4773:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4773:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4784:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4784:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4769:3:11"
																},
																"nativeSrc": "4769:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4769:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4761:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4761:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4841:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4854:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4865:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4865:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:11"
																		},
																		"nativeSrc": "4850:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4797:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4797:43:11"
																},
																"nativeSrc": "4797:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4797:71:11"
															},
															"nativeSrc": "4797:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4797:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4653:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4723:9:11",
														"nodeType": "YulTypedName",
														"src": "4723:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4735:6:11",
														"nodeType": "YulTypedName",
														"src": "4735:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4746:4:11",
														"nodeType": "YulTypedName",
														"src": "4746:4:11",
														"type": ""
													}
												],
												"src": "4653:222:11"
											},
											{
												"body": {
													"nativeSrc": "4981:519:11",
													"nodeType": "YulBlock",
													"src": "4981:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5027:83:11",
																"nodeType": "YulBlock",
																"src": "5027:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5029:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5029:77:11"
																			},
																			"nativeSrc": "5029:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5029:79:11"
																		},
																		"nativeSrc": "5029:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5029:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5002:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5002:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5011:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4998:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:11"
																		},
																		"nativeSrc": "4998:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4998:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5023:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5023:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4994:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:11"
																},
																"nativeSrc": "4994:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4994:32:11"
															},
															"nativeSrc": "4991:119:11",
															"nodeType": "YulIf",
															"src": "4991:119:11"
														},
														{
															"nativeSrc": "5120:117:11",
															"nodeType": "YulBlock",
															"src": "5120:117:11",
															"statements": [
																{
																	"nativeSrc": "5135:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5135:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5149:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5139:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5139:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5164:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5164:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5199:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5199:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5210:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5210:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5195:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5195:3:11"
																				},
																				"nativeSrc": "5195:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5195:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5219:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5219:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5174:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5174:20:11"
																		},
																		"nativeSrc": "5174:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5164:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5164:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5247:118:11",
															"nodeType": "YulBlock",
															"src": "5247:118:11",
															"statements": [
																{
																	"nativeSrc": "5262:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5262:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5276:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5276:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5266:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5266:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5292:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5292:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5327:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5327:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5338:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5338:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5323:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5323:3:11"
																				},
																				"nativeSrc": "5323:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5323:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5347:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5347:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5302:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5302:20:11"
																		},
																		"nativeSrc": "5302:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5302:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5292:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5292:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5375:118:11",
															"nodeType": "YulBlock",
															"src": "5375:118:11",
															"statements": [
																{
																	"nativeSrc": "5390:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5390:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5404:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5404:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5394:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5394:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5420:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5420:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5455:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5455:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5466:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5466:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5451:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5451:3:11"
																				},
																				"nativeSrc": "5451:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5451:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5475:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5475:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5430:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5430:20:11"
																		},
																		"nativeSrc": "5430:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5430:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5420:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_address",
												"nativeSrc": "4881:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4935:9:11",
														"nodeType": "YulTypedName",
														"src": "4935:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4946:7:11",
														"nodeType": "YulTypedName",
														"src": "4946:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4958:6:11",
														"nodeType": "YulTypedName",
														"src": "4958:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4966:6:11",
														"nodeType": "YulTypedName",
														"src": "4966:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4974:6:11",
														"nodeType": "YulTypedName",
														"src": "4974:6:11",
														"type": ""
													}
												],
												"src": "4881:619:11"
											},
											{
												"body": {
													"nativeSrc": "5589:391:11",
													"nodeType": "YulBlock",
													"src": "5589:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5635:83:11",
																"nodeType": "YulBlock",
																"src": "5635:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5637:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5637:77:11"
																			},
																			"nativeSrc": "5637:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5637:79:11"
																		},
																		"nativeSrc": "5637:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5637:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5610:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5610:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5619:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5619:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:11"
																		},
																		"nativeSrc": "5606:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5606:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5631:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5631:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:11"
																},
																"nativeSrc": "5602:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5602:32:11"
															},
															"nativeSrc": "5599:119:11",
															"nodeType": "YulIf",
															"src": "5599:119:11"
														},
														{
															"nativeSrc": "5728:117:11",
															"nodeType": "YulBlock",
															"src": "5728:117:11",
															"statements": [
																{
																	"nativeSrc": "5743:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5743:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5757:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5757:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5747:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5747:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5772:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5772:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5807:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5807:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5818:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5818:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5803:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5803:3:11"
																				},
																				"nativeSrc": "5803:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5803:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5827:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5827:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5782:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5782:20:11"
																		},
																		"nativeSrc": "5782:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5782:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5772:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5772:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5855:118:11",
															"nodeType": "YulBlock",
															"src": "5855:118:11",
															"statements": [
																{
																	"nativeSrc": "5870:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5870:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5884:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5884:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5874:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5874:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5900:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5900:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5935:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5935:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5946:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5946:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5931:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5931:3:11"
																				},
																				"nativeSrc": "5931:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5931:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5955:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5955:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5910:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5910:20:11"
																		},
																		"nativeSrc": "5910:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5900:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5900:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5506:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:11",
														"nodeType": "YulTypedName",
														"src": "5551:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:11",
														"nodeType": "YulTypedName",
														"src": "5562:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:11",
														"nodeType": "YulTypedName",
														"src": "5574:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5582:6:11",
														"nodeType": "YulTypedName",
														"src": "5582:6:11",
														"type": ""
													}
												],
												"src": "5506:474:11"
											},
											{
												"body": {
													"nativeSrc": "6052:263:11",
													"nodeType": "YulBlock",
													"src": "6052:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6098:83:11",
																"nodeType": "YulBlock",
																"src": "6098:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6100:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6100:77:11"
																			},
																			"nativeSrc": "6100:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6100:79:11"
																		},
																		"nativeSrc": "6100:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6100:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6073:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6073:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6082:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6069:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:11"
																		},
																		"nativeSrc": "6069:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6069:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6094:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6094:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6065:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:11"
																},
																"nativeSrc": "6065:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6065:32:11"
															},
															"nativeSrc": "6062:119:11",
															"nodeType": "YulIf",
															"src": "6062:119:11"
														},
														{
															"nativeSrc": "6191:117:11",
															"nodeType": "YulBlock",
															"src": "6191:117:11",
															"statements": [
																{
																	"nativeSrc": "6206:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6206:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6220:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6220:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6210:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6210:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6235:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6235:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6270:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6270:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6281:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6281:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6266:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6266:3:11"
																				},
																				"nativeSrc": "6266:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6266:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6290:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6290:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6245:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6245:20:11"
																		},
																		"nativeSrc": "6245:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6245:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6235:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6235:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5986:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6022:9:11",
														"nodeType": "YulTypedName",
														"src": "6022:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6033:7:11",
														"nodeType": "YulTypedName",
														"src": "6033:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6045:6:11",
														"nodeType": "YulTypedName",
														"src": "6045:6:11",
														"type": ""
													}
												],
												"src": "5986:329:11"
											},
											{
												"body": {
													"nativeSrc": "6417:73:11",
													"nodeType": "YulBlock",
													"src": "6417:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6434:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6434:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6439:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6439:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6427:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6427:6:11"
																},
																"nativeSrc": "6427:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6427:19:11"
															},
															"nativeSrc": "6427:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6427:19:11"
														},
														{
															"nativeSrc": "6455:29:11",
															"nodeType": "YulAssignment",
															"src": "6455:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6474:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6474:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6479:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6479:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6470:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6470:3:11"
																},
																"nativeSrc": "6470:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6470:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6455:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "6455:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6321:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6389:3:11",
														"nodeType": "YulTypedName",
														"src": "6389:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6394:6:11",
														"nodeType": "YulTypedName",
														"src": "6394:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6405:11:11",
														"nodeType": "YulTypedName",
														"src": "6405:11:11",
														"type": ""
													}
												],
												"src": "6321:169:11"
											},
											{
												"body": {
													"nativeSrc": "6602:68:11",
													"nodeType": "YulBlock",
													"src": "6602:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6624:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6624:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6632:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6632:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:11"
																		},
																		"nativeSrc": "6620:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:14:11"
																	},
																	{
																		"hexValue": "466163652068617368206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "6636:26:11",
																		"nodeType": "YulLiteral",
																		"src": "6636:26:11",
																		"type": "",
																		"value": "Face hash not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6613:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:11"
																},
																"nativeSrc": "6613:50:11",
																"nodeType": "YulFunctionCall",
																"src": "6613:50:11"
															},
															"nativeSrc": "6613:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "6613:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
												"nativeSrc": "6496:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6594:6:11",
														"nodeType": "YulTypedName",
														"src": "6594:6:11",
														"type": ""
													}
												],
												"src": "6496:174:11"
											},
											{
												"body": {
													"nativeSrc": "6822:220:11",
													"nodeType": "YulBlock",
													"src": "6822:220:11",
													"statements": [
														{
															"nativeSrc": "6832:74:11",
															"nodeType": "YulAssignment",
															"src": "6832:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6898:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6898:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6903:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6903:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6839:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6839:58:11"
																},
																"nativeSrc": "6839:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6839:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6832:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7004:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7004:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																	"nativeSrc": "6915:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6915:88:11"
																},
																"nativeSrc": "6915:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6915:93:11"
															},
															"nativeSrc": "6915:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6915:93:11"
														},
														{
															"nativeSrc": "7017:19:11",
															"nodeType": "YulAssignment",
															"src": "7017:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7028:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7028:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7033:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7033:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7024:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7024:3:11"
																},
																"nativeSrc": "7024:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7024:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7017:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7017:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6676:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6810:3:11",
														"nodeType": "YulTypedName",
														"src": "6810:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6818:3:11",
														"nodeType": "YulTypedName",
														"src": "6818:3:11",
														"type": ""
													}
												],
												"src": "6676:366:11"
											},
											{
												"body": {
													"nativeSrc": "7219:248:11",
													"nodeType": "YulBlock",
													"src": "7219:248:11",
													"statements": [
														{
															"nativeSrc": "7229:26:11",
															"nodeType": "YulAssignment",
															"src": "7229:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7241:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7241:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7252:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7252:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7237:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7237:3:11"
																},
																"nativeSrc": "7237:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7237:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7229:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7229:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7276:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7276:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7287:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7287:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7272:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:11"
																		},
																		"nativeSrc": "7272:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7295:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7295:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7301:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7301:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7291:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7291:3:11"
																		},
																		"nativeSrc": "7291:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7291:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7265:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7265:6:11"
																},
																"nativeSrc": "7265:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7265:47:11"
															},
															"nativeSrc": "7265:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7265:47:11"
														},
														{
															"nativeSrc": "7321:139:11",
															"nodeType": "YulAssignment",
															"src": "7321:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7455:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7455:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7329:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7329:124:11"
																},
																"nativeSrc": "7329:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7329:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7321:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7321:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7048:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7199:9:11",
														"nodeType": "YulTypedName",
														"src": "7199:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7214:4:11",
														"nodeType": "YulTypedName",
														"src": "7214:4:11",
														"type": ""
													}
												],
												"src": "7048:419:11"
											},
											{
												"body": {
													"nativeSrc": "7538:53:11",
													"nodeType": "YulBlock",
													"src": "7538:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7555:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7555:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7578:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7578:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7560:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "7560:17:11"
																		},
																		"nativeSrc": "7560:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7560:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7548:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:11"
																},
																"nativeSrc": "7548:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7548:37:11"
															},
															"nativeSrc": "7548:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "7548:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7473:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7526:5:11",
														"nodeType": "YulTypedName",
														"src": "7526:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7533:3:11",
														"nodeType": "YulTypedName",
														"src": "7533:3:11",
														"type": ""
													}
												],
												"src": "7473:118:11"
											},
											{
												"body": {
													"nativeSrc": "7751:288:11",
													"nodeType": "YulBlock",
													"src": "7751:288:11",
													"statements": [
														{
															"nativeSrc": "7761:26:11",
															"nodeType": "YulAssignment",
															"src": "7761:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7773:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7773:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7784:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7784:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:11"
																},
																"nativeSrc": "7769:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7769:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7761:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7761:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7841:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7841:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7854:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7854:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7865:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7865:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7850:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7850:3:11"
																		},
																		"nativeSrc": "7850:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7850:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7797:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7797:43:11"
																},
																"nativeSrc": "7797:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7797:71:11"
															},
															"nativeSrc": "7797:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7797:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7922:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7922:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7935:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7946:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7931:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:11"
																		},
																		"nativeSrc": "7931:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7878:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7878:43:11"
																},
																"nativeSrc": "7878:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7878:72:11"
															},
															"nativeSrc": "7878:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7878:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8004:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8004:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8017:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8028:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8028:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8013:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:11"
																		},
																		"nativeSrc": "8013:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8013:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7960:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7960:43:11"
																},
																"nativeSrc": "7960:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7960:72:11"
															},
															"nativeSrc": "7960:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7960:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7597:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7707:9:11",
														"nodeType": "YulTypedName",
														"src": "7707:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7719:6:11",
														"nodeType": "YulTypedName",
														"src": "7719:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7727:6:11",
														"nodeType": "YulTypedName",
														"src": "7727:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7735:6:11",
														"nodeType": "YulTypedName",
														"src": "7735:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7746:4:11",
														"nodeType": "YulTypedName",
														"src": "7746:4:11",
														"type": ""
													}
												],
												"src": "7597:442:11"
											},
											{
												"body": {
													"nativeSrc": "8085:76:11",
													"nodeType": "YulBlock",
													"src": "8085:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8139:16:11",
																"nodeType": "YulBlock",
																"src": "8139:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8148:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8148:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8151:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8151:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8141:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8141:6:11"
																			},
																			"nativeSrc": "8141:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8141:12:11"
																		},
																		"nativeSrc": "8141:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8141:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8108:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8108:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8130:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8130:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8115:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "8115:14:11"
																				},
																				"nativeSrc": "8115:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8115:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8105:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8105:2:11"
																		},
																		"nativeSrc": "8105:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8098:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:11"
																},
																"nativeSrc": "8098:40:11",
																"nodeType": "YulFunctionCall",
																"src": "8098:40:11"
															},
															"nativeSrc": "8095:60:11",
															"nodeType": "YulIf",
															"src": "8095:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8045:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8078:5:11",
														"nodeType": "YulTypedName",
														"src": "8078:5:11",
														"type": ""
													}
												],
												"src": "8045:116:11"
											},
											{
												"body": {
													"nativeSrc": "8227:77:11",
													"nodeType": "YulBlock",
													"src": "8227:77:11",
													"statements": [
														{
															"nativeSrc": "8237:22:11",
															"nodeType": "YulAssignment",
															"src": "8237:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8252:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8252:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8246:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8246:5:11"
																},
																"nativeSrc": "8246:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8246:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8237:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8237:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8292:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8292:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8268:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "8268:23:11"
																},
																"nativeSrc": "8268:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8268:30:11"
															},
															"nativeSrc": "8268:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8268:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8167:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8205:6:11",
														"nodeType": "YulTypedName",
														"src": "8205:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8213:3:11",
														"nodeType": "YulTypedName",
														"src": "8213:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8221:5:11",
														"nodeType": "YulTypedName",
														"src": "8221:5:11",
														"type": ""
													}
												],
												"src": "8167:137:11"
											},
											{
												"body": {
													"nativeSrc": "8384:271:11",
													"nodeType": "YulBlock",
													"src": "8384:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8430:83:11",
																"nodeType": "YulBlock",
																"src": "8430:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8432:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8432:77:11"
																			},
																			"nativeSrc": "8432:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8432:79:11"
																		},
																		"nativeSrc": "8432:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8432:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8405:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8405:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8414:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8401:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8401:3:11"
																		},
																		"nativeSrc": "8401:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8401:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8426:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8426:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8397:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:11"
																},
																"nativeSrc": "8397:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8397:32:11"
															},
															"nativeSrc": "8394:119:11",
															"nodeType": "YulIf",
															"src": "8394:119:11"
														},
														{
															"nativeSrc": "8523:125:11",
															"nodeType": "YulBlock",
															"src": "8523:125:11",
															"statements": [
																{
																	"nativeSrc": "8538:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8538:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8542:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8542:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8567:71:11",
																	"nodeType": "YulAssignment",
																	"src": "8567:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8610:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8610:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8621:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8621:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8606:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8606:3:11"
																				},
																				"nativeSrc": "8606:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8606:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8630:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8630:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8577:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "8577:28:11"
																		},
																		"nativeSrc": "8577:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8567:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8567:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8310:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8354:9:11",
														"nodeType": "YulTypedName",
														"src": "8354:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8365:7:11",
														"nodeType": "YulTypedName",
														"src": "8365:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8377:6:11",
														"nodeType": "YulTypedName",
														"src": "8377:6:11",
														"type": ""
													}
												],
												"src": "8310:345:11"
											},
											{
												"body": {
													"nativeSrc": "8689:152:11",
													"nodeType": "YulBlock",
													"src": "8689:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8706:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8706:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8709:77:11",
																		"nodeType": "YulLiteral",
																		"src": "8709:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8699:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:11"
																},
																"nativeSrc": "8699:88:11",
																"nodeType": "YulFunctionCall",
																"src": "8699:88:11"
															},
															"nativeSrc": "8699:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "8699:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8803:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8803:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8806:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8806:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8796:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:11"
																},
																"nativeSrc": "8796:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8796:15:11"
															},
															"nativeSrc": "8796:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8796:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8827:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8827:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8830:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8830:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8820:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8820:6:11"
																},
																"nativeSrc": "8820:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8820:15:11"
															},
															"nativeSrc": "8820:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8820:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8661:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8661:180:11"
											},
											{
												"body": {
													"nativeSrc": "8891:147:11",
													"nodeType": "YulBlock",
													"src": "8891:147:11",
													"statements": [
														{
															"nativeSrc": "8901:25:11",
															"nodeType": "YulAssignment",
															"src": "8901:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8924:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8924:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8906:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8906:17:11"
																},
																"nativeSrc": "8906:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8906:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8901:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8901:1:11"
																}
															]
														},
														{
															"nativeSrc": "8935:25:11",
															"nodeType": "YulAssignment",
															"src": "8935:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8958:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8958:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8940:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8940:17:11"
																},
																"nativeSrc": "8940:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8940:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8935:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8935:1:11"
																}
															]
														},
														{
															"nativeSrc": "8969:16:11",
															"nodeType": "YulAssignment",
															"src": "8969:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8980:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8980:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8983:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8983:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8976:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8976:3:11"
																},
																"nativeSrc": "8976:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8976:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9009:22:11",
																"nodeType": "YulBlock",
																"src": "9009:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9011:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9011:16:11"
																			},
																			"nativeSrc": "9011:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9011:18:11"
																		},
																		"nativeSrc": "9011:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9011:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9001:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9001:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9004:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9004:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8998:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8998:2:11"
																},
																"nativeSrc": "8998:10:11",
																"nodeType": "YulFunctionCall",
																"src": "8998:10:11"
															},
															"nativeSrc": "8995:36:11",
															"nodeType": "YulIf",
															"src": "8995:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8847:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8878:1:11",
														"nodeType": "YulTypedName",
														"src": "8878:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8881:1:11",
														"nodeType": "YulTypedName",
														"src": "8881:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8887:3:11",
														"nodeType": "YulTypedName",
														"src": "8887:3:11",
														"type": ""
													}
												],
												"src": "8847:191:11"
											},
											{
												"body": {
													"nativeSrc": "9158:34:11",
													"nodeType": "YulBlock",
													"src": "9158:34:11",
													"statements": [
														{
															"nativeSrc": "9168:18:11",
															"nodeType": "YulAssignment",
															"src": "9168:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "9183:3:11",
																"nodeType": "YulIdentifier",
																"src": "9183:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9168:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9168:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9044:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9130:3:11",
														"nodeType": "YulTypedName",
														"src": "9130:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9135:6:11",
														"nodeType": "YulTypedName",
														"src": "9135:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9146:11:11",
														"nodeType": "YulTypedName",
														"src": "9146:11:11",
														"type": ""
													}
												],
												"src": "9044:148:11"
											},
											{
												"body": {
													"nativeSrc": "9304:62:11",
													"nodeType": "YulBlock",
													"src": "9304:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9326:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9326:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9334:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9334:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9322:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:11"
																		},
																		"nativeSrc": "9322:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:14:11"
																	},
																	{
																		"hexValue": "5041594d454e545f41444d494e5f524f4c45",
																		"kind": "string",
																		"nativeSrc": "9338:20:11",
																		"nodeType": "YulLiteral",
																		"src": "9338:20:11",
																		"type": "",
																		"value": "PAYMENT_ADMIN_ROLE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9315:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:11"
																},
																"nativeSrc": "9315:44:11",
																"nodeType": "YulFunctionCall",
																"src": "9315:44:11"
															},
															"nativeSrc": "9315:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "9315:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67",
												"nativeSrc": "9198:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9296:6:11",
														"nodeType": "YulTypedName",
														"src": "9296:6:11",
														"type": ""
													}
												],
												"src": "9198:168:11"
											},
											{
												"body": {
													"nativeSrc": "9536:238:11",
													"nodeType": "YulBlock",
													"src": "9536:238:11",
													"statements": [
														{
															"nativeSrc": "9546:92:11",
															"nodeType": "YulAssignment",
															"src": "9546:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9630:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9630:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9635:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9553:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "9553:76:11"
																},
																"nativeSrc": "9553:85:11",
																"nodeType": "YulFunctionCall",
																"src": "9553:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9546:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9736:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67",
																	"nativeSrc": "9647:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9647:88:11"
																},
																"nativeSrc": "9647:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9647:93:11"
															},
															"nativeSrc": "9647:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9647:93:11"
														},
														{
															"nativeSrc": "9749:19:11",
															"nodeType": "YulAssignment",
															"src": "9749:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9760:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9760:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9756:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9756:3:11"
																},
																"nativeSrc": "9756:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9756:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9749:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9749:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9372:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9524:3:11",
														"nodeType": "YulTypedName",
														"src": "9524:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9532:3:11",
														"nodeType": "YulTypedName",
														"src": "9532:3:11",
														"type": ""
													}
												],
												"src": "9372:402:11"
											},
											{
												"body": {
													"nativeSrc": "9969:192:11",
													"nodeType": "YulBlock",
													"src": "9969:192:11",
													"statements": [
														{
															"nativeSrc": "9980:155:11",
															"nodeType": "YulAssignment",
															"src": "9980:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10131:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10131:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9987:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "9987:142:11"
																},
																"nativeSrc": "9987:148:11",
																"nodeType": "YulFunctionCall",
																"src": "9987:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9980:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9980:3:11"
																}
															]
														},
														{
															"nativeSrc": "10145:10:11",
															"nodeType": "YulAssignment",
															"src": "10145:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "10152:3:11",
																"nodeType": "YulIdentifier",
																"src": "10152:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10145:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9780:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9956:3:11",
														"nodeType": "YulTypedName",
														"src": "9956:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9965:3:11",
														"nodeType": "YulTypedName",
														"src": "9965:3:11",
														"type": ""
													}
												],
												"src": "9780:381:11"
											},
											{
												"body": {
													"nativeSrc": "10293:206:11",
													"nodeType": "YulBlock",
													"src": "10293:206:11",
													"statements": [
														{
															"nativeSrc": "10303:26:11",
															"nodeType": "YulAssignment",
															"src": "10303:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10315:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10315:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10326:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10326:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10311:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:11"
																},
																"nativeSrc": "10311:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10311:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10303:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10303:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10383:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10383:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10396:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10396:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10407:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10407:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10392:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:11"
																		},
																		"nativeSrc": "10392:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10392:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10339:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10339:43:11"
																},
																"nativeSrc": "10339:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10339:71:11"
															},
															"nativeSrc": "10339:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10339:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10464:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10464:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10477:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10477:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10488:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10488:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10473:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10473:3:11"
																		},
																		"nativeSrc": "10473:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10473:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10420:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10420:43:11"
																},
																"nativeSrc": "10420:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10420:72:11"
															},
															"nativeSrc": "10420:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10420:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10167:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10257:9:11",
														"nodeType": "YulTypedName",
														"src": "10257:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10269:6:11",
														"nodeType": "YulTypedName",
														"src": "10269:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10277:6:11",
														"nodeType": "YulTypedName",
														"src": "10277:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10288:4:11",
														"nodeType": "YulTypedName",
														"src": "10288:4:11",
														"type": ""
													}
												],
												"src": "10167:332:11"
											},
											{
												"body": {
													"nativeSrc": "10550:149:11",
													"nodeType": "YulBlock",
													"src": "10550:149:11",
													"statements": [
														{
															"nativeSrc": "10560:25:11",
															"nodeType": "YulAssignment",
															"src": "10560:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10583:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10583:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10565:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10565:17:11"
																},
																"nativeSrc": "10565:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10565:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10560:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10560:1:11"
																}
															]
														},
														{
															"nativeSrc": "10594:25:11",
															"nodeType": "YulAssignment",
															"src": "10594:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10617:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10617:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10599:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10599:17:11"
																},
																"nativeSrc": "10599:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10599:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10594:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10594:1:11"
																}
															]
														},
														{
															"nativeSrc": "10628:17:11",
															"nodeType": "YulAssignment",
															"src": "10628:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10640:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10640:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10643:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10643:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10636:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10636:3:11"
																},
																"nativeSrc": "10636:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10636:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10628:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10628:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10670:22:11",
																"nodeType": "YulBlock",
																"src": "10670:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10672:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10672:16:11"
																			},
																			"nativeSrc": "10672:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10672:18:11"
																		},
																		"nativeSrc": "10672:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10672:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10661:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10661:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10667:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10667:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10658:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10658:2:11"
																},
																"nativeSrc": "10658:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10658:11:11"
															},
															"nativeSrc": "10655:37:11",
															"nodeType": "YulIf",
															"src": "10655:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10505:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10536:1:11",
														"nodeType": "YulTypedName",
														"src": "10536:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10539:1:11",
														"nodeType": "YulTypedName",
														"src": "10539:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10545:4:11",
														"nodeType": "YulTypedName",
														"src": "10545:4:11",
														"type": ""
													}
												],
												"src": "10505:194:11"
											},
											{
												"body": {
													"nativeSrc": "10811:68:11",
													"nodeType": "YulBlock",
													"src": "10811:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10833:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10833:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10841:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10841:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10829:3:11"
																		},
																		"nativeSrc": "10829:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10829:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f46554c4c",
																		"kind": "string",
																		"nativeSrc": "10845:26:11",
																		"nodeType": "YulLiteral",
																		"src": "10845:26:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_FULL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10822:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:11"
																},
																"nativeSrc": "10822:50:11",
																"nodeType": "YulFunctionCall",
																"src": "10822:50:11"
															},
															"nativeSrc": "10822:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "10822:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
												"nativeSrc": "10705:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10803:6:11",
														"nodeType": "YulTypedName",
														"src": "10803:6:11",
														"type": ""
													}
												],
												"src": "10705:174:11"
											},
											{
												"body": {
													"nativeSrc": "11049:238:11",
													"nodeType": "YulBlock",
													"src": "11049:238:11",
													"statements": [
														{
															"nativeSrc": "11059:92:11",
															"nodeType": "YulAssignment",
															"src": "11059:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11143:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11143:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11148:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11066:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "11066:76:11"
																},
																"nativeSrc": "11066:85:11",
																"nodeType": "YulFunctionCall",
																"src": "11066:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11249:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11249:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
																	"nativeSrc": "11160:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11160:88:11"
																},
																"nativeSrc": "11160:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11160:93:11"
															},
															"nativeSrc": "11160:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11160:93:11"
														},
														{
															"nativeSrc": "11262:19:11",
															"nodeType": "YulAssignment",
															"src": "11262:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11273:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11273:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11278:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11278:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11269:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11269:3:11"
																},
																"nativeSrc": "11269:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11269:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11262:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11262:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10885:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11037:3:11",
														"nodeType": "YulTypedName",
														"src": "11037:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11045:3:11",
														"nodeType": "YulTypedName",
														"src": "11045:3:11",
														"type": ""
													}
												],
												"src": "10885:402:11"
											},
											{
												"body": {
													"nativeSrc": "11482:192:11",
													"nodeType": "YulBlock",
													"src": "11482:192:11",
													"statements": [
														{
															"nativeSrc": "11493:155:11",
															"nodeType": "YulAssignment",
															"src": "11493:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11644:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11644:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11500:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "11500:142:11"
																},
																"nativeSrc": "11500:148:11",
																"nodeType": "YulFunctionCall",
																"src": "11500:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11493:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11493:3:11"
																}
															]
														},
														{
															"nativeSrc": "11658:10:11",
															"nodeType": "YulAssignment",
															"src": "11658:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "11665:3:11",
																"nodeType": "YulIdentifier",
																"src": "11665:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11658:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11658:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11293:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11469:3:11",
														"nodeType": "YulTypedName",
														"src": "11469:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11478:3:11",
														"nodeType": "YulTypedName",
														"src": "11478:3:11",
														"type": ""
													}
												],
												"src": "11293:381:11"
											},
											{
												"body": {
													"nativeSrc": "11786:67:11",
													"nodeType": "YulBlock",
													"src": "11786:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11808:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11808:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11816:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11816:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11804:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:11"
																		},
																		"nativeSrc": "11804:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11804:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f4d4944",
																		"kind": "string",
																		"nativeSrc": "11820:25:11",
																		"nodeType": "YulLiteral",
																		"src": "11820:25:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_MID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:11"
																},
																"nativeSrc": "11797:49:11",
																"nodeType": "YulFunctionCall",
																"src": "11797:49:11"
															},
															"nativeSrc": "11797:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "11797:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
												"nativeSrc": "11680:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11778:6:11",
														"nodeType": "YulTypedName",
														"src": "11778:6:11",
														"type": ""
													}
												],
												"src": "11680:173:11"
											},
											{
												"body": {
													"nativeSrc": "12023:238:11",
													"nodeType": "YulBlock",
													"src": "12023:238:11",
													"statements": [
														{
															"nativeSrc": "12033:92:11",
															"nodeType": "YulAssignment",
															"src": "12033:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12117:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12117:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12122:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12122:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12040:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "12040:76:11"
																},
																"nativeSrc": "12040:85:11",
																"nodeType": "YulFunctionCall",
																"src": "12040:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12033:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12223:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12223:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
																	"nativeSrc": "12134:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12134:88:11"
																},
																"nativeSrc": "12134:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12134:93:11"
															},
															"nativeSrc": "12134:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12134:93:11"
														},
														{
															"nativeSrc": "12236:19:11",
															"nodeType": "YulAssignment",
															"src": "12236:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12247:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12247:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12252:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12252:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12243:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12243:3:11"
																},
																"nativeSrc": "12243:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12243:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12236:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12236:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11859:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12011:3:11",
														"nodeType": "YulTypedName",
														"src": "12011:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12019:3:11",
														"nodeType": "YulTypedName",
														"src": "12019:3:11",
														"type": ""
													}
												],
												"src": "11859:402:11"
											},
											{
												"body": {
													"nativeSrc": "12456:192:11",
													"nodeType": "YulBlock",
													"src": "12456:192:11",
													"statements": [
														{
															"nativeSrc": "12467:155:11",
															"nodeType": "YulAssignment",
															"src": "12467:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12618:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12618:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12474:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "12474:142:11"
																},
																"nativeSrc": "12474:148:11",
																"nodeType": "YulFunctionCall",
																"src": "12474:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12467:3:11"
																}
															]
														},
														{
															"nativeSrc": "12632:10:11",
															"nodeType": "YulAssignment",
															"src": "12632:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "12639:3:11",
																"nodeType": "YulIdentifier",
																"src": "12639:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12632:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12632:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12267:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12443:3:11",
														"nodeType": "YulTypedName",
														"src": "12443:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12452:3:11",
														"nodeType": "YulTypedName",
														"src": "12452:3:11",
														"type": ""
													}
												],
												"src": "12267:381:11"
											},
											{
												"body": {
													"nativeSrc": "12760:67:11",
													"nodeType": "YulBlock",
													"src": "12760:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12782:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12782:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12790:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12790:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12778:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12778:3:11"
																		},
																		"nativeSrc": "12778:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12778:14:11"
																	},
																	{
																		"hexValue": "4845414c54485f50524f46455353494f4e414c5f4c4f57",
																		"kind": "string",
																		"nativeSrc": "12794:25:11",
																		"nodeType": "YulLiteral",
																		"src": "12794:25:11",
																		"type": "",
																		"value": "HEALTH_PROFESSIONAL_LOW"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12771:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:11"
																},
																"nativeSrc": "12771:49:11",
																"nodeType": "YulFunctionCall",
																"src": "12771:49:11"
															},
															"nativeSrc": "12771:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "12771:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
												"nativeSrc": "12654:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12752:6:11",
														"nodeType": "YulTypedName",
														"src": "12752:6:11",
														"type": ""
													}
												],
												"src": "12654:173:11"
											},
											{
												"body": {
													"nativeSrc": "12997:238:11",
													"nodeType": "YulBlock",
													"src": "12997:238:11",
													"statements": [
														{
															"nativeSrc": "13007:92:11",
															"nodeType": "YulAssignment",
															"src": "13007:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13091:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13091:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13096:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13096:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13014:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "13014:76:11"
																},
																"nativeSrc": "13014:85:11",
																"nodeType": "YulFunctionCall",
																"src": "13014:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13007:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13007:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13197:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13197:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
																	"nativeSrc": "13108:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13108:88:11"
																},
																"nativeSrc": "13108:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13108:93:11"
															},
															"nativeSrc": "13108:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13108:93:11"
														},
														{
															"nativeSrc": "13210:19:11",
															"nodeType": "YulAssignment",
															"src": "13210:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13221:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13221:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13226:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13226:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13217:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13217:3:11"
																},
																"nativeSrc": "13217:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13217:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13210:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13210:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12833:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12985:3:11",
														"nodeType": "YulTypedName",
														"src": "12985:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12993:3:11",
														"nodeType": "YulTypedName",
														"src": "12993:3:11",
														"type": ""
													}
												],
												"src": "12833:402:11"
											},
											{
												"body": {
													"nativeSrc": "13430:192:11",
													"nodeType": "YulBlock",
													"src": "13430:192:11",
													"statements": [
														{
															"nativeSrc": "13441:155:11",
															"nodeType": "YulAssignment",
															"src": "13441:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13592:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13448:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "13448:142:11"
																},
																"nativeSrc": "13448:148:11",
																"nodeType": "YulFunctionCall",
																"src": "13448:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13441:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13441:3:11"
																}
															]
														},
														{
															"nativeSrc": "13606:10:11",
															"nodeType": "YulAssignment",
															"src": "13606:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "13613:3:11",
																"nodeType": "YulIdentifier",
																"src": "13613:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13606:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13241:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13417:3:11",
														"nodeType": "YulTypedName",
														"src": "13417:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13426:3:11",
														"nodeType": "YulTypedName",
														"src": "13426:3:11",
														"type": ""
													}
												],
												"src": "13241:381:11"
											},
											{
												"body": {
													"nativeSrc": "13734:69:11",
													"nodeType": "YulBlock",
													"src": "13734:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13756:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13756:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13764:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13764:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13752:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:11"
																		},
																		"nativeSrc": "13752:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13752:14:11"
																	},
																	{
																		"hexValue": "556e7265636f676e697a656420616363657373206c6576656c",
																		"kind": "string",
																		"nativeSrc": "13768:27:11",
																		"nodeType": "YulLiteral",
																		"src": "13768:27:11",
																		"type": "",
																		"value": "Unrecognized access level"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13745:6:11"
																},
																"nativeSrc": "13745:51:11",
																"nodeType": "YulFunctionCall",
																"src": "13745:51:11"
															},
															"nativeSrc": "13745:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "13745:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2",
												"nativeSrc": "13628:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13726:6:11",
														"nodeType": "YulTypedName",
														"src": "13726:6:11",
														"type": ""
													}
												],
												"src": "13628:175:11"
											},
											{
												"body": {
													"nativeSrc": "13955:220:11",
													"nodeType": "YulBlock",
													"src": "13955:220:11",
													"statements": [
														{
															"nativeSrc": "13965:74:11",
															"nodeType": "YulAssignment",
															"src": "13965:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14031:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14031:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14036:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14036:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13972:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13972:58:11"
																},
																"nativeSrc": "13972:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13972:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13965:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13965:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14137:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14137:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2",
																	"nativeSrc": "14048:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14048:88:11"
																},
																"nativeSrc": "14048:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14048:93:11"
															},
															"nativeSrc": "14048:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14048:93:11"
														},
														{
															"nativeSrc": "14150:19:11",
															"nodeType": "YulAssignment",
															"src": "14150:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14161:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14161:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14166:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14166:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14157:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:11"
																},
																"nativeSrc": "14157:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14157:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14150:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13809:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13943:3:11",
														"nodeType": "YulTypedName",
														"src": "13943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13951:3:11",
														"nodeType": "YulTypedName",
														"src": "13951:3:11",
														"type": ""
													}
												],
												"src": "13809:366:11"
											},
											{
												"body": {
													"nativeSrc": "14352:248:11",
													"nodeType": "YulBlock",
													"src": "14352:248:11",
													"statements": [
														{
															"nativeSrc": "14362:26:11",
															"nodeType": "YulAssignment",
															"src": "14362:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14374:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14374:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14385:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14385:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14370:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14370:3:11"
																},
																"nativeSrc": "14370:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14370:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14362:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14362:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14409:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14409:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14420:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14420:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14405:3:11"
																		},
																		"nativeSrc": "14405:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14405:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14428:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14428:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14434:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14434:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14424:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14424:3:11"
																		},
																		"nativeSrc": "14424:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14424:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14398:6:11"
																},
																"nativeSrc": "14398:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14398:47:11"
															},
															"nativeSrc": "14398:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14398:47:11"
														},
														{
															"nativeSrc": "14454:139:11",
															"nodeType": "YulAssignment",
															"src": "14454:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14588:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14588:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14462:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14462:124:11"
																},
																"nativeSrc": "14462:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14462:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14454:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14454:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14181:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14332:9:11",
														"nodeType": "YulTypedName",
														"src": "14332:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14347:4:11",
														"nodeType": "YulTypedName",
														"src": "14347:4:11",
														"type": ""
													}
												],
												"src": "14181:419:11"
											},
											{
												"body": {
													"nativeSrc": "14719:34:11",
													"nodeType": "YulBlock",
													"src": "14719:34:11",
													"statements": [
														{
															"nativeSrc": "14729:18:11",
															"nodeType": "YulAssignment",
															"src": "14729:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "14744:3:11",
																"nodeType": "YulIdentifier",
																"src": "14744:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14729:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "14729:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14606:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14691:3:11",
														"nodeType": "YulTypedName",
														"src": "14691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14696:6:11",
														"nodeType": "YulTypedName",
														"src": "14696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14707:11:11",
														"nodeType": "YulTypedName",
														"src": "14707:11:11",
														"type": ""
													}
												],
												"src": "14606:147:11"
											},
											{
												"body": {
													"nativeSrc": "14865:8:11",
													"nodeType": "YulBlock",
													"src": "14865:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "14759:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14857:6:11",
														"nodeType": "YulTypedName",
														"src": "14857:6:11",
														"type": ""
													}
												],
												"src": "14759:114:11"
											},
											{
												"body": {
													"nativeSrc": "15042:235:11",
													"nodeType": "YulBlock",
													"src": "15042:235:11",
													"statements": [
														{
															"nativeSrc": "15052:90:11",
															"nodeType": "YulAssignment",
															"src": "15052:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15135:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15135:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15140:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15140:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15059:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "15059:75:11"
																},
																"nativeSrc": "15059:83:11",
																"nodeType": "YulFunctionCall",
																"src": "15059:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15052:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15052:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15240:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15240:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15151:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15151:88:11"
																},
																"nativeSrc": "15151:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15151:93:11"
															},
															"nativeSrc": "15151:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15151:93:11"
														},
														{
															"nativeSrc": "15253:18:11",
															"nodeType": "YulAssignment",
															"src": "15253:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15264:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15264:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15269:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15269:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15260:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15260:3:11"
																},
																"nativeSrc": "15260:11:11",
																"nodeType": "YulFunctionCall",
																"src": "15260:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15253:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15253:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14879:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15030:3:11",
														"nodeType": "YulTypedName",
														"src": "15030:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15038:3:11",
														"nodeType": "YulTypedName",
														"src": "15038:3:11",
														"type": ""
													}
												],
												"src": "14879:398:11"
											},
											{
												"body": {
													"nativeSrc": "15471:191:11",
													"nodeType": "YulBlock",
													"src": "15471:191:11",
													"statements": [
														{
															"nativeSrc": "15482:154:11",
															"nodeType": "YulAssignment",
															"src": "15482:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15632:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15632:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15489:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "15489:141:11"
																},
																"nativeSrc": "15489:147:11",
																"nodeType": "YulFunctionCall",
																"src": "15489:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15482:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15482:3:11"
																}
															]
														},
														{
															"nativeSrc": "15646:10:11",
															"nodeType": "YulAssignment",
															"src": "15646:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "15653:3:11",
																"nodeType": "YulIdentifier",
																"src": "15653:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15646:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15646:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15283:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15458:3:11",
														"nodeType": "YulTypedName",
														"src": "15458:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15467:3:11",
														"nodeType": "YulTypedName",
														"src": "15467:3:11",
														"type": ""
													}
												],
												"src": "15283:379:11"
											},
											{
												"body": {
													"nativeSrc": "15774:57:11",
													"nodeType": "YulBlock",
													"src": "15774:57:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15796:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15796:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15804:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15804:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15792:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15792:3:11"
																		},
																		"nativeSrc": "15792:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15792:14:11"
																	},
																	{
																		"hexValue": "5061796f7574206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15808:15:11",
																		"nodeType": "YulLiteral",
																		"src": "15808:15:11",
																		"type": "",
																		"value": "Payout failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15785:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15785:6:11"
																},
																"nativeSrc": "15785:39:11",
																"nodeType": "YulFunctionCall",
																"src": "15785:39:11"
															},
															"nativeSrc": "15785:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "15785:39:11"
														}
													]
												},
												"name": "store_literal_in_memory_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b",
												"nativeSrc": "15668:163:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15766:6:11",
														"nodeType": "YulTypedName",
														"src": "15766:6:11",
														"type": ""
													}
												],
												"src": "15668:163:11"
											},
											{
												"body": {
													"nativeSrc": "15983:220:11",
													"nodeType": "YulBlock",
													"src": "15983:220:11",
													"statements": [
														{
															"nativeSrc": "15993:74:11",
															"nodeType": "YulAssignment",
															"src": "15993:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16059:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16059:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16064:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16064:2:11",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16000:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16000:58:11"
																},
																"nativeSrc": "16000:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16000:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15993:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15993:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16165:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16165:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b",
																	"nativeSrc": "16076:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16076:88:11"
																},
																"nativeSrc": "16076:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16076:93:11"
															},
															"nativeSrc": "16076:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16076:93:11"
														},
														{
															"nativeSrc": "16178:19:11",
															"nodeType": "YulAssignment",
															"src": "16178:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16189:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16189:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16194:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16194:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16185:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16185:3:11"
																},
																"nativeSrc": "16185:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16185:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16178:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16178:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15837:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15971:3:11",
														"nodeType": "YulTypedName",
														"src": "15971:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15979:3:11",
														"nodeType": "YulTypedName",
														"src": "15979:3:11",
														"type": ""
													}
												],
												"src": "15837:366:11"
											},
											{
												"body": {
													"nativeSrc": "16380:248:11",
													"nodeType": "YulBlock",
													"src": "16380:248:11",
													"statements": [
														{
															"nativeSrc": "16390:26:11",
															"nodeType": "YulAssignment",
															"src": "16390:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16402:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16402:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16413:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16413:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16398:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:11"
																},
																"nativeSrc": "16398:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16398:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16390:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16390:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16437:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16437:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16448:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16448:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16433:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16433:3:11"
																		},
																		"nativeSrc": "16433:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16433:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16456:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16456:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16462:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16462:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16452:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16452:3:11"
																		},
																		"nativeSrc": "16452:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16452:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16426:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16426:6:11"
																},
																"nativeSrc": "16426:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16426:47:11"
															},
															"nativeSrc": "16426:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16426:47:11"
														},
														{
															"nativeSrc": "16482:139:11",
															"nodeType": "YulAssignment",
															"src": "16482:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16616:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16616:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16490:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16490:124:11"
																},
																"nativeSrc": "16490:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16490:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16482:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16482:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16209:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16360:9:11",
														"nodeType": "YulTypedName",
														"src": "16360:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16375:4:11",
														"nodeType": "YulTypedName",
														"src": "16375:4:11",
														"type": ""
													}
												],
												"src": "16209:419:11"
											},
											{
												"body": {
													"nativeSrc": "16740:59:11",
													"nodeType": "YulBlock",
													"src": "16740:59:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16762:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16762:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16770:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16770:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16758:3:11"
																		},
																		"nativeSrc": "16758:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16758:14:11"
																	},
																	{
																		"hexValue": "555345525f41444d494e5f524f4c45",
																		"kind": "string",
																		"nativeSrc": "16774:17:11",
																		"nodeType": "YulLiteral",
																		"src": "16774:17:11",
																		"type": "",
																		"value": "USER_ADMIN_ROLE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16751:6:11"
																},
																"nativeSrc": "16751:41:11",
																"nodeType": "YulFunctionCall",
																"src": "16751:41:11"
															},
															"nativeSrc": "16751:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "16751:41:11"
														}
													]
												},
												"name": "store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
												"nativeSrc": "16634:165:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16732:6:11",
														"nodeType": "YulTypedName",
														"src": "16732:6:11",
														"type": ""
													}
												],
												"src": "16634:165:11"
											},
											{
												"body": {
													"nativeSrc": "16969:238:11",
													"nodeType": "YulBlock",
													"src": "16969:238:11",
													"statements": [
														{
															"nativeSrc": "16979:92:11",
															"nodeType": "YulAssignment",
															"src": "16979:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17063:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17063:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17068:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17068:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16986:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "16986:76:11"
																},
																"nativeSrc": "16986:85:11",
																"nodeType": "YulFunctionCall",
																"src": "16986:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16979:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16979:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17169:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17169:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
																	"nativeSrc": "17080:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17080:88:11"
																},
																"nativeSrc": "17080:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17080:93:11"
															},
															"nativeSrc": "17080:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17080:93:11"
														},
														{
															"nativeSrc": "17182:19:11",
															"nodeType": "YulAssignment",
															"src": "17182:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17193:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17193:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17198:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17198:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17189:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17189:3:11"
																},
																"nativeSrc": "17189:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17189:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17182:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17182:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16805:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16957:3:11",
														"nodeType": "YulTypedName",
														"src": "16957:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16965:3:11",
														"nodeType": "YulTypedName",
														"src": "16965:3:11",
														"type": ""
													}
												],
												"src": "16805:402:11"
											},
											{
												"body": {
													"nativeSrc": "17402:192:11",
													"nodeType": "YulBlock",
													"src": "17402:192:11",
													"statements": [
														{
															"nativeSrc": "17413:155:11",
															"nodeType": "YulAssignment",
															"src": "17413:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17564:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17564:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17420:142:11",
																	"nodeType": "YulIdentifier",
																	"src": "17420:142:11"
																},
																"nativeSrc": "17420:148:11",
																"nodeType": "YulFunctionCall",
																"src": "17420:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17413:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17413:3:11"
																}
															]
														},
														{
															"nativeSrc": "17578:10:11",
															"nodeType": "YulAssignment",
															"src": "17578:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "17585:3:11",
																"nodeType": "YulIdentifier",
																"src": "17585:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17578:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17578:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17213:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17389:3:11",
														"nodeType": "YulTypedName",
														"src": "17389:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17398:3:11",
														"nodeType": "YulTypedName",
														"src": "17398:3:11",
														"type": ""
													}
												],
												"src": "17213:381:11"
											},
											{
												"body": {
													"nativeSrc": "17726:206:11",
													"nodeType": "YulBlock",
													"src": "17726:206:11",
													"statements": [
														{
															"nativeSrc": "17736:26:11",
															"nodeType": "YulAssignment",
															"src": "17736:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17748:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17748:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17759:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17759:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17744:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17744:3:11"
																},
																"nativeSrc": "17744:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17744:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17736:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17736:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17816:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17816:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17829:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17829:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17840:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17840:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17825:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17825:3:11"
																		},
																		"nativeSrc": "17825:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17825:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17772:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17772:43:11"
																},
																"nativeSrc": "17772:71:11",
																"nodeType": "YulFunctionCall",
																"src": "17772:71:11"
															},
															"nativeSrc": "17772:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "17772:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17897:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17897:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17910:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17910:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17921:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17921:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17906:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17906:3:11"
																		},
																		"nativeSrc": "17906:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17906:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17853:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17853:43:11"
																},
																"nativeSrc": "17853:72:11",
																"nodeType": "YulFunctionCall",
																"src": "17853:72:11"
															},
															"nativeSrc": "17853:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "17853:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17600:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17690:9:11",
														"nodeType": "YulTypedName",
														"src": "17690:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17702:6:11",
														"nodeType": "YulTypedName",
														"src": "17702:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17710:6:11",
														"nodeType": "YulTypedName",
														"src": "17710:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17721:4:11",
														"nodeType": "YulTypedName",
														"src": "17721:4:11",
														"type": ""
													}
												],
												"src": "17600:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Face hash not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67(memPtr) {\n\n        mstore(add(memPtr, 0), \"PAYMENT_ADMIN_ROLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 18)\n        store_literal_in_memory_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67(pos)\n        end := add(pos, 18)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_FULL\")\n\n    }\n\n    function abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 24)\n        store_literal_in_memory_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14(pos)\n        end := add(pos, 24)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_MID\")\n\n    }\n\n    function abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09(memPtr) {\n\n        mstore(add(memPtr, 0), \"HEALTH_PROFESSIONAL_LOW\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unrecognized access level\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payout failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107(memPtr) {\n\n        mstore(add(memPtr, 0), \"USER_ADMIN_ROLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 15)\n        store_literal_in_memory_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107(pos)\n        end := add(pos, 15)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x585F4C49 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xD6770522 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE096CFED GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE096CFED EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0xE6D6384A EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xF0F7AF4D EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF2C80089 EQ PUSH2 0x64D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xD6770522 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xD7B8A07A EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xDD65AB1F EQ PUSH2 0x597 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xB24B56B0 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xB89F9AC1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x51D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x585F4C49 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x5EA06A9C EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x465 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x3FD2C4F1 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x3FD2C4F1 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x48570EE6 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x51FEA917 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x55F93E6E EQ PUSH2 0x3EB JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x2F432261 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x337 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x9C19362 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xADBBDD3 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xFA750FF EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x24CCC1A6 EQ PUSH2 0x297 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x104B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x48B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B5 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DF PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x11A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x11DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6E9 JUMPI POP PUSH2 0x6E8 DUP3 PUSH2 0x1304 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x7A143568E7A2E32F33C2AB85BB8CB9FF7E78D00E650D6973C8873BBDC075E811 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F1 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP2 PUSH32 0xACC0FD4B3527D0953ABDCE4AC9A5F786E3D780A3B4BBEFEFB360A8642429E0F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x997 DUP3 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x9AA DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA43 DUP3 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA75 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA5A SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC9 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP3 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x434ADBD1794F49FFEB1EA04DE9AD62FB01CC18179124CDA3CE5EEE58F010F969 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC56 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xC91 JUMPI PUSH2 0xC8B PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC6F SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xCCD JUMPI PUSH2 0xCC7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAB SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xD09 JUMPI PUSH2 0xD03 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1381 JUMP JUMPDEST POP PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3B SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2224B7DFF324F24F810CF3BB4055085A9FD09DB933A221DEA091E176F4D16C8C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA1 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xDCA JUMPI PUSH0 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xDF8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDC SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xE06 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xE34 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE18 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0xE42 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xE66 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE7D SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF2F SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA9 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xFD1D4F59CF1013EE232282CAC3356B455525C6D4D04D18BED8216B7B6C2BEB60 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1032 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1056 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1084 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1068 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1100 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1124 PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1152 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1136 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x115F DUP3 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x1168 DUP2 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x1172 DUP4 DUP4 PUSH2 0x1471 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1187 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x11AB PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x11D9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11BD SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x120A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11EF SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xFA9941FD9436B8F798D8DA6C4747847BF053207FE545C37222588DB50A6742F8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x126D PUSH0 DUP1 SHL PUSH2 0x136D JUMP JUMPDEST PUSH2 0x129B PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127F SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12EB SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1379 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x155A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x138C DUP4 DUP4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x1460 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x13FD PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1464 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x147C DUP4 DUP4 PUSH2 0x1088 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14ED PUSH2 0x146A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1554 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1564 DUP3 DUP3 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x15A7 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP3 SWAP2 SWAP1 PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E3 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP2 EQ PUSH2 0x15ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FE DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1626 DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1643 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165C PUSH0 DUP4 ADD DUP5 PUSH2 0x163A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x1662 JUMP JUMPDEST DUP2 EQ PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168F DUP2 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16A9 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16E9 DUP3 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1703 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1714 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172C DUP2 PUSH2 0x171A JUMP JUMPDEST DUP2 EQ PUSH2 0x1736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1747 DUP2 PUSH2 0x1723 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1771 DUP7 DUP3 DUP8 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1782 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1793 DUP7 DUP3 DUP8 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17BF PUSH0 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DB JUMPI PUSH2 0x17DA PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E8 DUP6 DUP3 DUP7 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x171A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH0 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP7 DUP3 DUP8 ADD PUSH2 0x1681 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1860 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1871 DUP7 DUP3 DUP8 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CE JUMPI PUSH2 0x18CD PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18DB DUP5 DUP3 DUP6 ADD PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x466163652068617368206E6F7420726567697374657265640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1928 PUSH1 0x18 DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1933 DUP3 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1955 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x16DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x197E PUSH0 DUP4 ADD DUP7 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x198B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1998 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 EQ PUSH2 0x19B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C4 DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH2 0x19DE PUSH2 0x15AB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EC DUP5 DUP3 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A2C DUP3 PUSH2 0x171A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A37 DUP4 PUSH2 0x171A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x19F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5041594D454E545F41444D494E5F524F4C450000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A93 PUSH1 0x12 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9E DUP3 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x12 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A87 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH0 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1ADD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEE DUP3 PUSH2 0x171A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF9 DUP4 PUSH2 0x171A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B11 JUMPI PUSH2 0x1B10 PUSH2 0x19F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F46554C4C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B PUSH1 0x18 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B56 DUP3 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x18 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP3 PUSH2 0x1B3F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4D4944000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA9 PUSH1 0x17 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB4 DUP3 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 DUP3 PUSH2 0x1B9D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4845414C54485F50524F46455353494F4E414C5F4C4F57000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C07 PUSH1 0x17 DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C12 DUP3 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C27 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7265636F676E697A656420616363657373206C6576656C00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C65 PUSH1 0x19 DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C70 DUP3 PUSH2 0x1C31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB1 PUSH0 DUP4 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBC DUP3 PUSH2 0x1CA3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD0 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796F7574206661696C656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E PUSH1 0xD DUP4 PUSH2 0x18E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D19 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3B DUP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555345525F41444D494E5F524F4C450000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D76 PUSH1 0xF DUP4 PUSH2 0x1A55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP3 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D96 DUP3 PUSH2 0x1D6A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB3 PUSH0 DUP4 ADD DUP6 PUSH2 0x195C JUMP JUMPDEST PUSH2 0x1DC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB3 0x21 0xD2 0x29 0xCD 0xEE LOG0 PUSH25 0xBF583C0BE70C7711C9D446B731D92A5F048AD9EE6A33C96473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "231:5320:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2618:125:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2749:376;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3131:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;902:81:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;843:52:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3422:449:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4860:518;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2211:401;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:481;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4606:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;410:94:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4364:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;622:104:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4731:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5384:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4483:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;989:62;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;316:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2618:125:10:-;2686:4;2709:20;:27;2730:5;2709:27;;;;;;;;;;;;;;;;;;;;;2702:34;;2618:125;;;:::o;2749:376::-;2857:20;:31;2878:9;2857:31;;;;;;;;;;;;;;;;;;;;;2849:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2934:6;2927:27;;;2955:10;2975:4;2982:7;2927:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3049:7;3000:26;:37;3027:9;3000:37;;;;;;;;;;;:45;3038:6;3000:45;;;;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;;;;;;;;3110:7;3102:6;3071:47;;3091:9;3071:47;;;;;;;;;;2749:376;;;:::o;3131:285::-;3223:20;:31;3244:9;3223:31;;;;;;;;;;;;;;;;;;;;;3215:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3335:9;3293:27;:38;3321:9;3293:38;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;3399:9;3388;3359:50;;;;;;;;;;3131:285;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;902:81:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;843:52:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3422:449:10:-;1813:30;465:38;;;;;;;:::i;:::-;;;;;;;;;;;;;455:49;;;;;;1813:10;:30::i;:::-;3552:20:::1;:31;3573:9;3552:31;;;;;;;;;;;;;;;;;;;;;3544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3622:14;3639:26;:37;3666:9;3639:37;;;;;;;;;;;:45;3677:6;3639:45;;;;;;;;;;;;;;;;3622:62;;3701:6;3694:23;;;3718:8;3728:6;3694:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3794:6;3745:26;:37;3772:9;3745:37;;;;;;;;;;;:45;3783:6;3745:45;;;;;;;;;;;;;;;;:55;;;;;;;:::i;:::-;;;;;;;;3857:6;3849;3815:49;;3838:9;3815:49;;;;;;;;;;3534:337;3422:449:::0;;;:::o;4860:518::-;1635:30;2232:4:0;1646:18:10;;1635:10;:30::i;:::-;4977:1:::1;4961:12;:17:::0;4957:358:::1;;4994:46;571:44;;;;;;;:::i;:::-;;;;;;;;;;;;;561:55;;;;;;5031:8;4994:10;:46::i;:::-;;4957:358;;;5077:1;5061:12;:17:::0;5057:258:::1;;5094:45;682:43;;;;;;;:::i;:::-;;;;;;;;;;;;;672:54;;;;;;5130:8;5094:10;:45::i;:::-;;5057:258;;;5176:1;5160:12;:17:::0;5156:159:::1;;5193:45;792:43;;;;;;;:::i;:::-;;;;;;;;;;;;;782:54;;;;;;5229:8;5193:10;:45::i;:::-;;5156:159;;;5269:35;;;;;;;;;;:::i;:::-;;;;;;;;5156:159;5057:258;4957:358;5358:12;5348:8;5329:42;;;;;;;;;;;;4860:518:::0;;:::o;2211:401::-;2286:7;2309:43;571:44;;;;;;;:::i;:::-;;;;;;;;;;;;;561:55;;;;;;2343:8;2309:7;:43::i;:::-;2305:301;;;2375:1;2368:8;;;;2305:301;2397:42;682:43;;;;;;;:::i;:::-;;;;;;;;;;;;;672:54;;;;;;2430:8;2397:7;:42::i;:::-;2393:213;;;2462:1;2455:8;;;;2393:213;2484:42;792:43;;;;;;;:::i;:::-;;;;;;;;;;;;;782:54;;;;;;2517:8;2484:7;:42::i;:::-;2480:126;;;2549:1;2542:8;;;;2480:126;299:10;2581:14;;2211:401;;;;:::o;3877:481::-;1813:30;465:38;;;;;;;:::i;:::-;;;;;;;;;;;;;455:49;;;;;;1813:10;:30::i;:::-;3998:20:::1;:31;4019:9;3998:31;;;;;;;;;;;;;;;;;;;;;3990:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4068:14;4085:27;:38;4113:9;4085:38;;;;;;;;;;;;4068:55;;4134:12;4152:8;:13;;4173:6;4152:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4133:51;;;4202:7;4194:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;4279:6;4237:27;:38;4265:9;4237:38;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;4342:8;4300:51;;4331:9;4300:51;;;;;;;;;;3980:378;;3877:481:::0;;:::o;732:104::-;792:43;;;;;;;:::i;:::-;;;;;;;;;;;;;782:54;;;;;;732:104;:::o;4606:119::-;1635:30;2232:4:0;1646:18:10;;1635:10;:30::i;:::-;4678:40:::1;465:38;;;;;;;:::i;:::-;;;;;;;;;;;;;455:49;;;;;;4709:8;4678:10;:40::i;:::-;;4606:119:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;410:94:10:-;465:38;;;;;;;:::i;:::-;;;;;;;;;;;;;455:49;;;;;;410:94;:::o;4364:113::-;1635:30;2232:4:0;1646:18:10;;1635:10;:30::i;:::-;4433:37:::1;368:35;;;;;;;:::i;:::-;;;;;;;;;;;;;358:46;;;;;;4461:8;4433:10;:37::i;:::-;;4364:113:::0;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;622:104:10:-;682:43;;;;;;;:::i;:::-;;;;;;;;;;;;;672:54;;;;;;622:104;:::o;4731:123::-;1635:30;2232:4:0;1646:18:10;;1635:10;:30::i;:::-;4806:41:::1;465:38;;;;;;;:::i;:::-;;;;;;;;;;;;;455:49;;;;;;4838:8;4806:11;:41::i;:::-;;4731:123:::0;:::o;5384:165::-;1724:27;368:35;;;;;;;:::i;:::-;;;;;;;;;;;;;358:46;;;;;;1724:10;:27::i;:::-;5496:4:::1;5462:20:::0;:31:::1;5483:9;5462:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5532:9;5515:27;;;;;;;;;;5384:165:::0;:::o;4483:117::-;1635:30;2232:4:0;1646:18:10;;1635:10;:30::i;:::-;4555:38:::1;368:35;;;;;;;:::i;:::-;;;;;;;;;;;;;358:46;;;;;;4584:8;4555:11;:38::i;:::-;;4483:117:::0;:::o;989:62::-;;;;;;;;;;;;;;;;;:::o;510:106::-;571:44;;;;;;;:::i;:::-;;;;;;;;;;;;;561:55;;;;;;510:106;:::o;316:88::-;368:35;;;;;;;:::i;:::-;;;;;;;;;;;;;358:46;;;;;;316:88;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:77::-;2753:7;2782:5;2771:16;;2716:77;;;:::o;2799:122::-;2872:24;2890:5;2872:24;:::i;:::-;2865:5;2862:35;2852:63;;2911:1;2908;2901:12;2852:63;2799:122;:::o;2927:139::-;2973:5;3011:6;2998:20;2989:29;;3027:33;3054:5;3027:33;:::i;:::-;2927:139;;;;:::o;3072:619::-;3149:6;3157;3165;3214:2;3202:9;3193:7;3189:23;3185:32;3182:119;;;3220:79;;:::i;:::-;3182:119;3340:1;3365:53;3410:7;3401:6;3390:9;3386:22;3365:53;:::i;:::-;3355:63;;3311:117;3467:2;3493:53;3538:7;3529:6;3518:9;3514:22;3493:53;:::i;:::-;3483:63;;3438:118;3595:2;3621:53;3666:7;3657:6;3646:9;3642:22;3621:53;:::i;:::-;3611:63;;3566:118;3072:619;;;;;:::o;3697:118::-;3784:24;3802:5;3784:24;:::i;:::-;3779:3;3772:37;3697:118;;:::o;3821:222::-;3914:4;3952:2;3941:9;3937:18;3929:26;;3965:71;4033:1;4022:9;4018:17;4009:6;3965:71;:::i;:::-;3821:222;;;;:::o;4049:474::-;4117:6;4125;4174:2;4162:9;4153:7;4149:23;4145:32;4142:119;;;4180:79;;:::i;:::-;4142:119;4300:1;4325:53;4370:7;4361:6;4350:9;4346:22;4325:53;:::i;:::-;4315:63;;4271:117;4427:2;4453:53;4498:7;4489:6;4478:9;4474:22;4453:53;:::i;:::-;4443:63;;4398:118;4049:474;;;;;:::o;4529:118::-;4616:24;4634:5;4616:24;:::i;:::-;4611:3;4604:37;4529:118;;:::o;4653:222::-;4746:4;4784:2;4773:9;4769:18;4761:26;;4797:71;4865:1;4854:9;4850:17;4841:6;4797:71;:::i;:::-;4653:222;;;;:::o;4881:619::-;4958:6;4966;4974;5023:2;5011:9;5002:7;4998:23;4994:32;4991:119;;;5029:79;;:::i;:::-;4991:119;5149:1;5174:53;5219:7;5210:6;5199:9;5195:22;5174:53;:::i;:::-;5164:63;;5120:117;5276:2;5302:53;5347:7;5338:6;5327:9;5323:22;5302:53;:::i;:::-;5292:63;;5247:118;5404:2;5430:53;5475:7;5466:6;5455:9;5451:22;5430:53;:::i;:::-;5420:63;;5375:118;4881:619;;;;;:::o;5506:474::-;5574:6;5582;5631:2;5619:9;5610:7;5606:23;5602:32;5599:119;;;5637:79;;:::i;:::-;5599:119;5757:1;5782:53;5827:7;5818:6;5807:9;5803:22;5782:53;:::i;:::-;5772:63;;5728:117;5884:2;5910:53;5955:7;5946:6;5935:9;5931:22;5910:53;:::i;:::-;5900:63;;5855:118;5506:474;;;;;:::o;5986:329::-;6045:6;6094:2;6082:9;6073:7;6069:23;6065:32;6062:119;;;6100:79;;:::i;:::-;6062:119;6220:1;6245:53;6290:7;6281:6;6270:9;6266:22;6245:53;:::i;:::-;6235:63;;6191:117;5986:329;;;;:::o;6321:169::-;6405:11;6439:6;6434:3;6427:19;6479:4;6474:3;6470:14;6455:29;;6321:169;;;;:::o;6496:174::-;6636:26;6632:1;6624:6;6620:14;6613:50;6496:174;:::o;6676:366::-;6818:3;6839:67;6903:2;6898:3;6839:67;:::i;:::-;6832:74;;6915:93;7004:3;6915:93;:::i;:::-;7033:2;7028:3;7024:12;7017:19;;6676:366;;;:::o;7048:419::-;7214:4;7252:2;7241:9;7237:18;7229:26;;7301:9;7295:4;7291:20;7287:1;7276:9;7272:17;7265:47;7329:131;7455:4;7329:131;:::i;:::-;7321:139;;7048:419;;;:::o;7473:118::-;7560:24;7578:5;7560:24;:::i;:::-;7555:3;7548:37;7473:118;;:::o;7597:442::-;7746:4;7784:2;7773:9;7769:18;7761:26;;7797:71;7865:1;7854:9;7850:17;7841:6;7797:71;:::i;:::-;7878:72;7946:2;7935:9;7931:18;7922:6;7878:72;:::i;:::-;7960;8028:2;8017:9;8013:18;8004:6;7960:72;:::i;:::-;7597:442;;;;;;:::o;8045:116::-;8115:21;8130:5;8115:21;:::i;:::-;8108:5;8105:32;8095:60;;8151:1;8148;8141:12;8095:60;8045:116;:::o;8167:137::-;8221:5;8252:6;8246:13;8237:22;;8268:30;8292:5;8268:30;:::i;:::-;8167:137;;;;:::o;8310:345::-;8377:6;8426:2;8414:9;8405:7;8401:23;8397:32;8394:119;;;8432:79;;:::i;:::-;8394:119;8552:1;8577:61;8630:7;8621:6;8610:9;8606:22;8577:61;:::i;:::-;8567:71;;8523:125;8310:345;;;;:::o;8661:180::-;8709:77;8706:1;8699:88;8806:4;8803:1;8796:15;8830:4;8827:1;8820:15;8847:191;8887:3;8906:20;8924:1;8906:20;:::i;:::-;8901:25;;8940:20;8958:1;8940:20;:::i;:::-;8935:25;;8983:1;8980;8976:9;8969:16;;9004:3;9001:1;8998:10;8995:36;;;9011:18;;:::i;:::-;8995:36;8847:191;;;;:::o;9044:148::-;9146:11;9183:3;9168:18;;9044:148;;;;:::o;9198:168::-;9338:20;9334:1;9326:6;9322:14;9315:44;9198:168;:::o;9372:402::-;9532:3;9553:85;9635:2;9630:3;9553:85;:::i;:::-;9546:92;;9647:93;9736:3;9647:93;:::i;:::-;9765:2;9760:3;9756:12;9749:19;;9372:402;;;:::o;9780:381::-;9965:3;9987:148;10131:3;9987:148;:::i;:::-;9980:155;;10152:3;10145:10;;9780:381;;;:::o;10167:332::-;10288:4;10326:2;10315:9;10311:18;10303:26;;10339:71;10407:1;10396:9;10392:17;10383:6;10339:71;:::i;:::-;10420:72;10488:2;10477:9;10473:18;10464:6;10420:72;:::i;:::-;10167:332;;;;;:::o;10505:194::-;10545:4;10565:20;10583:1;10565:20;:::i;:::-;10560:25;;10599:20;10617:1;10599:20;:::i;:::-;10594:25;;10643:1;10640;10636:9;10628:17;;10667:1;10661:4;10658:11;10655:37;;;10672:18;;:::i;:::-;10655:37;10505:194;;;;:::o;10705:174::-;10845:26;10841:1;10833:6;10829:14;10822:50;10705:174;:::o;10885:402::-;11045:3;11066:85;11148:2;11143:3;11066:85;:::i;:::-;11059:92;;11160:93;11249:3;11160:93;:::i;:::-;11278:2;11273:3;11269:12;11262:19;;10885:402;;;:::o;11293:381::-;11478:3;11500:148;11644:3;11500:148;:::i;:::-;11493:155;;11665:3;11658:10;;11293:381;;;:::o;11680:173::-;11820:25;11816:1;11808:6;11804:14;11797:49;11680:173;:::o;11859:402::-;12019:3;12040:85;12122:2;12117:3;12040:85;:::i;:::-;12033:92;;12134:93;12223:3;12134:93;:::i;:::-;12252:2;12247:3;12243:12;12236:19;;11859:402;;;:::o;12267:381::-;12452:3;12474:148;12618:3;12474:148;:::i;:::-;12467:155;;12639:3;12632:10;;12267:381;;;:::o;12654:173::-;12794:25;12790:1;12782:6;12778:14;12771:49;12654:173;:::o;12833:402::-;12993:3;13014:85;13096:2;13091:3;13014:85;:::i;:::-;13007:92;;13108:93;13197:3;13108:93;:::i;:::-;13226:2;13221:3;13217:12;13210:19;;12833:402;;;:::o;13241:381::-;13426:3;13448:148;13592:3;13448:148;:::i;:::-;13441:155;;13613:3;13606:10;;13241:381;;;:::o;13628:175::-;13768:27;13764:1;13756:6;13752:14;13745:51;13628:175;:::o;13809:366::-;13951:3;13972:67;14036:2;14031:3;13972:67;:::i;:::-;13965:74;;14048:93;14137:3;14048:93;:::i;:::-;14166:2;14161:3;14157:12;14150:19;;13809:366;;;:::o;14181:419::-;14347:4;14385:2;14374:9;14370:18;14362:26;;14434:9;14428:4;14424:20;14420:1;14409:9;14405:17;14398:47;14462:131;14588:4;14462:131;:::i;:::-;14454:139;;14181:419;;;:::o;14606:147::-;14707:11;14744:3;14729:18;;14606:147;;;;:::o;14759:114::-;;:::o;14879:398::-;15038:3;15059:83;15140:1;15135:3;15059:83;:::i;:::-;15052:90;;15151:93;15240:3;15151:93;:::i;:::-;15269:1;15264:3;15260:11;15253:18;;14879:398;;;:::o;15283:379::-;15467:3;15489:147;15632:3;15489:147;:::i;:::-;15482:154;;15653:3;15646:10;;15283:379;;;:::o;15668:163::-;15808:15;15804:1;15796:6;15792:14;15785:39;15668:163;:::o;15837:366::-;15979:3;16000:67;16064:2;16059:3;16000:67;:::i;:::-;15993:74;;16076:93;16165:3;16076:93;:::i;:::-;16194:2;16189:3;16185:12;16178:19;;15837:366;;;:::o;16209:419::-;16375:4;16413:2;16402:9;16398:18;16390:26;;16462:9;16456:4;16452:20;16448:1;16437:9;16433:17;16426:47;16490:131;16616:4;16490:131;:::i;:::-;16482:139;;16209:419;;;:::o;16634:165::-;16774:17;16770:1;16762:6;16758:14;16751:41;16634:165;:::o;16805:402::-;16965:3;16986:85;17068:2;17063:3;16986:85;:::i;:::-;16979:92;;17080:93;17169:3;17080:93;:::i;:::-;17198:2;17193:3;17189:12;17182:19;;16805:402;;;:::o;17213:381::-;17398:3;17420:148;17564:3;17420:148;:::i;:::-;17413:155;;17585:3;17578:10;;17213:381;;;:::o;17600:332::-;17721:4;17759:2;17748:9;17744:18;17736:26;;17772:71;17840:1;17829:9;17825:17;17816:6;17772:71;:::i;:::-;17853:72;17921:2;17910:9;17906:18;17897:6;17853:72;:::i;:::-;17600:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1535400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "375",
								"HEALTH_PROFESSIONAL_FULL()": "714",
								"HEALTH_PROFESSIONAL_LOW()": "672",
								"HEALTH_PROFESSIONAL_MID()": "671",
								"PAYMENT_ADMIN_ROLE()": "693",
								"USER_ADMIN_ROLE()": "736",
								"addPaymentAdmin(address)": "infinite",
								"addUserAdmin(address)": "infinite",
								"balanceForTokenForFaceHash(bytes32,address)": "3168",
								"baseTokenBalanceForFaceHash(bytes32)": "2820",
								"getAccessLevelForAddress(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3212",
								"isFaceHashRegistered(bytes32)": "2856",
								"payoutChainBaseTokenToFaceHash(bytes32,address)": "infinite",
								"payoutTokenForFaceHash(bytes32,address,address)": "infinite",
								"registerFaceHash(bytes32)": "infinite",
								"registeredFaceHashes(bytes32)": "2853",
								"removePaymentAdmin(address)": "infinite",
								"removeUserAdmin(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"sendChainBaseTokenToFaceHash(bytes32)": "infinite",
								"sendTokenToFaceHash(bytes32,address,uint256)": "infinite",
								"supportsInterface(bytes4)": "741",
								"verifyHealthWorker(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1867,
									"end": 2205,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1902,
									"end": 1920,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1902,
									"end": 1920,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1932,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1891,
									"end": 1901,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1901,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1891,
									"end": 1933,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 368,
									"end": 403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 368,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 403,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 358,
									"end": 404,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 358,
									"end": 404,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 358,
									"end": 404,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 358,
									"end": 404,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 358,
									"end": 404,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 358,
									"end": 404,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1974,
									"end": 1992,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1992,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1943,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1956,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1993,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1993,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1993,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1943,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 571,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 571,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 615,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 561,
									"end": 616,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 561,
									"end": 616,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 561,
									"end": 616,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 561,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 561,
									"end": 616,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 561,
									"end": 616,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2061,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2043,
									"end": 2061,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2003,
									"end": 2016,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2003,
									"end": 2016,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2062,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2003,
									"end": 2062,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2062,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2003,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 682,
									"end": 725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 682,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 725,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 672,
									"end": 726,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 672,
									"end": 726,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 672,
									"end": 726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 672,
									"end": 726,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 672,
									"end": 726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 672,
									"end": 726,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2111,
									"end": 2129,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2129,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2130,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2072,
									"end": 2130,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2130,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2072,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2198,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 792,
									"end": 835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 792,
									"end": 835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 835,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 782,
									"end": 836,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 782,
									"end": 836,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 782,
									"end": 836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 782,
									"end": 836,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 782,
									"end": 836,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 782,
									"end": 836,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2179,
									"end": 2197,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2179,
									"end": 2197,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2153,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2140,
									"end": 2153,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2140,
									"end": 2153,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2198,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2140,
									"end": 2198,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2198,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2140,
									"end": 2198,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 5822,
									"end": 5826,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5844,
									"end": 5848,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5909,
									"end": 5926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5903,
									"end": 5907,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 5771,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 155,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 7,
									"end": 155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 109,
									"end": 120,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 149,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 131,
									"end": 149,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 131,
									"end": 149,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 155,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7,
									"end": 155,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 161,
									"end": 326,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 161,
									"end": 326,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 11,
									"value": "555345525F41444D494E5F524F4C450000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 295,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 285,
									"end": 299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 278,
									"end": 319,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 161,
									"end": 326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 161,
									"end": 326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 332,
									"end": 734,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 332,
									"end": 734,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 492,
									"end": 495,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 595,
									"end": 597,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 590,
									"end": 593,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 513,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 513,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 513,
									"end": 598,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 513,
									"end": 598,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 506,
									"end": 598,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 506,
									"end": 598,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 699,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 607,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 607,
									"end": 700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 607,
									"end": 700,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 607,
									"end": 700,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 725,
									"end": 727,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 720,
									"end": 723,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 716,
									"end": 728,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 709,
									"end": 728,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 332,
									"end": 734,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 332,
									"end": 734,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 332,
									"end": 734,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 332,
									"end": 734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 740,
									"end": 1121,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 740,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 925,
									"end": 928,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 947,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1091,
									"end": 1094,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 947,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 947,
									"end": 1095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 947,
									"end": 1095,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 947,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 940,
									"end": 1095,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 940,
									"end": 1095,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1115,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1115,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1115,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 740,
									"end": 1121,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 740,
									"end": 1121,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 740,
									"end": 1121,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 740,
									"end": 1121,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1301,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1127,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH",
									"source": 11,
									"value": "4845414C54485F50524F46455353494F4E414C5F46554C4C0000000000000000"
								},
								{
									"begin": 1263,
									"end": 1264,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 1261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1265,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1244,
									"end": 1294,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1301,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1709,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1307,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1467,
									"end": 1470,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1570,
									"end": 1572,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1565,
									"end": 1568,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1573,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1488,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1573,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1671,
									"end": 1674,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1582,
									"end": 1675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1675,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1582,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1700,
									"end": 1702,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1695,
									"end": 1698,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1703,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1703,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1709,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1709,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1709,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 2096,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1715,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1900,
									"end": 1903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2066,
									"end": 2069,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1922,
									"end": 2070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 2070,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1922,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 2070,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 2070,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2087,
									"end": 2090,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2080,
									"end": 2090,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2080,
									"end": 2090,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 2096,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 2096,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 2096,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 2096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2275,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2102,
									"end": 2275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2242,
									"end": 2267,
									"name": "PUSH",
									"source": 11,
									"value": "4845414C54485F50524F46455353494F4E414C5F4D4944000000000000000000"
								},
								{
									"begin": 2238,
									"end": 2239,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2230,
									"end": 2236,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2226,
									"end": 2240,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2219,
									"end": 2268,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2683,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2281,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2441,
									"end": 2444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2462,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2544,
									"end": 2546,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2462,
									"end": 2547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2547,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2462,
									"end": 2547,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2455,
									"end": 2547,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2455,
									"end": 2547,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2556,
									"end": 2649,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2556,
									"end": 2649,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2556,
									"end": 2649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2556,
									"end": 2649,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 2556,
									"end": 2649,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2674,
									"end": 2676,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2669,
									"end": 2672,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2665,
									"end": 2677,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2658,
									"end": 2677,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2658,
									"end": 2677,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2683,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2683,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2683,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2689,
									"end": 3070,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2689,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2896,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 3040,
									"end": 3043,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2896,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3044,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 2896,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2889,
									"end": 3044,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2889,
									"end": 3044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3061,
									"end": 3064,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3054,
									"end": 3064,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3054,
									"end": 3064,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2689,
									"end": 3070,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2689,
									"end": 3070,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2689,
									"end": 3070,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2689,
									"end": 3070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3076,
									"end": 3249,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3076,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3216,
									"end": 3241,
									"name": "PUSH",
									"source": 11,
									"value": "4845414C54485F50524F46455353494F4E414C5F4C4F57000000000000000000"
								},
								{
									"begin": 3212,
									"end": 3213,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3204,
									"end": 3210,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3200,
									"end": 3214,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3193,
									"end": 3242,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3076,
									"end": 3249,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3076,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3657,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3255,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3415,
									"end": 3418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3518,
									"end": 3520,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3513,
									"end": 3516,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 3436,
									"end": 3521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3521,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3436,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3521,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3530,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 3619,
									"end": 3622,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3530,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3530,
									"end": 3623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3530,
									"end": 3623,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 3530,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3648,
									"end": 3650,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3643,
									"end": 3646,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3639,
									"end": 3651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3632,
									"end": 3651,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3632,
									"end": 3651,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3657,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3657,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3657,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3657,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 4044,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3663,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3848,
									"end": 3851,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3870,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 4014,
									"end": 4017,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3870,
									"end": 4018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3870,
									"end": 4018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3870,
									"end": 4018,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 3870,
									"end": 4018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3863,
									"end": 4018,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3863,
									"end": 4018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4035,
									"end": 4038,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4028,
									"end": 4038,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4028,
									"end": 4038,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 4044,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 4044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 4044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 4044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5551,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004b321d229cdeea078bf583c0be70c7711c9d446b731d92a5f048ad9ee6a33c964736f6c63430008160033",
									".code": [
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "585F4C49"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "D6770522"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "E096CFED"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "E096CFED"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "E6D6384A"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "F0F7AF4D"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "F2C80089"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "D6770522"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "D7B8A07A"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "DD65AB1F"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "B24B56B0"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "B89F9AC1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "585F4C49"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "5EA06A9C"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "3FD2C4F1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "3FD2C4F1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "48570EE6"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "51FEA917"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "55F93E6E"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "2F432261"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "9C19362"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "ADBBDD3"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "FA750FF"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "24CCC1A6"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 5551,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2618,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2618,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2618,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2749,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2749,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3131,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3131,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 902,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 902,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 902,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 843,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 843,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 3422,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3422,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4860,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4860,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2211,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2211,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2211,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3877,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3877,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 732,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 732,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4606,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 4606,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 410,
											"end": 504,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 410,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 410,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4364,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4364,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 622,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 622,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4731,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4731,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5384,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5384,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4483,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4483,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 989,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 989,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 989,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 510,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 510,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 316,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 316,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2709,
											"end": 2736,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2877,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2857,
											"end": 2888,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2849,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2849,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2954,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2954,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2954,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 2955,
											"end": 2965,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2979,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2927,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2927,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3026,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3036,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3000,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3110,
											"end": 3117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "7A143568E7A2E32F33C2AB85BB8CB9FF7E78D00E650D6973C8873BBDC075E811"
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3118,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 3125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3243,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3223,
											"end": 3254,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3215,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3215,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3320,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3330,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3293,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "PUSH",
											"source": 10,
											"value": "ACC0FD4B3527D0953ABDCE4AC9A5F786E3D780A3B4BBEFEFB360A8642429E0F6"
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3409,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 983,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 843,
											"end": 895,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 843,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 465,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1813,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3582,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3552,
											"end": 3583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3544,
											"end": 3612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3544,
											"end": 3612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3676,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3683,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3684,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 3718,
											"end": 3726,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3728,
											"end": 3734,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3694,
											"end": 3735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3694,
											"end": 3735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3794,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3781,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3782,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3789,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3745,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3849,
											"end": 3855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3847,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "434ADBD1794F49FFEB1EA04DE9AD62FB01CC18179124CDA3CE5EEE58F010F969"
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3864,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1635,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 571,
											"end": 615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5039,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4994,
											"end": 5040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4994,
											"end": 5040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5061,
											"end": 5073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5078,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 682,
											"end": 725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5138,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5094,
											"end": 5139,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5094,
											"end": 5139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5160,
											"end": 5172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5160,
											"end": 5177,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 792,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5237,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5193,
											"end": 5238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5193,
											"end": 5238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5269,
											"end": 5304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5304,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5156,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5057,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4957,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5370,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5356,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2224B7DFF324F24F810CF3BB4055085A9FD09DB933A221DEA091E176F4D16C8C"
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5371,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 571,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2351,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2309,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2352,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2309,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2305,
											"end": 2606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2368,
											"end": 2376,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2606,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2305,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 682,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2397,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2397,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2393,
											"end": 2606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2455,
											"end": 2463,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2606,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2393,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 792,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2484,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2480,
											"end": 2606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2606,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2480,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 299,
											"end": 309,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2581,
											"end": 2595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 465,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1813,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1813,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4028,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3998,
											"end": 4029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3990,
											"end": 4058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3990,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4122,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4160,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4152,
											"end": 4165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4173,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4152,
											"end": 4184,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4194,
											"end": 4227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4194,
											"end": 4227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4274,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4237,
											"end": 4285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4340,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FD1D4F59CF1013EE232282CAC3356B455525C6D4D04D18BED8216B7B6C2BEB60"
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4351,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 732,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 792,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 782,
											"end": 836,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 732,
											"end": 836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1635,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 465,
											"end": 503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4709,
											"end": 4717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4678,
											"end": 4718,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4678,
											"end": 4718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 504,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 410,
											"end": 504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 465,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 410,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1635,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4461,
											"end": 4469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4433,
											"end": 4470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4433,
											"end": 4470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 726,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 622,
											"end": 726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 682,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 682,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 672,
											"end": 726,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 622,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1635,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 465,
											"end": 503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 455,
											"end": 504,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4806,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4806,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1724,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5492,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FA9941FD9436B8F798D8DA6C4747847BF053207FE545C37222588DB50A6742F8"
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5542,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1635,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1635,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4592,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4555,
											"end": 4593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4555,
											"end": 4593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4555,
											"end": 4593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 510,
											"end": 616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 571,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 571,
											"end": 615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 561,
											"end": 616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 316,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 368,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 404,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2328,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2329,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 2407,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2793,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2716,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2793,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2793,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2921,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2799,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 2872,
											"end": 2896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2896,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 2872,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2865,
											"end": 2870,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2862,
											"end": 2897,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2852,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 2852,
											"end": 2915,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2852,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 2852,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 2978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3018,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3018,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2989,
											"end": 3018,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 3027,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 3027,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3202,
											"end": 3211,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3217,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3220,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3365,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3418,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 3538,
											"end": 3545,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3527,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3493,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 3493,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3546,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 3666,
											"end": 3673,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3657,
											"end": 3663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3642,
											"end": 3664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3621,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3674,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 3621,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3611,
											"end": 3674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3611,
											"end": 3674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3815,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 3697,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 3802,
											"end": 3807,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3784,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3808,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 3784,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3954,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3955,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 4033,
											"end": 4034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4031,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4015,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 3965,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4036,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 3965,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4117,
											"end": 4123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4160,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4177,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4261,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 4142,
											"end": 4261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4180,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4180,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4180,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4261,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 4142,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4370,
											"end": 4377,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4325,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4378,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4325,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4315,
											"end": 4378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4315,
											"end": 4378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4271,
											"end": 4388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4453,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 4498,
											"end": 4505,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4453,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4506,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 4453,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4443,
											"end": 4506,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4443,
											"end": 4506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4647,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4529,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4616,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4634,
											"end": 4639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4616,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4616,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4616,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4616,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4604,
											"end": 4641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4761,
											"end": 4787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4761,
											"end": 4787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4797,
											"end": 4868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4868,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 4797,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5021,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5026,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 5029,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 5029,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4991,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5219,
											"end": 5226,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 5174,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5174,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5338,
											"end": 5344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5327,
											"end": 5336,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5323,
											"end": 5345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5302,
											"end": 5355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5355,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 5302,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5292,
											"end": 5355,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5292,
											"end": 5355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5473,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5430,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5430,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5430,
											"end": 5483,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 5430,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5375,
											"end": 5493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 5500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5629,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5634,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 5637,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 5827,
											"end": 5834,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5782,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5884,
											"end": 5886,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5935,
											"end": 5944,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 5953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5910,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5963,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6092,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6097,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6100,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6220,
											"end": 6221,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 6290,
											"end": 6297,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6288,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 6245,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6191,
											"end": 6308,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5986,
											"end": 6315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6405,
											"end": 6416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6445,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6427,
											"end": 6446,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6474,
											"end": 6477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6470,
											"end": 6484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6496,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 6662,
											"name": "PUSH",
											"source": 11,
											"value": "466163652068617368206E6F7420726567697374657265640000000000000000"
										},
										{
											"begin": 6632,
											"end": 6633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6663,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 7042,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 6676,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6818,
											"end": 6821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 6903,
											"end": 6905,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6898,
											"end": 6901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 6839,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6906,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 6839,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 7004,
											"end": 7007,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6915,
											"end": 7008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 7008,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 6915,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7033,
											"end": 7035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7028,
											"end": 7031,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7024,
											"end": 7036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 7042,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 7042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 7042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7467,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 7048,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7214,
											"end": 7218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7229,
											"end": 7255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7301,
											"end": 7310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7285,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7272,
											"end": 7289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7312,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7329,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7329,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7329,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7329,
											"end": 7460,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 7329,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7467,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7467,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7473,
											"end": 7591,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 7473,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 7578,
											"end": 7583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 7560,
											"end": 7584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7555,
											"end": 7558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7585,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7473,
											"end": 7591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7473,
											"end": 7591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7473,
											"end": 7591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7761,
											"end": 7787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7761,
											"end": 7787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7850,
											"end": 7867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 7847,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 7797,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7868,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 7797,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7935,
											"end": 7944,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 7878,
											"end": 7950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7950,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 7878,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7960,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 8028,
											"end": 8030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8004,
											"end": 8010,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7960,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 7960,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7960,
											"end": 8032,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 7960,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 8039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8045,
											"end": 8161,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 8045,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 8130,
											"end": 8135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 8115,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8136,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 8115,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8108,
											"end": 8113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8095,
											"end": 8155,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8155,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8095,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8045,
											"end": 8161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8045,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8221,
											"end": 8226,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8246,
											"end": 8259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 8292,
											"end": 8297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 8268,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8298,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 8268,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8405,
											"end": 8412,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8424,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8397,
											"end": 8429,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8394,
											"end": 8513,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8394,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 8394,
											"end": 8513,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 8432,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 8432,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8511,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 8432,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8394,
											"end": 8513,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 8394,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 8630,
											"end": 8637,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8621,
											"end": 8627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8619,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8577,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 8577,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8577,
											"end": 8638,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 8577,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8567,
											"end": 8638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8567,
											"end": 8638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8523,
											"end": 8648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8310,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8661,
											"end": 8841,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 8661,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8709,
											"end": 8786,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8787,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8806,
											"end": 8810,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 8803,
											"end": 8804,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8796,
											"end": 8811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8835,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8887,
											"end": 8890,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 8906,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8926,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 8906,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8901,
											"end": 8926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8901,
											"end": 8926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8940,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 8958,
											"end": 8959,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8940,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 8940,
											"end": 8960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8940,
											"end": 8960,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 8940,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8935,
											"end": 8960,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8935,
											"end": 8960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8980,
											"end": 8981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8976,
											"end": 8985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 8985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 8985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9004,
											"end": 9007,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8998,
											"end": 9008,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 9031,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 8995,
											"end": 9031,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 9011,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 9031,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 8995,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 9038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9186,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9198,
											"end": 9366,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 9198,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9338,
											"end": 9358,
											"name": "PUSH",
											"source": 11,
											"value": "5041594D454E545F41444D494E5F524F4C450000000000000000000000000000"
										},
										{
											"begin": 9334,
											"end": 9335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9322,
											"end": 9336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9315,
											"end": 9359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9198,
											"end": 9366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9198,
											"end": 9366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9774,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 9372,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 9630,
											"end": 9633,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9553,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 9553,
											"end": 9638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9553,
											"end": 9638,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 9553,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9546,
											"end": 9638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9546,
											"end": 9638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 9647,
											"end": 9740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 9647,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 9760,
											"end": 9763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9756,
											"end": 9768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10161,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 9780,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9965,
											"end": 9968,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 10131,
											"end": 10134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9987,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 9987,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9987,
											"end": 10135,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 9987,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9980,
											"end": 10135,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9980,
											"end": 10135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10145,
											"end": 10155,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10392,
											"end": 10409,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 10339,
											"end": 10410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 10488,
											"end": 10490,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10464,
											"end": 10470,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 10420,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10492,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 10420,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10167,
											"end": 10499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10545,
											"end": 10549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 10583,
											"end": 10584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 10565,
											"end": 10585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10560,
											"end": 10585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10560,
											"end": 10585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 10599,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10594,
											"end": 10619,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10594,
											"end": 10619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10643,
											"end": 10644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10636,
											"end": 10645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10628,
											"end": 10645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10628,
											"end": 10645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10669,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10655,
											"end": 10692,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10655,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 10655,
											"end": 10692,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 10672,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10655,
											"end": 10692,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 10655,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10879,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 10705,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10845,
											"end": 10871,
											"name": "PUSH",
											"source": 11,
											"value": "4845414C54485F50524F46455353494F4E414C5F46554C4C0000000000000000"
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10829,
											"end": 10843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10822,
											"end": 10872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11287,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 10885,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11045,
											"end": 11048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 11148,
											"end": 11150,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 11143,
											"end": 11146,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 11066,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11059,
											"end": 11151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11059,
											"end": 11151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11160,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 11249,
											"end": 11252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11160,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 11160,
											"end": 11253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11160,
											"end": 11253,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 11160,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11278,
											"end": 11280,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 11273,
											"end": 11276,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11269,
											"end": 11281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11262,
											"end": 11281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11262,
											"end": 11281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11674,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 11293,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 11644,
											"end": 11647,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 11500,
											"end": 11648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11500,
											"end": 11648,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 11500,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11493,
											"end": 11648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11493,
											"end": 11648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11658,
											"end": 11668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11658,
											"end": 11668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11853,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 11680,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11845,
											"name": "PUSH",
											"source": 11,
											"value": "4845414C54485F50524F46455353494F4E414C5F4D4944000000000000000000"
										},
										{
											"begin": 11816,
											"end": 11817,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11814,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11804,
											"end": 11818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11797,
											"end": 11846,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11680,
											"end": 11853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11859,
											"end": 12261,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 11859,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12122,
											"end": 12124,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 12117,
											"end": 12120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12040,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 12040,
											"end": 12125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12040,
											"end": 12125,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12040,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12033,
											"end": 12125,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12033,
											"end": 12125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12223,
											"end": 12226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 12134,
											"end": 12227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12227,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12134,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 12247,
											"end": 12250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12243,
											"end": 12255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12236,
											"end": 12255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12236,
											"end": 12255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11859,
											"end": 12261,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11859,
											"end": 12261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11859,
											"end": 12261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11859,
											"end": 12261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12648,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 12267,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12452,
											"end": 12455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 12618,
											"end": 12621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12474,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 12474,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12474,
											"end": 12622,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 12474,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12622,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12639,
											"end": 12642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 12642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 12642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12654,
											"end": 12827,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 12654,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12794,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "4845414C54485F50524F46455353494F4E414C5F4C4F57000000000000000000"
										},
										{
											"begin": 12790,
											"end": 12791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12782,
											"end": 12788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12778,
											"end": 12792,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12771,
											"end": 12820,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12654,
											"end": 12827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12654,
											"end": 12827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 13235,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 12833,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12993,
											"end": 12996,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13096,
											"end": 13098,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 13091,
											"end": 13094,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 13014,
											"end": 13099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13099,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13014,
											"end": 13099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13007,
											"end": 13099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13007,
											"end": 13099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13108,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13197,
											"end": 13200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13108,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 13108,
											"end": 13201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13108,
											"end": 13201,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13108,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13226,
											"end": 13228,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 13221,
											"end": 13224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13217,
											"end": 13229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13210,
											"end": 13229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13210,
											"end": 13229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 13235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 13235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 13235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 13235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13622,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 13241,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13426,
											"end": 13429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13448,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 13448,
											"end": 13596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13448,
											"end": 13596,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 13448,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13441,
											"end": 13596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13441,
											"end": 13596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13616,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13606,
											"end": 13616,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13606,
											"end": 13616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13622,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13803,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 13628,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13768,
											"end": 13795,
											"name": "PUSH",
											"source": 11,
											"value": "556E7265636F676E697A656420616363657373206C6576656C00000000000000"
										},
										{
											"begin": 13764,
											"end": 13765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13756,
											"end": 13762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13745,
											"end": 13796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 14175,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 13809,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13972,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 14036,
											"end": 14038,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 14031,
											"end": 14034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13972,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 13972,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13972,
											"end": 14039,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 13972,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13965,
											"end": 14039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14048,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14137,
											"end": 14140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14048,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 14048,
											"end": 14141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14048,
											"end": 14141,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14048,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14166,
											"end": 14168,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14161,
											"end": 14164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14157,
											"end": 14169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14150,
											"end": 14169,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14150,
											"end": 14169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 14175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 14175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 14175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13809,
											"end": 14175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14600,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 14181,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14347,
											"end": 14351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14387,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14374,
											"end": 14383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14362,
											"end": 14388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14362,
											"end": 14388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14434,
											"end": 14443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14424,
											"end": 14444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14420,
											"end": 14421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14409,
											"end": 14418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14405,
											"end": 14422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14398,
											"end": 14445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14462,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 14588,
											"end": 14592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14462,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 14462,
											"end": 14593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14462,
											"end": 14593,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 14462,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14454,
											"end": 14593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14454,
											"end": 14593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14600,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14707,
											"end": 14718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14873,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 14759,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14879,
											"end": 15277,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 14879,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15038,
											"end": 15041,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15059,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15140,
											"end": 15141,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15135,
											"end": 15138,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15059,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 15059,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15059,
											"end": 15142,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15059,
											"end": 15142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15142,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15151,
											"end": 15244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 15240,
											"end": 15243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15151,
											"end": 15244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 15151,
											"end": 15244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15151,
											"end": 15244,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 15151,
											"end": 15244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15264,
											"end": 15267,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15260,
											"end": 15271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15253,
											"end": 15271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15253,
											"end": 15271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14879,
											"end": 15277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14879,
											"end": 15277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14879,
											"end": 15277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14879,
											"end": 15277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15283,
											"end": 15662,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 15283,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15467,
											"end": 15470,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 15632,
											"end": 15635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15489,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 15489,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15489,
											"end": 15636,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 15489,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15482,
											"end": 15636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15482,
											"end": 15636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15653,
											"end": 15656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15646,
											"end": 15656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15646,
											"end": 15656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15283,
											"end": 15662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15283,
											"end": 15662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15283,
											"end": 15662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15283,
											"end": 15662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15668,
											"end": 15831,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 15668,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15808,
											"end": 15823,
											"name": "PUSH",
											"source": 11,
											"value": "5061796F7574206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 15804,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15796,
											"end": 15802,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15792,
											"end": 15806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15785,
											"end": 15824,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15668,
											"end": 15831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15668,
											"end": 15831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15979,
											"end": 15982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16064,
											"end": 16066,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 16059,
											"end": 16062,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 16000,
											"end": 16067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16000,
											"end": 16067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15993,
											"end": 16067,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15993,
											"end": 16067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 16165,
											"end": 16168,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 16076,
											"end": 16169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 16076,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16194,
											"end": 16196,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16189,
											"end": 16192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16185,
											"end": 16197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16178,
											"end": 16197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16178,
											"end": 16197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 16203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 16203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16413,
											"end": 16415,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16402,
											"end": 16411,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16398,
											"end": 16416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16390,
											"end": 16416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16390,
											"end": 16416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16462,
											"end": 16471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16452,
											"end": 16472,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16448,
											"end": 16449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16437,
											"end": 16446,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16433,
											"end": 16450,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16426,
											"end": 16473,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 16490,
											"end": 16621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 16490,
											"end": 16621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16482,
											"end": 16621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16482,
											"end": 16621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16209,
											"end": 16628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16634,
											"end": 16799,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 16634,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16774,
											"end": 16791,
											"name": "PUSH",
											"source": 11,
											"value": "555345525F41444D494E5F524F4C450000000000000000000000000000000000"
										},
										{
											"begin": 16770,
											"end": 16771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16762,
											"end": 16768,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16758,
											"end": 16772,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16751,
											"end": 16792,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16634,
											"end": 16799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16634,
											"end": 16799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 17207,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 16805,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16965,
											"end": 16968,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 17068,
											"end": 17070,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 17063,
											"end": 17066,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16986,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 16986,
											"end": 17071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16986,
											"end": 17071,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 16986,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17080,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17169,
											"end": 17172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17080,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 17080,
											"end": 17173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17080,
											"end": 17173,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17080,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17198,
											"end": 17200,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 17193,
											"end": 17196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17189,
											"end": 17201,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 17207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 17207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 17207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 17207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17213,
											"end": 17594,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 17213,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17398,
											"end": 17401,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17420,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 17564,
											"end": 17567,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17420,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 17420,
											"end": 17568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17420,
											"end": 17568,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 17420,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17413,
											"end": 17568,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17413,
											"end": 17568,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17585,
											"end": 17588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17213,
											"end": 17594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17213,
											"end": 17594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17213,
											"end": 17594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17213,
											"end": 17594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17721,
											"end": 17725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17761,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17748,
											"end": 17757,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17744,
											"end": 17762,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17736,
											"end": 17762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17736,
											"end": 17762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17772,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 17840,
											"end": 17841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17829,
											"end": 17838,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17825,
											"end": 17842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17816,
											"end": 17822,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17772,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 17772,
											"end": 17843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17772,
											"end": 17843,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 17772,
											"end": 17843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17853,
											"end": 17925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 17921,
											"end": 17923,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17910,
											"end": 17919,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17906,
											"end": 17924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17897,
											"end": 17903,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17853,
											"end": 17925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 17853,
											"end": 17925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17853,
											"end": 17925,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 17853,
											"end": 17925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17600,
											"end": 17932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Mediscan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"HEALTH_PROFESSIONAL_FULL()": "f0f7af4d",
							"HEALTH_PROFESSIONAL_LOW()": "585f4c49",
							"HEALTH_PROFESSIONAL_MID()": "d6770522",
							"PAYMENT_ADMIN_ROLE()": "b24b56b0",
							"USER_ADMIN_ROLE()": "f2c80089",
							"addPaymentAdmin(address)": "5ea06a9c",
							"addUserAdmin(address)": "b89f9ac1",
							"balanceForTokenForFaceHash(bytes32,address)": "24ccc1a6",
							"baseTokenBalanceForFaceHash(bytes32)": "e6d6384a",
							"getAccessLevelForAddress(address)": "51fea917",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isFaceHashRegistered(bytes32)": "09c19362",
							"payoutChainBaseTokenToFaceHash(bytes32,address)": "55f93e6e",
							"payoutTokenForFaceHash(bytes32,address,address)": "3fd2c4f1",
							"registerFaceHash(bytes32)": "dd65ab1f",
							"registeredFaceHashes(bytes32)": "2f432261",
							"removePaymentAdmin(address)": "d7b8a07a",
							"removeUserAdmin(address)": "e096cfed",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"sendChainBaseTokenToFaceHash(bytes32)": "0fa750ff",
							"sendTokenToFaceHash(bytes32,address,uint256)": "0adbbdd3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"verifyHealthWorker(address,uint256)": "48570ee6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"PayoutChainBaseTokenToFaceHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PayoutTokenForFaceHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"}],\"name\":\"RegisterFaceHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SendChainBaseTokenToFaceHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SendTokenToFaceHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_accessLevel\",\"type\":\"uint256\"}],\"name\":\"VerifyHealthWorker\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEALTH_PROFESSIONAL_FULL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEALTH_PROFESSIONAL_LOW\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEALTH_PROFESSIONAL_MID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPaymentAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addUserAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceForTokenForFaceHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"baseTokenBalanceForFaceHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAccessLevelForAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"isFaceHashRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"payoutChainBaseTokenToFaceHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"payoutTokenForFaceHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"}],\"name\":\"registerFaceHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registeredFaceHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removePaymentAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeUserAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"}],\"name\":\"sendChainBaseTokenToFaceHash\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_faceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTokenToFaceHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_accessLevel\",\"type\":\"uint256\"}],\"name\":\"verifyHealthWorker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Mediscan.sol\":\"Mediscan\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/Mediscan.sol\":{\"keccak256\":\"0x931e87e7f810ae3d85f9518b4f813a9380bb935b5a7dfe906a696e13ccb95119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c04643e154c91e07759033597711af882150c3571c54feb16e56c418dede8a4\",\"dweb:/ipfs/QmPDm8JqbLbctWNDHUMiqVRsfGETFBWTtgos7Cm9ZgL7Ec\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "src/Mediscan.sol:Mediscan",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1254,
								"contract": "src/Mediscan.sol:Mediscan",
								"label": "registeredFaceHashes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 1260,
								"contract": "src/Mediscan.sol:Mediscan",
								"label": "balanceForTokenForFaceHash",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1264,
								"contract": "src/Mediscan.sol:Mediscan",
								"label": "baseTokenBalanceForFaceHash",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/Mediscan.sol:Mediscan",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/Mediscan.sol:Mediscan",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1160
						],
						"ERC165": [
							1184
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1161,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1160,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1185,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1184,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1160,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1184,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1184,
								1196,
								378,
								1160
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1183
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1183,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1112
						]
					},
					"id": 383,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 1113,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1112,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							519
						],
						"IERC20Errors": [
							424
						],
						"IERC721Errors": [
							472
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 384,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 394,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 399,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 404,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 413,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 418,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 423,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 520,
							"src": "278:1764:3",
							"usedErrors": [
								394,
								399,
								404,
								413,
								418,
								423
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 425,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 430,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 435,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 444,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 449,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 454,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 461,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 466,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 471,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 520,
							"src": "2186:2092:3",
							"usedErrors": [
								430,
								435,
								444,
								449,
								454,
								461,
								466,
								471
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 484,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 489,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 494,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 501,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 506,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 511,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 518,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 520,
							"src": "4424:2107:3",
							"usedErrors": [
								484,
								489,
								494,
								501,
								506,
								511,
								518
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1160
						],
						"ERC20": [
							1034
						],
						"IERC20": [
							1112
						],
						"IERC20Errors": [
							424
						],
						"IERC20Metadata": [
							1138
						]
					},
					"id": 1035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1035,
							"sourceUnit": 1113,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1112,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1035,
							"sourceUnit": 1139,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1138,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1035,
							"sourceUnit": 1161,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 526,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1160,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1035,
							"sourceUnit": 520,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 528,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 424,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 531,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1160,
										"src": "1428:7:4"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1112,
										"src": "1437:6:4"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 535,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "1445:14:4"
									},
									"id": 536,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 537,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "1461:12:4"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 530,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034,
								424,
								1138,
								1112,
								1160
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 542,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 541,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 540,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 547,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 543,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 546,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 544,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 549,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 552,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 551,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 554,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 553,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 567,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 571,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1034,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1125
									],
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 577,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 576,
												"id": 578,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 574,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1034,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1131
									],
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 586,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 554,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 585,
												"id": 587,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1034,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1137
									],
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 594,
												"id": 596,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 592,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1034,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1061
									],
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 604,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 605,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1034,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 615,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 617,
													"indexExpression": {
														"id": 616,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 614,
												"id": 618,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1034,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1079
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 643,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 630,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 632,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 629,
												"id": 642,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1034,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 654,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 656,
														"indexExpression": {
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 658,
													"indexExpression": {
														"id": 657,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 653,
												"id": 659,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1034,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1099
									],
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 671,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 673,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															985
														],
														"referencedDeclaration": 925,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 670,
												"id": 683,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1034,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1111
									],
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 699,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 696,
												"id": 715,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1034,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 727,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 728,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 734,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 733,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 739,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1034,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 775,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 811,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																786
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 786,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 811,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 785,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 790,
															"initialValue": {
																"baseExpression": {
																	"id": 787,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 789,
																"indexExpression": {
																	"id": 788,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 791,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 801,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 800,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 795,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 796,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 786,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 797,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 771,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 794,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 799,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 810,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 802,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 542,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 804,
																			"indexExpression": {
																				"id": 803,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 805,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 806,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 809,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 812,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 784,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 780,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 781,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 831,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 825,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 542,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 827,
																			"indexExpression": {
																				"id": 826,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 828,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 771,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 823,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 819,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 771,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 822,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 835,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 834,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1034,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 849,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 850,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 856,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 855,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 861,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 865,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1034,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 889,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 888,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 899,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1034,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 918,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 917,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															985
														],
														"referencedDeclaration": 985,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1034,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 938,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 944,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 943,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 952,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 953,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 966,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 965,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 959,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 958,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 964,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 967,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 970,
															"indexExpression": {
																"id": 968,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 971,
														"indexExpression": {
															"id": 969,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 975,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 934,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 977,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 978,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 930,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 979,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 976,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 981,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1034,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"id": 998,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1003,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1010,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1019,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1018,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1013,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1014,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1015,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1012,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1017,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1029,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1021,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 988,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1022,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1023,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1024,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1020,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				925,
																				985
																			],
																			"referencedDeclaration": 985,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1028,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1034,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "1401:9741:4",
							"usedErrors": [
								394,
								399,
								404,
								413,
								418,
								423
							],
							"usedEvents": [
								1046,
								1055
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1112
						]
					},
					"id": 1113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1037,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1112,
							"linearizedBaseContracts": [
								1112
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1046,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1055,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1112,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1112,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1112,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1112,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1112,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1112,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1113,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1046,
								1055
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1112
						],
						"IERC20Metadata": [
							1138
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1113,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1115,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1112,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1118,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1112,
										"src": "305:6:6"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1117,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1138,
							"linearizedBaseContracts": [
								1138,
								1112
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1138,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1138,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1134,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1138,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1139,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1046,
								1055
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1160
						]
					},
					"id": 1161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1141,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1160,
							"linearizedBaseContracts": [
								1160
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1148,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1160,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1157,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1160,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1161,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1184
						],
						"IERC165": [
							1196
						]
					},
					"id": 1185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1185,
							"sourceUnit": 1197,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1163,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1196,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1166,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1196,
										"src": "687:7:8"
									},
									"id": 1167,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1165,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1184,
							"linearizedBaseContracts": [
								1184,
								1196
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1177,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1196_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1196_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1176,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1196",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1181,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1184,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1185,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1196
						]
					},
					"id": 1197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1187,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1196,
							"linearizedBaseContracts": [
								1196
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1196,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1197,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"src/Mediscan.sol": {
				"ast": {
					"absolutePath": "src/Mediscan.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1160
						],
						"ERC165": [
							1184
						],
						"ERC20": [
							1034
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1112
						],
						"IERC20Errors": [
							424
						],
						"IERC20Metadata": [
							1138
						],
						"Mediscan": [
							1691
						]
					},
					"id": 1692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1692,
							"sourceUnit": 296,
							"src": "58:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1692,
							"sourceUnit": 383,
							"src": "117:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1692,
							"sourceUnit": 1035,
							"src": "174:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1202,
										"name": "AccessControl",
										"nameLocations": [
											"252:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "252:13:10"
									},
									"id": 1203,
									"nodeType": "InheritanceSpecifier",
									"src": "252:13:10"
								}
							],
							"canonicalName": "Mediscan",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1691,
							"linearizedBaseContracts": [
								1691,
								295,
								1184,
								1196,
								378,
								1160
							],
							"name": "Mediscan",
							"nameLocation": "240:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1210,
									"mutability": "constant",
									"name": "MAX_INT",
									"nameLocation": "289:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "272:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 1209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 1207,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 1205,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "299:1:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 1206,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "302:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "299:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1208,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "308:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "299:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "f2c80089",
									"id": 1218,
									"mutability": "constant",
									"name": "USER_ADMIN_ROLE",
									"nameLocation": "340:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "316:88:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1211,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "316:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "555345525f41444d494e5f524f4c45",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "385:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
															"typeString": "literal_string \"USER_ADMIN_ROLE\""
														},
														"value": "USER_ADMIN_ROLE"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_0664b3bef248fa8e085d6e94332c9ddd0e7a0a52ea025306ddfbde4200adb107",
															"typeString": "literal_string \"USER_ADMIN_ROLE\""
														}
													],
													"expression": {
														"id": 1213,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "368:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "372:12:10",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "368:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 1216,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "368:35:10",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1212,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "358:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "358:46:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b24b56b0",
									"id": 1226,
									"mutability": "constant",
									"name": "PAYMENT_ADMIN_ROLE",
									"nameLocation": "434:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "410:94:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1219,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "5041594d454e545f41444d494e5f524f4c45",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "482:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67",
															"typeString": "literal_string \"PAYMENT_ADMIN_ROLE\""
														},
														"value": "PAYMENT_ADMIN_ROLE"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_4a76dea3a6231aa5446f85ecde36fb499385f0f3539e800a138fb9855200db67",
															"typeString": "literal_string \"PAYMENT_ADMIN_ROLE\""
														}
													],
													"expression": {
														"id": 1221,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "465:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "469:12:10",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "465:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 1224,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "465:38:10",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1220,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "455:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "455:49:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f0f7af4d",
									"id": 1234,
									"mutability": "constant",
									"name": "HEALTH_PROFESSIONAL_FULL",
									"nameLocation": "534:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "510:106:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1227,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "4845414c54485f50524f46455353494f4e414c5f46554c4c",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "588:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_FULL\""
														},
														"value": "HEALTH_PROFESSIONAL_FULL"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_7da55f512efe5292daf09333310eab2faf9821d69bb50be1291f62e35b7c0d14",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_FULL\""
														}
													],
													"expression": {
														"id": 1229,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "571:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "575:12:10",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "571:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 1232,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "571:44:10",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1228,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "561:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "561:55:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d6770522",
									"id": 1242,
									"mutability": "constant",
									"name": "HEALTH_PROFESSIONAL_MID",
									"nameLocation": "646:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "622:104:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1235,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "4845414c54485f50524f46455353494f4e414c5f4d4944",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_MID\""
														},
														"value": "HEALTH_PROFESSIONAL_MID"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_1820c1786eee8412f797280d012e4a08343ce1ef7080d45c7ca5b3f9b5612064",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_MID\""
														}
													],
													"expression": {
														"id": 1237,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "682:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "686:12:10",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "682:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 1240,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "682:43:10",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1236,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "672:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "672:54:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "585f4c49",
									"id": 1250,
									"mutability": "constant",
									"name": "HEALTH_PROFESSIONAL_LOW",
									"nameLocation": "756:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "732:104:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1243,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "732:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "4845414c54485f50524f46455353494f4e414c5f4c4f57",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "809:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_LOW\""
														},
														"value": "HEALTH_PROFESSIONAL_LOW"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_b51bc0d7bd31e27ea181c7c95641c199ba26f9081d222493ed785ad3a2f0ce09",
															"typeString": "literal_string \"HEALTH_PROFESSIONAL_LOW\""
														}
													],
													"expression": {
														"id": 1245,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "792:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "796:12:10",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "792:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 1248,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "792:43:10",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1244,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "782:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "782:54:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f432261",
									"id": 1254,
									"mutability": "mutable",
									"name": "registeredFaceHashes",
									"nameLocation": "875:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "843:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 1253,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1251,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "851:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "843:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1252,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "862:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24ccc1a6",
									"id": 1260,
									"mutability": "mutable",
									"name": "balanceForTokenForFaceHash",
									"nameLocation": "957:26:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "902:81:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1259,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1255,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "910:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "902:47:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1258,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1256,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "929:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "921:27:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6d6384a",
									"id": 1264,
									"mutability": "mutable",
									"name": "baseTokenBalanceForFaceHash",
									"nameLocation": "1024:27:10",
									"nodeType": "VariableDeclaration",
									"scope": 1691,
									"src": "989:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 1263,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1261,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "997:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "989:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1262,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1008:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7a143568e7a2e32f33c2ab85bb8cb9ff7e78d00e650d6973c8873bbdc075e811",
									"id": 1272,
									"name": "SendTokenToFaceHash",
									"nameLocation": "1064:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "1100:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1084:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1127:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1111:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1151:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1135:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:76:10"
									},
									"src": "1058:102:10"
								},
								{
									"anonymous": false,
									"eventSelector": "acc0fd4b3527d0953abdce4ac9a5f786e3d780a3b4bbefefb360a8642429e0f6",
									"id": 1278,
									"name": "SendChainBaseTokenToFaceHash",
									"nameLocation": "1171:28:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"indexed": true,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "1216:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "1200:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"indexed": true,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1243:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "1227:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:52:10"
									},
									"src": "1165:87:10"
								},
								{
									"anonymous": false,
									"eventSelector": "434adbd1794f49ffeb1ea04de9ad62fb01cc18179124cda3ce5eee58f010f969",
									"id": 1286,
									"name": "PayoutTokenForFaceHash",
									"nameLocation": "1263:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"indexed": true,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "1302:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1286:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1329:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1313:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": true,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1353:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1337:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:76:10"
									},
									"src": "1257:105:10"
								},
								{
									"anonymous": false,
									"eventSelector": "fd1d4f59cf1013ee232282cac3356b455525c6d4d04d18bed8216b7b6c2beb60",
									"id": 1292,
									"name": "PayoutChainBaseTokenToFaceHash",
									"nameLocation": "1373:30:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"indexed": true,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "1420:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1404:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"indexed": true,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1447:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1431:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:53:10"
									},
									"src": "1367:90:10"
								},
								{
									"anonymous": false,
									"eventSelector": "2224b7dff324f24f810cf3bb4055085a9fd09db933a221dea091e176f4d16c8c",
									"id": 1298,
									"name": "VerifyHealthWorker",
									"nameLocation": "1468:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"indexed": true,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1503:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1487:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": true,
												"mutability": "mutable",
												"name": "_accessLevel",
												"nameLocation": "1529:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1513:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:56:10"
									},
									"src": "1462:81:10"
								},
								{
									"anonymous": false,
									"eventSelector": "fa9941fd9436b8f798d8da6c4747847bf053207fe545c37222588db50a6742f8",
									"id": 1302,
									"name": "RegisterFaceHash",
									"nameLocation": "1554:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "1587:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1571:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:27:10"
									},
									"src": "1548:50:10"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "1625:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1646:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1304,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "1635:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "1635:30:10"
											},
											{
												"id": 1308,
												"nodeType": "PlaceholderStatement",
												"src": "1675:1:10"
											}
										]
									},
									"id": 1310,
									"name": "onlyAdmin",
									"nameLocation": "1613:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:2:10"
									},
									"src": "1604:79:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "1714:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1313,
															"name": "USER_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1735:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1312,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "1724:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1724:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1724:27:10"
											},
											{
												"id": 1316,
												"nodeType": "PlaceholderStatement",
												"src": "1761:1:10"
											}
										]
									},
									"id": 1318,
									"name": "onlyUserAdmin",
									"nameLocation": "1698:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:2:10"
									},
									"src": "1689:80:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "1803:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "PAYMENT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "1824:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1320,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "1813:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "1813:30:10"
											},
											{
												"id": 1324,
												"nodeType": "PlaceholderStatement",
												"src": "1853:1:10"
											}
										]
									},
									"id": 1326,
									"name": "onlyPaymentAdmin",
									"nameLocation": "1784:16:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:2:10"
									},
									"src": "1775:86:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "1881:324:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1330,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1902:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1922:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1926:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1922:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1329,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1891:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "1891:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "USER_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1957:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1337,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1974:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1335,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1943:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "1943:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "HEALTH_PROFESSIONAL_FULL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2017:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1342,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2043:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1340,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2003:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "2003:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "HEALTH_PROFESSIONAL_MID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "2086:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1347,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2111:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1345,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2072:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2072:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1351,
															"name": "HEALTH_PROFESSIONAL_LOW",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "2154:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1352,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2179:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1350,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2140:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2140:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2140:58:10"
											}
										]
									},
									"id": 1356,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:10"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:0:10"
									},
									"scope": 1691,
									"src": "1867:338:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "2295:317:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1364,
															"name": "HEALTH_PROFESSIONAL_FULL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2317:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1365,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "2343:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1363,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2309:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"arguments": [
															{
																"id": 1371,
																"name": "HEALTH_PROFESSIONAL_MID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "2405:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1372,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "2430:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1370,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2397:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2397:42:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"arguments": [
																{
																	"id": 1378,
																	"name": "HEALTH_PROFESSIONAL_LOW",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "2492:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1379,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "2517:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1377,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2484:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2484:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1386,
															"nodeType": "Block",
															"src": "2567:39:10",
															"statements": [
																{
																	"expression": {
																		"id": 1384,
																		"name": "MAX_INT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "2588:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1362,
																	"id": 1385,
																	"nodeType": "Return",
																	"src": "2581:14:10"
																}
															]
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "2480:126:10",
														"trueBody": {
															"id": 1383,
															"nodeType": "Block",
															"src": "2528:33:10",
															"statements": [
																{
																	"expression": {
																		"hexValue": "32",
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2549:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"functionReturnParameters": 1362,
																	"id": 1382,
																	"nodeType": "Return",
																	"src": "2542:8:10"
																}
															]
														}
													},
													"id": 1388,
													"nodeType": "IfStatement",
													"src": "2393:213:10",
													"trueBody": {
														"id": 1376,
														"nodeType": "Block",
														"src": "2441:33:10",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2462:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 1362,
																"id": 1375,
																"nodeType": "Return",
																"src": "2455:8:10"
															}
														]
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "2305:301:10",
												"trueBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "2354:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2375:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1362,
															"id": 1368,
															"nodeType": "Return",
															"src": "2368:8:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "51fea917",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccessLevelForAddress",
									"nameLocation": "2220:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2253:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2245:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:18:10"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2286:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:9:10"
									},
									"scope": 1691,
									"src": "2211:401:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "2692:51:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1398,
														"name": "registeredFaceHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "2709:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 1400,
													"indexExpression": {
														"id": 1399,
														"name": "_hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2730:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2709:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1401,
												"nodeType": "Return",
												"src": "2702:34:10"
											}
										]
									},
									"functionSelector": "09c19362",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFaceHashRegistered",
									"nameLocation": "2627:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "2656:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2648:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:15:10"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2686:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2686:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:6:10"
									},
									"scope": 1691,
									"src": "2618:125:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "2839:286:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1413,
																"name": "registeredFaceHashes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2857:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 1415,
															"indexExpression": {
																"id": 1414,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "2878:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2857:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466163652068617368206e6f742072656769737465726564",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2890:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															},
															"value": "Face hash not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2849:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "2849:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2955:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2959:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2955:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1427,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2975:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Mediscan_$1691",
																		"typeString": "contract Mediscan"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Mediscan_$1691",
																		"typeString": "contract Mediscan"
																	}
																],
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2967:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1425,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2967:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2967:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "2982:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1420,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "2934:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1419,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "2927:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1112_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2927:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1112",
																"typeString": "contract IERC20"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2942:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "2927:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2927:63:10"
											},
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1432,
																"name": "balanceForTokenForFaceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3000:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 1435,
															"indexExpression": {
																"id": 1433,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3027:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3000:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1436,
														"indexExpression": {
															"id": 1434,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "3038:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3000:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1437,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "3049:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3000:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "3000:56:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1441,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3091:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1442,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "3102:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3110:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "SendTokenToFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3071:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3071:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "EmitStatement",
												"src": "3066:52:10"
											}
										]
									},
									"functionSelector": "0adbbdd3",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenToFaceHash",
									"nameLocation": "2758:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "2786:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "2778:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2805:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "2797:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2821:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "2813:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2777:52:10"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2839:0:10"
									},
									"scope": 1691,
									"src": "2749:376:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "3205:211:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1453,
																"name": "registeredFaceHashes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "3223:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 1455,
															"indexExpression": {
																"id": 1454,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "3244:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3223:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466163652068617368206e6f742072656769737465726564",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3256:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															},
															"value": "Face hash not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3215:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "3215:68:10"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1459,
															"name": "baseTokenBalanceForFaceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3293:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1461,
														"indexExpression": {
															"id": 1460,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "3321:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3293:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1462,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3335:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3339:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3335:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3293:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "3293:51:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1467,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "3388:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3399:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3403:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3399:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1466,
														"name": "SendChainBaseTokenToFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3359:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "EmitStatement",
												"src": "3354:55:10"
											}
										]
									},
									"functionSelector": "0fa750ff",
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendChainBaseTokenToFaceHash",
									"nameLocation": "3140:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "3177:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3169:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:19:10"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3205:0:10"
									},
									"scope": 1691,
									"src": "3131:285:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "3534:337:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1485,
																"name": "registeredFaceHashes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "3552:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 1487,
															"indexExpression": {
																"id": 1486,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "3573:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3552:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466163652068617368206e6f742072656769737465726564",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3585:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															},
															"value": "Face hash not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3544:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3544:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "3544:68:10"
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3630:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1521,
														"src": "3622:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3622:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1493,
															"name": "balanceForTokenForFaceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3639:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(bytes32 => mapping(address => uint256))"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1494,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "3666:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3639:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1497,
													"indexExpression": {
														"id": 1496,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "3677:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3639:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3622:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "3718:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "3728:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1500,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "3701:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1499,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3694:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1112_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3694:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1112",
																"typeString": "contract IERC20"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3709:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1079,
														"src": "3694:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3694:41:10"
											},
											{
												"expression": {
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1507,
																"name": "balanceForTokenForFaceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3745:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 1510,
															"indexExpression": {
																"id": 1508,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "3772:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3745:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1511,
														"indexExpression": {
															"id": 1509,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3783:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3745:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1512,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "3794:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3745:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "3745:55:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1516,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "3838:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1517,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3849:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "3857:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1515,
														"name": "PayoutTokenForFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "3815:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3815:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "EmitStatement",
												"src": "3810:54:10"
											}
										]
									},
									"functionSelector": "3fd2c4f1",
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1481,
												"name": "onlyPaymentAdmin",
												"nameLocations": [
													"3517:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1326,
												"src": "3517:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3517:16:10"
										}
									],
									"name": "payoutTokenForFaceHash",
									"nameLocation": "3431:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "3462:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3454:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3481:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3473:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3498:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "3490:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3453:54:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3534:0:10"
									},
									"scope": 1691,
									"src": "3422:449:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "3980:378:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1532,
																"name": "registeredFaceHashes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "3998:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 1534,
															"indexExpression": {
																"id": 1533,
																"name": "_faceHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "4019:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3998:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466163652068617368206e6f742072656769737465726564",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4031:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															},
															"value": "Face hash not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_741958a68b35e793cb5b799eecf121c1bdaf8754e850c6efcde32b4561d7809e",
																"typeString": "literal_string \"Face hash not registered\""
															}
														],
														"id": 1531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3990:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3990:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "3990:68:10"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4076:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "4068:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"baseExpression": {
														"id": 1540,
														"name": "baseTokenBalanceForFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "4085:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1542,
													"indexExpression": {
														"id": 1541,
														"name": "_faceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "4113:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4085:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:55:10"
											},
											{
												"assignments": [
													1545,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4139:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "4134:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4134:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4181:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1546,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "4152:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4161:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4152:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "4173:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4152:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4152:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4133:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "4202:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796f7574206661696c6564",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4211:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b",
																"typeString": "literal_string \"Payout failed\""
															},
															"value": "Payout failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42d486eee70463b52369225e27fce2709665a17be45e65becee48f6af14cf90b",
																"typeString": "literal_string \"Payout failed\""
															}
														],
														"id": 1553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4194:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "4194:33:10"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1558,
															"name": "baseTokenBalanceForFaceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "4237:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1560,
														"indexExpression": {
															"id": 1559,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "4265:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4237:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1561,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "4279:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4237:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "4237:48:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1565,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "4331:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1566,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "4342:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1564,
														"name": "PayoutChainBaseTokenToFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "4300:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "4295:56:10"
											}
										]
									},
									"functionSelector": "55f93e6e",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1529,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1528,
												"name": "onlyPaymentAdmin",
												"nameLocations": [
													"3963:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1326,
												"src": "3963:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3963:16:10"
										}
									],
									"name": "payoutChainBaseTokenToFaceHash",
									"nameLocation": "3886:30:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "3925:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "3917:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3944:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "3936:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:37:10"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3980:0:10"
									},
									"scope": 1691,
									"src": "3877:481:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "4423:54:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1578,
															"name": "USER_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "4444:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1579,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "4461:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1577,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4433:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "4433:37:10"
											}
										]
									},
									"functionSelector": "b89f9ac1",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyAdmin",
												"nameLocations": [
													"4413:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "4413:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4413:9:10"
										}
									],
									"name": "addUserAdmin",
									"nameLocation": "4373:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4394:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "4386:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:18:10"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4423:0:10"
									},
									"scope": 1691,
									"src": "4364:113:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "4545:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "USER_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "4567:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1592,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "4584:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1590,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4555:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "4555:38:10"
											}
										]
									},
									"functionSelector": "e096cfed",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1587,
												"name": "onlyAdmin",
												"nameLocations": [
													"4535:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "4535:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4535:9:10"
										}
									],
									"name": "removeUserAdmin",
									"nameLocation": "4492:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4516:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "4508:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4507:18:10"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4545:0:10"
									},
									"scope": 1691,
									"src": "4483:117:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "4668:57:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "PAYMENT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4689:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1605,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "4709:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1603,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4678:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4678:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "4678:40:10"
											}
										]
									},
									"functionSelector": "5ea06a9c",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1600,
												"name": "onlyAdmin",
												"nameLocations": [
													"4658:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "4658:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4658:9:10"
										}
									],
									"name": "addPaymentAdmin",
									"nameLocation": "4615:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4639:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "4631:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:18:10"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4668:0:10"
									},
									"scope": 1691,
									"src": "4606:119:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "4796:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1617,
															"name": "PAYMENT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4818:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1618,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "4838:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1616,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4806:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4806:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "4806:41:10"
											}
										]
									},
									"functionSelector": "d7b8a07a",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "onlyAdmin",
												"nameLocations": [
													"4786:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "4786:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4786:9:10"
										}
									],
									"name": "removePaymentAdmin",
									"nameLocation": "4740:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4767:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4759:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4758:18:10"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4796:0:10"
									},
									"scope": 1691,
									"src": "4731:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "4947:431:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1631,
														"name": "_accessLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "4961:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4977:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4961:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1640,
															"name": "_accessLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "5061:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5077:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5061:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1649,
																"name": "_accessLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "5160:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5176:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5160:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1662,
															"nodeType": "Block",
															"src": "5255:60:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "556e7265636f676e697a656420616363657373206c6576656c",
																				"id": 1659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5276:27:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2",
																					"typeString": "literal_string \"Unrecognized access level\""
																				},
																				"value": "Unrecognized access level"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_9fca04001ed0d83b7946c8664279afb2a7aa9977de44c0fa315f8332f805dbe2",
																					"typeString": "literal_string \"Unrecognized access level\""
																				}
																			],
																			"id": 1658,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "5269:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5269:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1661,
																	"nodeType": "ExpressionStatement",
																	"src": "5269:35:10"
																}
															]
														},
														"id": 1663,
														"nodeType": "IfStatement",
														"src": "5156:159:10",
														"trueBody": {
															"id": 1657,
															"nodeType": "Block",
															"src": "5179:70:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1653,
																				"name": "HEALTH_PROFESSIONAL_LOW",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1250,
																				"src": "5204:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 1654,
																				"name": "_account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1624,
																				"src": "5229:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1652,
																			"name": "_grantRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "5193:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) returns (bool)"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5193:45:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1656,
																	"nodeType": "ExpressionStatement",
																	"src": "5193:45:10"
																}
															]
														}
													},
													"id": 1664,
													"nodeType": "IfStatement",
													"src": "5057:258:10",
													"trueBody": {
														"id": 1648,
														"nodeType": "Block",
														"src": "5080:70:10",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1644,
																			"name": "HEALTH_PROFESSIONAL_MID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "5105:23:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1645,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "5130:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1643,
																		"name": "_grantRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "5094:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (bytes32,address) returns (bool)"
																		}
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5094:45:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1647,
																"nodeType": "ExpressionStatement",
																"src": "5094:45:10"
															}
														]
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "4957:358:10",
												"trueBody": {
													"id": 1639,
													"nodeType": "Block",
													"src": "4980:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1635,
																		"name": "HEALTH_PROFESSIONAL_FULL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "5005:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1636,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "5031:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1634,
																	"name": "_grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "4994:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) returns (bool)"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4994:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1638,
															"nodeType": "ExpressionStatement",
															"src": "4994:46:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1667,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "5348:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1668,
															"name": "_accessLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "5358:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1666,
														"name": "VerifyHealthWorker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "5329:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5329:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "EmitStatement",
												"src": "5324:47:10"
											}
										]
									},
									"functionSelector": "48570ee6",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1628,
												"name": "onlyAdmin",
												"nameLocations": [
													"4937:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "4937:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4937:9:10"
										}
									],
									"name": "verifyHealthWorker",
									"nameLocation": "4869:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4896:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4888:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_accessLevel",
												"nameLocation": "4914:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4906:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:40:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4947:0:10"
									},
									"scope": 1691,
									"src": "4860:518:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "5452:97:10",
										"statements": [
											{
												"expression": {
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1679,
															"name": "registeredFaceHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5462:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 1681,
														"indexExpression": {
															"id": 1680,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "5483:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5462:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5496:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5462:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "5462:38:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1686,
															"name": "_faceHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "5532:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1685,
														"name": "RegisterFaceHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "5515:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "EmitStatement",
												"src": "5510:32:10"
											}
										]
									},
									"functionSelector": "dd65ab1f",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1676,
												"name": "onlyUserAdmin",
												"nameLocations": [
													"5438:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1318,
												"src": "5438:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5438:13:10"
										}
									],
									"name": "registerFaceHash",
									"nameLocation": "5393:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "_faceHash",
												"nameLocation": "5418:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5410:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:19:10"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5452:0:10"
									},
									"scope": 1691,
									"src": "5384:165:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1692,
							"src": "231:5320:10",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								1272,
								1278,
								1286,
								1292,
								1298,
								1302
							]
						}
					],
					"src": "32:5519:10"
				},
				"id": 10
			}
		}
	}
}